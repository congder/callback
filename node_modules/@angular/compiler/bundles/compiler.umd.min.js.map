{"version":3,"sources":["/Users/matsko/code/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","__symbolic","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","importAs","reexportSymbol","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","containingFile","refSymbol","getSymbolByModule","recordModuleNameForFileName","recordImportAs","findDeclaration","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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CA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ3xD,yBAA4B,SAAUv8B,QAEtC,QAASu8B,4BACL,GAAIzD,OAAQ94B,OAAOmjC,KAAK5tC,OAASA,IAqCjC,OApCAujC,OAAMq1D,WACNR,OAAOvxF,QAAQ,SAAUgyF,aACrB,GAAqBzyF,SACjBgT,GAAKy/E,YAAYrvF,MAAM,KAAMsvF,QAAU1/E,GAAG,GAAI2/E,cAAgB3/E,GAAG,GAChD4/E,WAAaD,cAAcvvF,MAAM,KAClD+P,GAAKu/E,QAAQtvF,MAAM,KAAMyvF,UAAY1/E,GAAG,GAAI2/E,UAAY3/E,GAAG,EAC/D0/E,WAAUzvF,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAO2jB,OAAMq1D,QAAQh5E,IAAInS,eAAiBrH,MACxF,IAAqB+yF,WAAYD,WAAa31D,MAAMq1D,QAAQM,UAAUzrF,cAClE0rF,YACA34F,OAAOw2B,KAAKmiE,WAAWtyF,QAAQ,SAAUwoB,MAAQjpB,KAAKipB,MAAQ8pE,UAAU9pE,QAE5E2pE,WAAWnyF,QAAQ,SAAUuyF,UACzB,GAAIA,SAASt3F,OAAS,EAClB,OAAQs3F,SAAS,IACb,IAAK,IAMD,KACJ,KAAK,IACDhzF,KAAKgzF,SAASlzF,UAAU,IAAM8xF,OAC9B,MACJ,KAAK,IACD5xF,KAAKgzF,SAASlzF,UAAU,IAAM+xF,MAC9B,MACJ,KAAK,IACD7xF,KAAKgzF,SAASlzF,UAAU,IAAMiyF,MAC9B,MACJ,SACI/xF,KAAKgzF,UAAYlB,YAK9B30D,MAmNX,MA1PAtjC,WAAU+mC,yBAA0Bv8B,QA+CpCu8B,yBAAyBzmC,UAAU84F,YAMnC,SAAU7sF,QAAS4mB,SAAUkmE,aACzB,GAAIA,YAAY/nE,KAAK,SAAUgoE,QAAU,MAAOA,QAAO93F,OAASmuC,iBAAiBnuC,OAC7E,OAAO,CAEX,IAAI+K,QAAQtJ,QAAQ,MAAQ,EAAG,CAC3B,GAAIqJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAI8sF,YAAY/nE,KAAK,SAAUgoE,QAAU,MAAOA,QAAO93F,OAASkuC,uBAAuBluC,OAGnF,OAAO,EAIf,SADyCzB,KAAK44F,QAAQpsF,QAAQiB,gBAAkBzN,KAAK44F,QAAiB,SAC3ExlE,WAO/B4T,yBAAyBzmC,UAAUi5F,WAKnC,SAAUhtF,QAAS8sF,aACf,GAAIA,YAAY/nE,KAAK,SAAUgoE,QAAU,MAAOA,QAAO93F,OAASmuC,iBAAiBnuC,OAC7E,OAAO,CAEX,IAAI+K,QAAQtJ,QAAQ,MAAQ,EAAG,CAC3B,GAAIqJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAI8sF,YAAY/nE,KAAK,SAAUgoE,QAAU,MAAOA,QAAO93F,OAASkuC,uBAAuBluC,OAEnF,OAAO,EAGf,QAASzB,KAAK44F,QAAQpsF,QAAQiB,gBA0BlCu5B,yBAAyBzmC,UAAUyzB,gBAcnC,SAAUxnB,QAAS4mB,SAAUC,aACrBA,cAEAD,SAAWpzB,KAAKy5F,kBAAkBrmE,WAItC5mB,QAAUA,QAAQiB,cAClB2lB,SAAWA,SAAS3lB,aACpB,IAAqB8c,KAAM4E,gBAAgB3iB,QAAU,IAAM4mB,SAC3D,OAAI7I,QAGJA,IAAM4E,gBAAgB,KAAOiE,YACVa,gBAAgBC,OAMvC8S,yBAAyBzmC,UAAUk5F,kBAInC,SAAUrmE,UAAY,MAAOilE,eAAcjlE,WAAaA,UAIxD4T,yBAAyBzmC,UAAUogF,+BAGnC,WAAc,MAAO,gBAKrB35C,yBAAyBzmC,UAAUm5F,iBAInC,SAAUj4F,MACN,GAAIA,KAAKgM,cAAc6Q,WAAW,MAAO,CAKrC,OAAS/Z,OAAO,EAAMF,IAJK,8BAAgC5C,KAAO,qDAC5CA,KAAK0B,MAAM,GAAK,cACtB1B,KAAO,sFAKvB,OAAS8C,OAAO,IAOxByiC,yBAAyBzmC,UAAUo5F,kBAInC,SAAUl4F,MACN,GAAIA,KAAKgM,cAAc6Q,WAAW,MAAO,CAGrC,OAAS/Z,OAAO,EAAMF,IAFK,+BAAiC5C,KAAO,qDAC7CA,KAAK0B,MAAM,GAAK;oHAItC,OAASoB,OAAO,IAMxByiC,yBAAyBzmC,UAAUmzB,qBAGnC,WAAc,MAAOlzB,QAAOw2B,KAAKh3B,KAAK44F,UAKtC5xD,yBAAyBzmC,UAAUq5F,gCAInC,SAAUxmE,UACN,MAAO9wB,qBAAoB8wB,WAQ/B4T,yBAAyBzmC,UAAUs5F,6BAMnC,SAAUC,cAAeC,iBAAkB91F,KACvC,GAAqBy2B,MAAO,GACPs/D,OAAS/1F,IAAI+B,WAAW5C,OACxBs4D,SAA4B,IACjD,IAAItsC,uBAAuB0qE,gBAA0B,IAAR71F,KAAqB,MAARA,IACtD,GAAmB,gBAARA,KACPy2B,KAAO,SAEN,CACD,GAAqBu/D,mBAAoBh2F,IAAIuH,MAAM,yBAC/CyuF,oBAAoD,GAA/BA,kBAAkB,GAAGn4F,SAC1C45D,SAAW,uCAAyCq+B,iBAAmB,IAAM91F,KAIzF,OAASM,MAAOm3D,SAAUp4D,MAAO02F,OAASt/D,OAEvCsM,0BACT+wD,uBA6CEmC,UAAa,WACb,QAASA,aACLl6F,KAAKm6F,eAAgB,EAibzB,MAjaAD,WAAU35F,UAAU65F,YAMpB,SAAUvuF,QAASqkB,SAAUmqE,kBACJ,KAAjBA,eAA2BA,aAAe,GAC9C,IAAqBC,kBAAmB9qE,wBAAwB3jB,QAGhE,OAFAA,SAAUyjB,cAAczjB,SACxBA,QAAU7L,KAAKu6F,kBAAkB1uF,SAC1B7L,KAAKw6F,cAAc3uF,QAASqkB,SAAUmqE,cAAgBC,kBAMjEJ,UAAU35F,UAAUg6F,kBAIpB,SAAU1uF,SAEN,MADAA,SAAU7L,KAAKy6F,mCAAmC5uF,SAC3C7L,KAAK06F,8BAA8B7uF,UAM9CquF,UAAU35F,UAAUk6F,mCAIpB,SAAU5uF,SAEN,MAAOA,SAAQrJ,QAAQm4F,0BAA2B,WAE9C,IAAK,GADDj4F,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,OAAOc,GAAE,GAAK,OAOtBw3F,UAAU35F,UAAUm6F,8BAIpB,SAAU7uF,SAEN,MAAOA,SAAQrJ,QAAQo4F,kBAAmB,WAEtC,IAAK,GADDl4F,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,IAAqB4uB,MAAO9tB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAI,GACjE,OAAOA,GAAE,GAAK8tB,QAStB0pE,UAAU35F,UAAUi6F,cAMpB,SAAU3uF,QAASgvF,cAAeR,cAC9B,GAAqBS,eAAgB96F,KAAK+6F,iCAAiClvF,QAU3E,OARAA,SAAU7L,KAAKg7F,6BAA6BnvF,SAC5CA,QAAU7L,KAAKi7F,kBAAkBpvF,SACjCA,QAAU7L,KAAKk7F,yBAAyBrvF,SACxCA,QAAU7L,KAAKm7F,2BAA2BtvF,SACtCgvF,gBACAhvF,QAAU7L,KAAKo7F,gBAAgBvvF,QAASgvF,cAAeR,eAE3DxuF,QAAUA,QAAU,KAAOivF,cACpBjvF,QAAQzI,QAMnB82F,UAAU35F,UAAUw6F,iCAIpB,SAAUlvF,SAEN,GACqBnJ,GADA24F,EAAI,EAGzB,KADAC,0BAA0B9jE,UAAY,EACmB,QAAjD90B,EAAI44F,0BAA0BzgB,KAAKhvE,WAAoB,CAE3DwvF,GAD4B34F,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAIA,EAAE,IACvD,OAEhB,MAAO24F,IAMXnB,UAAU35F,UAAU06F,kBAIpB,SAAUpvF,SACN,MAAO7L,MAAKu7F,kBAAkB1vF,QAAS2vF,gBAAiBx7F,KAAKy7F,yBAMjEvB,UAAU35F,UAAU26F,yBAIpB,SAAUrvF,SACN,MAAO7L,MAAKu7F,kBAAkB1vF,QAAS6vF,uBAAwB17F,KAAK27F,gCAQxEzB,UAAU35F,UAAUg7F,kBAMpB,SAAU1vF,QAAS+vF,OAAQC,cAEvB,MAAOhwF,SAAQrJ,QAAQo5F,OAAQ,WAE3B,IAAK,GADDl5F,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,IAAIc,EAAE,GAAI,CAGN,IAAK,GAFgBsV,OAAQtV,EAAE,GAAG8G,MAAM,KACnB6xF,KACKtwF,EAAI,EAAGA,EAAIiN,MAAMlW,OAAQiJ,IAAK,CACpD,GAAqB0T,GAAIzG,MAAMjN,GAAG3H,MAClC,KAAKqb,EACD,KACJ48E,GAAEt0F,KAAK80F,aAAaC,0BAA2Br9E,EAAG/b,EAAE,KAExD,MAAO24F,GAAEx1F,KAAK,KAGd,MAAOi2F,2BAA4Bp5F,EAAE,MAUjDw3F,UAAU35F,UAAUo7F,8BAMpB,SAAUr6D,KAAMrQ,KAAMb,QAClB,MAAIa,MAAK/tB,QAAQ64F,gBAAkB,EACxB/7F,KAAKy7F,uBAAuBn6D,KAAMrQ,KAAMb,QAGxCkR,KAAOrQ,KAAOb,OAAS,KAAOa,KAAO,IAAMqQ,KAAOlR,QASjE8pE,UAAU35F,UAAUk7F,uBAMpB,SAAUn6D,KAAMrQ,KAAMb,QAClB,MAAOkR,MAAOrQ,KAAKzuB,QAAQu5F,cAAe,IAAM3rE,QAMpD8pE,UAAU35F,UAAU46F,2BAIpB,SAAUtvF,SACN,MAAOmwF,uBAAsBxzF,OAAO,SAAU9B,OAAQ0O,SAAW,MAAO1O,QAAOlE,QAAQ4S,QAAS,MAASvJ,UAQ7GquF,UAAU35F,UAAU66F,gBAMpB,SAAUvvF,QAASgvF,cAAeR,cAC9B,GAAI92D,OAAQvjC,IACZ,OAAO2vB,cAAa9jB,QAAS,SAAU2kB,MACnC,GAAqBN,UAAWM,KAAKN,SAChBC,QAAUK,KAAKL,OASpC,OARwB,KAApBK,KAAKN,SAAS,GACdA,SACIqT,MAAM04D,eAAezrE,KAAKN,SAAU2qE,cAAeR,aAAc92D,MAAM42D,gBAEtE3pE,KAAKN,SAAS5R,WAAW,WAAakS,KAAKN,SAAS5R,WAAW,cACpEkS,KAAKN,SAAS5R,WAAW,UAAYkS,KAAKN,SAAS5R,WAAW,gBAC9D6R,QAAUoT,MAAM63D,gBAAgB5qE,KAAKL,QAAS0qE,cAAeR,eAE1D,GAAI5pE,SAAQP,SAAUC,YAUrC+pE,UAAU35F,UAAU07F,eAOpB,SAAU/rE,SAAU2qE,cAAeR,aAAc6B,QAC7C,GAAI34D,OAAQvjC,IACZ,OAAOkwB,UAAS1mB,MAAM,KACjB5D,IAAI,SAAUqrB,MAAQ,MAAOA,MAAK7tB,OAAOoG,MAAM2yF,wBAC/Cv2F,IAAI,SAAUw2F,WACf,GAAIC,aAAcD,UAAU,GAAIE,WAAaF,UAAUj5F,MAAM,EAW7D,QAVkC,SAAUk5F,aACxC,MAAI94D,OAAMg5D,sBAAsBF,YAAaxB,eAClCqB,OACH34D,MAAMi5D,0BAA0BH,YAAaxB,cAAeR,cAC5D92D,MAAMk5D,oBAAoBJ,YAAaxB,cAAeR,cAGnDgC,aAGIA,cAAczzF,OAAO0zF,YAAYz2F,KAAK,OAExDA,KAAK,OAOdq0F,UAAU35F,UAAUg8F,sBAKpB,SAAUrsE,SAAU2qE,eAEhB,OAD0B76F,KAAK08F,kBAAkB7B,eACtCxvF,KAAK6kB,WAMpBgqE,UAAU35F,UAAUm8F,kBAIpB,SAAU7B,eACN,GAAqB8B,KAAM,MACNC,IAAM,KAE3B,OADA/B,eAAgBA,cAAcr4F,QAAQm6F,IAAK,OAAOn6F,QAAQo6F,IAAK,OACxD,GAAIvnF,QAAO,KAAOwlF,cAAgB,IAAMgC,kBAAmB,MAQtE3C,UAAU35F,UAAUk8F,oBAMpB,SAAUvsE,SAAU2qE,cAAeR,cAE/B,MAAOr6F,MAAK88F,0BAA0B5sE,SAAU2qE,cAAeR,eAQnEH,UAAU35F,UAAUu8F,0BAMpB,SAAU5sE,SAAU2qE,cAAeR,cAG/B,GADA0C,gBAAgBvlE,UAAY,EACxBulE,gBAAgB1xF,KAAK6kB,UAAW,CAChC,GAAqB8sE,aAAch9F,KAAKm6F,cAAgB,IAAME,aAAe,IAAMQ,aACnF,OAAO3qE,UACF1tB,QAAQy6F,4BAA6B,SAAUC,IAAKhtE,UACrD,MAAOA,UAAS1tB,QAAQ,kBAAmB,SAAUie,EAAGs5C,OAAQojC,MAAOnjC,OACnE,MAAOD,QAASijC,YAAcG,MAAQnjC,UAGzCx3D,QAAQu6F,gBAAiBC,YAAc,KAEhD,MAAOnC,eAAgB,IAAM3qE,UAQjCgqE,UAAU35F,UAAUi8F,0BAMpB,SAAUtsE,SAAU2qE,cAAeR,cAC/B,GAAI92D,OAAQvjC,KACSo9F,KAAO,kBAC5BvC,eAAgBA,cAAcr4F,QAAQ46F,KAAM,SAAU38E,GAElD,IAAK,GADDzI,UACKpW,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCoW,MAAMpW,GAAK,GAAKC,UAAUD,GAE9B,OAAOoW,OAAM,IAEjB,IAAqBgd,UAAW,IAAM6lE,cAAgB,IACjCwC,mBAAqB,SAAU5+E,GAChD,GAAqB6+E,SAAU7+E,EAAErb,MACjC,KAAKk6F,QACD,MAAO,EAEX,IAAI7+E,EAAEvb,QAAQ44F,4BAA8B,EACxCwB,QAAU/5D,MAAMu5D,0BAA0Br+E,EAAGo8E,cAAeR,kBAE3D,CAED,GAAqB1sD,GAAIlvB,EAAEjc,QAAQu6F,gBAAiB,GACpD,IAAIpvD,EAAE7rC,OAAS,EAAG,CACd,GAAqBg3C,SAAUnL,EAAEniC,MAAM,kBACnCstC,WACAwkD,QAAUxkD,QAAQ,GAAK9jB,SAAW8jB,QAAQ,GAAKA,QAAQ,KAInE,MAAOwkD,UAEUC,YAAc,GAAIC,cAAattE,SACpDA,UAAWqtE,YAAYptE,SAMvB,KALA,GAEqBpqB,KAFA03F,eAAiB,GACjB7tB,WAAa,EAEb8tB,IAAM,sBACNC,WAAaztE,SAAShtB,QAAQ44F,2BACb,QAA9B/1F,IAAM23F,IAAI7iB,KAAK3qD,YAAqB,CACxC,GAAqBkmE,WAAYrwF,IAAI,GAChBkrB,KAAOf,SAAS/sB,MAAMysE,WAAY7pE,IAAIX,OAAOhC,MAIlEq6F,kBADkC7tB,YAAc+tB,WAAaN,mBAAmBpsE,MAAQA,MACzD,IAAMmlE,UAAY,IACjDxmB,WAAa8tB,IAAIlmE,UAIrB,MAFAimE,iBAAkBJ,mBAAmBntE,SAAShqB,UAAU0pE,aAEjD2tB,YAAYK,QAAQH,iBAM/BvD,UAAU35F,UAAUy6F,6BAIpB,SAAU9qE,UACN,MAAOA,UAAS1tB,QAAQq7F,oBAAqBC,sBACxCt7F,QAAQu7F,aAAchC,gBAExB7B,aAEPsD,aAAgB,WAChB,QAASA,cAAattE,UAClB,GAAIqT,OAAQvjC,IACZA,MAAK8kE,gBACL9kE,KAAKoF,MAAQ,EAGb8qB,SAAWA,SAAS1tB,QAAQ,gBAAiB,SAAUie,EAAGu9E,MACtD,GAAqBC,WAAY,QAAU16D,MAAMn+B,MAAQ,IAGzD,OAFAm+B,OAAMuhC,aAAa/9D,KAAKi3F,MACxBz6D,MAAMn+B,QACC64F,YAIXj+F,KAAKk+F,SAAWhuE,SAAS1tB,QAAQ,4BAA6B,SAAUie,EAAG09E,OAAQ1pF,KAC/E,GAAqBwpF,WAAY,QAAU16D,MAAMn+B,MAAQ,IAGzD,OAFAm+B,OAAMuhC,aAAa/9D,KAAK0N,KACxB8uB,MAAMn+B,QACC+4F,OAASF,YAsBxB,MAfAT,cAAaj9F,UAAUq9F,QAIvB,SAAUztE,SACN,GAAIoT,OAAQvjC,IACZ,OAAOmwB,SAAQ3tB,QAAQ,gBAAiB,SAAUgiE,GAAIp/D,OAAS,MAAOm+B,OAAMuhC,cAAc1/D,UAK9Fo4F,aAAaj9F,UAAU4vB,QAGvB,WAAc,MAAOnwB,MAAKk+F,UACnBV,gBAEP7C,0BAA4B,4EAC5BC,kBAAoB,kEACpBU,0BAA4B,2EAC5BS,cAAgB,iBAEhB+B,qBAAuB,oBACvBM,aAAe,kDAGf5C,gBAAkB,GAAInmF,QAAO,IAAM0mF,cAAgBqC,aAAc,OACjE1C,uBAAyB,GAAIrmF,QAAO,IAAMyoF,qBAAuBM,aAAc,OAC/EtC,0BAA4BC,cAAgB,iBAC5CkB,4BAA8B,uCAC9BjB,uBACA,YACA,aACA,mBACA,eAKAG,qBAAuB,sCACvBU,kBAAoB,6BACpBE,gBAAkB,oBAClBgB,aAAe,WACfF,oBAAsB,mBACtBtuE,WAAa,uBASbG,oBAAsB,2CAStBO,QAAU,wDACVU,SAAW,UACXQ,WAAa,IACbD,YAAc,IACdZ,kBAAoB,UACpBG,QAAW,WACX,QAASA,SAAQP,SAAUC,SACvBnwB,KAAKkwB,SAAWA,SAChBlwB,KAAKmwB,QAAUA,QAEnB,MAAOM,YA4BPW,wBAA2B,WAC3B,QAASA,yBAAwBpB,cAAeO,QAC5CvwB,KAAKgwB,cAAgBA,cACrBhwB,KAAKuwB,OAASA,OAElB,MAAOa,4BAqDPitE,wBAA2B,WAC3B,QAASA,yBAAwB58F,KAAM+T,UAAWurB,UAC9C/gC,KAAKyB,KAAOA,KACZzB,KAAKwV,UAAYA,UACjBxV,KAAK+gC,SAAWA,SAEpB,MAAOs9D,4BAEPC,mBAAsB,WACtB,QAASA,oBAAmBv+D,UAAWw+D,UAAWz9D,aAAc09D,UAAWn1F,MACvErJ,KAAK+/B,UAAYA,UACjB//B,KAAKu+F,UAAYA,UACjBv+F,KAAK8gC,aAAeA,aACpB9gC,KAAKw+F,UAAYA,UACjBx+F,KAAKqJ,KAAOA,KAEhB,MAAOi1F,uBAEP12D,cAAiB,WACjB,QAASA,eAAc8jB,cACnB1rD,KAAK0rD,aAAeA,aACpB1rD,KAAKy+F,WAAa,GAAIvE,WAmG1B,MA5FAtyD,eAAcrnC,UAAUm+F,iBAKxB,SAAU3+D,UAAW2vB,MACjB,GAAqBzX,UAA8ByX,KAAc,QACjE,OAAO1vD,MAAK2+F,eAAe5+D,UAAW2vB,KAAM,GAAI9X,4BAC5CC,OAAQI,SAASJ,OACjBC,UAAWG,SAASH,UACpBtiC,UAAW7N,oBAAoB+nD,KAAKtpD,QACpCpG,KAAK4+F,eAAelvC,OAAO,IASnC9nB,cAAcrnC,UAAUs+F,cAOxB,SAAU9+D,UAAW2vB,KAAMxD,WAAY/qB,MAEnC,WADa,KAATA,OAAmBA,KAAOnhC,KAAK4+F,eAAelvC,OAC3C1vD,KAAK2+F,eAAe5+D,UAAW2vB,KAAMxD,WAAY/qB,MAAM,IAMlEyG,cAAcrnC,UAAUq+F,eAIxB,SAAUlvC,MACN,MAA0BA,MAAc,SAAE1X,gBAAkB5R,kBAAkBC,UAUlFuB,cAAcrnC,UAAUo+F,eAQxB,SAAU5+D,UAAW2vB,KAAMxD,WAAY/qB,KAAM29D,uBACzC,GAAIv7D,OAAQvjC,KACS++F,iBAAmB7yC,WAAWrU,OAAOjyC,IAAI,SAAUo5F,YAAc,MAAO13E,SAAQic,MAAM07D,cAAcD,WAAY79D,SAChHL,eACrBorB,YAAWpU,UAAUjxC,QAAQ,SAAUymD,UACnC,GAAqB4xC,WAAYH,iBAAiBj9F,MAElDi9F,kBAAiBh4F,KAAsB,MACvC+5B,aAAa/5B,KAAK,GAAIs3F,yBAAwBhtE,iBAAiB,MAAOi8B,SAAU,SAAUhqD,OAAS,MAAOy7F,kBAAiBG,WAAan/D,UAAU9Z,WAAW3iB,WAIjK,IAAqBi7F,WAAYltE,iBAAiBytE,sBAAwBpvC,KAAO,MAC5DlqC,KAAOO,SAASw4E,WAChC/9E,IAAIgG,WAAWu4E,iBAAkB,GAAI7+D,WAAUxU,cAAeu6D,aAAaC,UAC3EluD,WAAW,KAAM8mE,uBAAyB7mE,aAAaC,QACxDD,aAAaC,MAAOD,aAAakI,UAGrC,OADAJ,WAAU9G,WAAWlyB,KAAKye,MACnB,GAAI84E,oBAAmBv+D,UAAWw+D,UAAWz9D,aAAcK,KAAM+qB,aAO5EtkB,cAAcrnC,UAAU0+F,cAKxB,SAAUvjD,MAAOva,MACb,MAAOA,MAAOnhC,KAAKy+F,WAAWrE,YAAY1+C,MAvH/B,oBADH,kBAwHoEA,OAEzE9T,iBAyBPpW,sBAAwB,wBACxB2tE,kBAAoB,GAAIn7E,MAAK,MAAO,WAAY,WAAY,SAAU,UAGtEo7E,SAAW,wCACXC,aAAe,GAAIhqF,QAAO,KAAO+pF,SAAW,KAC5CE,kBAAoB,GAAIjqF,QAAO,IAAM+pF,SAAW,QAAS,KAkCzDttE,kBAAqB,WACrB,QAASA,sBAmFT,MA5EAA,mBAAkBvxB,UAAU01C,aAK5B,SAAU99B,QAAS3U,SACf,MAAI27F,mBAAkBprE,IAAI5b,QAAQ1W,OAAS6vB,2BAA2BnZ,QAAQ7K,OAGnE,GAAInD,SAAQgO,QAAQ1W,KAAMmI,SAAS5J,KAAMmY,QAAQ7K,OAAQ6K,QAAQ9N,SAAU8N,QAAQnO,WAAYmO,QAAQkjC,gBAAiBljC,QAAQ/N,eAEpI,GAAID,SAAQgO,QAAQ1W,KAAM0W,QAAQ7K,MAAO1D,SAAS5J,KAAMmY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQkjC,gBAAiBljC,QAAQ/N,gBAO3I0nB,kBAAkBvxB,UAAU66C,eAK5B,SAAUswB,UAAWloE,SACjB,MAAOkoE,WAAUjqE,OAAS+vB,sBAAwBk6C,UAAY,MAOlE55C,kBAAkBvxB,UAAUw0C,UAK5B,SAAUxkC,KAAM/M,SAEZ,MADkC+M,MAAKjN,MAAMkI,MAAM6zF,cAExC,GAAI7pE,MAAK/D,YAAYlhB,KAAKjN,OAAOd,QAAQ88F,kBAAmB,KAAM/uF,KAAKvG,YAE3E,MAOX8nB,kBAAkBvxB,UAAU+6C,aAK5B,SAAUswB,QAASpoE,SAAW,MAAOooE,UAMrC95C,kBAAkBvxB,UAAUw6C,eAK5B,SAAUu5B,UAAW9wE,SAAW,MAAO8wE,YAMvCxiD,kBAAkBvxB,UAAU26C,mBAK5B,SAAUq5B,cAAe/wE,SAAW,MAAO+wE,gBACpCziD,qBAsBPU,cAAgB,OAAQ,MAAO,MAAO,MAAO,OAAQ,SA8BrDJ,gBAAmB,WACnB,QAASA,iBAAgBvoB,MAAO01F,SAAUvtE,QACtChyB,KAAK6J,MAAQA,MACb7J,KAAKu/F,SAAWA,SAChBv/F,KAAKgyB,OAASA,OAElB,MAAOI,oBAEPK,eAAkB,SAAUhoB,QAE5B,QAASgoB,gBAAe9nB,KAAM+wD,UAC1B,MAAOjxD,QAAOmjC,KAAK5tC,KAAM2K,KAAM+wD,WAAa17D,KAEhD,MAJAC,WAAUwyB,eAAgBhoB,QAInBgoB,gBACT4nC,YAMEloC,UAAa,WACb,QAASA,aACLnyB,KAAKqyB,YAAa,EAClBryB,KAAKgyB,UA4ET,MArEAG,WAAU5xB,UAAU01C,aAKpB,SAAU99B,QAAS3U,SACf,MAAO,IAAI2G,SAAQgO,QAAQ1W,KAAM0W,QAAQ7K,MAAO1D,SAAS5J,KAAMmY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQkjC,gBAAiBljC,QAAQ/N,gBAO3I+nB,UAAU5xB,UAAU66C,eAKpB,SAAUswB,UAAWloE,SAAW,MAAOkoE,YAMvCv5C,UAAU5xB,UAAUw0C,UAKpB,SAAUxkC,KAAM/M,SAAW,MAAO+M,OAMlC4hB,UAAU5xB,UAAU+6C,aAKpB,SAAUswB,QAASpoE,SAAW,MAAOooE,UAMrCz5C,UAAU5xB,UAAUw6C,eAKpB,SAAUspB,IAAK7gE,SAEX,MADAxD,MAAKqyB,YAAa,EACC,UAAZgyC,IAAIj+D,KAAmBksB,kBAAkB+xC,IAAKrkE,KAAKgyB,QACtDgB,mBAAmBqxC,IAAKrkE,KAAKgyB,SAOrCG,UAAU5xB,UAAU26C,mBAKpB,SAAUgxB,QAAS1oE,SACf,KAAM,IAAIgB,OAAM,0BAEb2tB,aAgDPqtE,mBACAC,QAAS,EACTC,aAAc,EACdC,UAAW,EAEfH,mBAAkBA,kBAAkBC,SAAW,UAC/CD,kBAAkBA,kBAAkBE,cAAgB,eACpDF,kBAAkBA,kBAAkBG,WAAa,WAIjD,IAAIC,eAAiB,WACjB,QAASA,eAAcn+F,KAAMkT,WAAYvO,KAAM4D,YAC3ChK,KAAKyB,KAAOA,KACZzB,KAAK2U,WAAaA,WAClB3U,KAAKoG,KAAOA,KACZpG,KAAKgK,WAAaA,WAClBhK,KAAK6/F,UAAY7/F,KAAKoG,OAASo5F,kBAAkBE,aACjD1/F,KAAKy8B,YAAcz8B,KAAKoG,OAASo5F,kBAAkBG,UAEvD,MAAOC,kBAKPE,cAAiB,WACjB,QAASA,eAAcC,YAAa7jC,qBAAsB0hB,gBAAiBn7C,MAAOu9D,eAC9E,GAAIz8D,OAAQvjC,IACZA,MAAK+/F,YAAcA,YACnB//F,KAAKk8D,qBAAuBA,qBAC5Bl8D,KAAK49E,gBAAkBA,gBACvB59E,KAAKggG,cAAgBA,cACrBhgG,KAAKigG,YAAc,GAAIt3E,KACvB3oB,KAAKkgG,WAAa,GAAIv3E,KACtB8Z,MAAM57B,QAAQ,SAAUs5F,MAAQ,MAAO58D,OAAM08D,YAAYz/E,IAAI2/E,KAAK1+F,KAAM0+F,QA8iB5E,MAziBAL,eAAcv/F,UAAU6/F,aAGxB,WAAc,MAAO38F,OAAMsgB,KAAK/jB,KAAKkgG,WAAWn+F,WAOhD+9F,cAAcv/F,UAAU8/F,gCAMxB,SAAU9hB,QAAS+hB,gBAAiBt2F,YAChC,GAAIu5B,OAAQvjC,IACZ,IAAIu+E,QAAQ9nC,eAAgB,CACxB,GAAqB8pD,gBAUrB,OATA//F,QAAOw2B,KAAKunD,QAAQ9nC,gBAAgB5vC,QAAQ,SAAUusB,UAClD,GAAqBze,YAAa4pE,QAAQ9nC,eAAerjB,SAC/B,iBAAfze,YACP4uB,MAAMi9D,qBAAqBptE,SAAUze,YAAY,EAAM3K,cAAgBu2F,cAGvEh9D,MAAM8xB,aAAa,uCAA0CjiC,SAAW,8DAAkEze,WAAa,YAAgBA,YAAa,IAAK3K,cAG1Lu2F,aAAa36F,IAAI,SAAUypB,MAAQ,MAAOkU,OAAMk9D,yBAAyBH,gBAAiBjxE,QAErG,MAAO,OAOXywE,cAAcv/F,UAAUmgG,6BAKxB,SAAUniB,QAASv0E,YACf,GAAIu5B,OAAQvjC,IACZ,IAAIu+E,QAAQ5lC,cAAe,CACvB,GAAqBgoD,qBAUrB,OATAngG,QAAOw2B,KAAKunD,QAAQ5lC,eAAe9xC,QAAQ,SAAUusB,UACjD,GAAqBze,YAAa4pE,QAAQ5lC,cAAcvlB,SAC9B,iBAAfze,YACP4uB,MAAMq9D,WAAWxtE,SAAUze,WAAY3K,cAAgB22F,mBAGvDp9D,MAAM8xB,aAAa,+BAAkCjiC,SAAW,8DAAkEze,WAAa,YAAgBA,YAAa,IAAK3K,cAGlL22F,kBAEX,MAAO,OAOXb,cAAcv/F,UAAUo1D,mBAKxB,SAAUryD,MAAO0G,YACb,GAAqB62F,YAAa72F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAyB5G,KAAK+/F,YAAYpqC,mBAAmBryD,MAAOu9F,WAAY7gG,KAAKk8D,qBAI1G,OAHIt1D,MACA5G,KAAK8gG,8BAA8Bl6F,IAAIorB,OAAQhoB,YACnDhK,KAAK+gG,YAAYn6F,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADAtZ,MAAKq1D,aAAa,GAAK/7C,EAAGtP,YACnBhK,KAAK+/F,YAAYhqC,qBAAqB,QAAS8qC,cAY9Df,cAAcv/F,UAAUygG,2BASxB,SAAUvrC,YAAanyD,MAAO0G,WAAYi3F,qBAAsBC,YAAaC,YAEzE,IAAK,GADgBlyC,UAAWjvD,KAAKohG,uBAAuB3rC,YAAanyD,MAAO0G,YACtDe,EAAI,EAAGA,EAAIkkD,SAASntD,OAAQiJ,IAAK,CACvD,GAAqBqkD,SAAUH,SAASlkD,EACpCqkD,SAAQ6E,SACRktC,WAAWp6F,KAAK,GAAI6uC,aAAYwZ,QAAQn7C,IAAKm7C,QAAQ3tD,KAAMuI,aAEtDolD,QAAQz6C,WACb3U,KAAKqhG,kBAAkBjyC,QAAQn7C,IAAKm7C,QAAQz6C,WAAY3K,WAAYi3F,qBAAsBC,cAG1FD,qBAAqBl6F,MAAMqoD,QAAQn7C,IAAK,KACxCjU,KAAKshG,iBAAiBlyC,QAAQn7C,IAAK,KAAMjK,WAAYi3F,qBAAsBC,gBAUvFpB,cAAcv/F,UAAU6gG,uBAMxB,SAAU3rC,YAAanyD,MAAO0G,YAC1B,GAAIu5B,OAAQvjC,KACS6gG,WAAa72F,WAAWD,MAAM/D,UACnD,KACI,GAAqBu7F,gBAAiBvhG,KAAK+/F,YAAYvqC,sBAAsBC,YAAanyD,MAAOu9F,WAQjG,OAPA7gG,MAAK8gG,8BAA8BS,eAAevvE,OAAQhoB,YAC1Du3F,eAAe/sC,iBAAiB3tD,QAAQ,SAAUuoD,SAC1CA,QAAQz6C,YACR4uB,MAAMw9D,YAAY3xC,QAAQz6C,WAAY3K,cAG9Cu3F,eAAeltE,SAASxtB,QAAQ,SAAU26F,SAAWj+D,MAAM8xB,aAAamsC,QAASx3F,WAAYkwD,gBAAgBC,WACtGonC,eAAe/sC,iBAE1B,MAAwBl7C,GAEpB,MADAtZ,MAAKq1D,aAAa,GAAK/7C,EAAGtP,iBAYlC81F,cAAcv/F,UAAU+gG,iBAQxB,SAAU7/F,KAAM6B,MAAO0G,WAAYi3F,qBAAsBC,aACjDjuE,kBAAkBxxB,OAClBA,KAAOA,KAAKyE,UAAU,GAClB5C,OACAtD,KAAKq1D,aAAa,8LAC6FrrD,WAAYkwD,gBAAgBE,OAE/Ip6D,KAAKyhG,gBAAgBhgG,KAAM6B,MAAO0G,WAAYi3F,qBAAsBC,cAGpEA,YAAYn6F,KAAK,GAAI64F,eAAcn+F,KAAMzB,KAAK+/F,YAAYhqC,qBAAqBzyD,MAAO,IAAKk8F,kBAAkBE,aAAc11F,cAYnI81F,cAAcv/F,UAAUigG,qBASxB,SAAU/+F,KAAMkT,WAAY+jC,OAAQ1uC,WAAYi3F,qBAAsBC,aAClE,GAAqBQ,kBAAkB,CACnCjgG,MAAK6c,WA/OS,aAgPdojF,iBAAkB,EAClBjgG,KAAOA,KAAKyE,UAjPE,WAiP4BpE,SAErCmxB,kBAAkBxxB,QACvBigG,iBAAkB,EAClBjgG,KAAOA,KAAKyE,UAAU,IAEtBw7F,gBACA1hG,KAAKyhG,gBAAgBhgG,KAAMkT,WAAY3K,WAAYi3F,qBAAsBC,aAGzElhG,KAAKqhG,kBAAkB5/F,KAAMzB,KAAK2hG,cAAchtF,WAAY+jC,OAAQ1uC,YAAaA,WAAYi3F,qBAAsBC,cAW3HpB,cAAcv/F,UAAUqhG,2BAQxB,SAAUngG,KAAM6B,MAAO0G,WAAYi3F,qBAAsBC,aACrD,GAAqBr7E,MAAO7lB,KAAK21D,mBAAmBryD,MAAO0G,WAC3D,SAAI6b,OACA7lB,KAAKqhG,kBAAkB5/F,KAAMokB,KAAM7b,WAAYi3F,qBAAsBC,cAC9D,IAYfpB,cAAcv/F,UAAU8gG,kBAQxB,SAAU5/F,KAAMmF,IAAKoD,WAAYi3F,qBAAsBC,aACnDD,qBAAqBl6F,MAAMtF,KAAyBmF,IAAW,SAC/Ds6F,YAAYn6F,KAAK,GAAI64F,eAAcn+F,KAAMmF,IAAK44F,kBAAkBC,QAASz1F,cAU7E81F,cAAcv/F,UAAUkhG,gBAQxB,SAAUhgG,KAAMkT,WAAY3K,WAAYi3F,qBAAsBC,aAI1D,GAAqBt6F,KAAM5G,KAAK2hG,cAAchtF,YAAc,aAAa,EAAO3K,WAChFi3F,sBAAqBl6F,MAAMtF,KAAyBmF,IAAW,SAC/Ds6F,YAAYn6F,KAAK,GAAI64F,eAAcn+F,KAAMmF,IAAK44F,kBAAkBG,UAAW31F,cAQ/E81F,cAAcv/F,UAAUohG,cAMxB,SAAUr+F,MAAOu+F,cAAe73F,YAC5B,GAAqB62F,YAAa72F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAMi7F,cACvB7hG,KAAK+/F,YAAY7qC,mBAAmB5xD,MAAOu9F,WAAY7gG,KAAKk8D,sBAC5Dl8D,KAAK+/F,YAAY/qC,aAAa1xD,MAAOu9F,WAAY7gG,KAAKk8D,qBAI1D,OAHIt1D,MACA5G,KAAK8gG,8BAA8Bl6F,IAAIorB,OAAQhoB,YACnDhK,KAAK+gG,YAAYn6F,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADAtZ,MAAKq1D,aAAa,GAAK/7C,EAAGtP,YACnBhK,KAAK+/F,YAAYhqC,qBAAqB,QAAS8qC,cAQ9Df,cAAcv/F,UAAUkgG,yBAKxB,SAAUH,gBAAiBwB,WACvB,GAAIA,UAAUrlE,YACV,MAAO,IAAI2Y,yBAAwB0sD,UAAUrgG,KAAM44B,oBAAoBE,UAAWtG,gBAAgBC,KAAM4tE,UAAUntF,WAAY,KAAMmtF,UAAU93F,WAElJ,IAAqB0wB,MAAO,KACPqnE,gBAA+B,GAC/BC,kBAAoB,KACpBhqF,MAAQ8pF,UAAUrgG,KAAK+H,MAnXrB,KAoXFy4F,qBAAoC,EAEzD,IAAIjqF,MAAMlW,OAAS,EACf,GAtXW,QAsXPkW,MAAM,GAAwB,CAC9BgqF,kBAAoBhqF,MAAM,GAC1BhY,KAAKkiG,iCAAiCF,kBAAmBF,UAAU93F,YAAY,GAC/Ei4F,iBAAmB/uE,6BAA6BlzB,KAAK49E,gBAAiB0iB,gBAAiB0B,mBAAmB,EAC1G,IAAqBG,gBAAiBH,kBAAkB9+F,QAAQ,IAChE,IAAIi/F,gBAAkB,EAAG,CACrB,GAAqBC,IAAKJ,kBAAkB97F,UAAU,EAAGi8F,gBACpC9yC,OAAS2yC,kBAAkB97F,UAAUi8F,eAAiB,EAC3EH,mBAAoBn1F,eAAeu1F,GAAI/yC,QAE3C0yC,YAAc1nE,oBAAoB15B,cA/X/B,SAiYEqX,MAAM,IACXgqF,kBAAoBhqF,MAAM,GAC1B+pF,YAAc1nE,oBAAoBG,MAClCynE,kBAAoBhuE,gBAAgBC,OAnYjC,SAqYElc,MAAM,KACX0iB,KAAO1iB,MAAMlW,OAAS,EAAIkW,MAAM,GAAK,KACrCgqF,kBAAoBhqF,MAAM,GAC1B+pF,YAAc1nE,oBAAoBI,MAClCwnE,kBAAoBhuE,gBAAgB5lB,OAU5C,OAN0B,QAAtB2zF,oBACAA,kBAAoBhiG,KAAK49E,gBAAgB6b,kBAAkBqI,UAAUrgG,MACrEwgG,iBAAmB/uE,6BAA6BlzB,KAAK49E,gBAAiB0iB,gBAAiB0B,mBAAmB,GAC1GD,YAAc1nE,oBAAoBC,SAClCt6B,KAAKkiG,iCAAiCF,kBAAmBF,UAAU93F,YAAY,IAE5E,GAAIorC,yBAAwB4sD,kBAAmBD,YAAaE,iBAAiB,GAAIH,UAAUntF,WAAY+lB,KAAMonE,UAAU93F,aAUlI81F,cAAcv/F,UAAUqgG,WAQxB,SAAUn/F,KAAMkT,WAAY3K,WAAYi3F,qBAAsBoB,cACtDpvE,kBAAkBxxB,OAClBA,KAAOA,KAAKqjC,OAAO,GACnB9kC,KAAKsiG,qBAAqB7gG,KAAMkT,WAAY3K,WAAYq4F,eAGxDriG,KAAKuiG,YAAY9gG,KAAMkT,WAAY3K,WAAYi3F,qBAAsBoB,eAU7EvC,cAAcv/F,UAAU+hG,qBAOxB,SAAU7gG,KAAMkT,WAAY3K,WAAYq4F,cACpC,GAAqBvpD,SAAU/1C,cAActB,MAAOA,KAAM,KACrCguC,UAAYqJ,QAAQ,GACpBpc,MAAQoc,QAAQ,GAAGrrC,aACxC,IAAIivB,MACA,OAAQA,OACJ,IAAK,QACL,IAAK,OACD,GAAqB91B,KAAM5G,KAAKwiG,aAAa7tF,WAAY3K,WACzDq4F,cAAat7F,KAAK,GAAIuuC,eAAc7F,UAAW,KAAM/S,MAAO91B,IAAKoD,YACjE,MACJ,SACIhK,KAAKq1D,aAAa,8CAAiD34B,MAAQ,WAAe+S,UAAY,yCAA2CzlC,gBAKzJhK,MAAKq1D,aAAa,wCAA0C5lB,UAAY,4EAA6EzlC,aAW7J81F,cAAcv/F,UAAUgiG,YAQxB,SAAU9gG,KAAMkT,WAAY3K,WAAYi3F,qBAAsBoB,cAE1D,GAAIjpF,IAAKxW,aAAanB,MAAwB,KAAUA,OAAQoS,OAASuF,GAAG,GAAIq2B,UAAYr2B,GAAG,GAC1ExS,IAAM5G,KAAKwiG,aAAa7tF,WAAY3K,WACzDi3F,sBAAqBl6F,MAAuB,KAA6BH,IAAW,SACpFy7F,aAAat7F,KAAK,GAAIuuC,eAAc7F,UAAW57B,OAAQ,KAAMjN,IAAKoD,cAStE81F,cAAcv/F,UAAUiiG,aAKxB,SAAUl/F,MAAO0G,YACb,GAAqB62F,YAAa72F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAM5G,KAAK+/F,YAAYrrC,YAAYpxD,MAAOu9F,WAAY7gG,KAAKk8D,qBAIhF,OAHIt1D,MACA5G,KAAK8gG,8BAA8Bl6F,IAAIorB,OAAQhoB,aAE9CpD,KAAOA,IAAIA,cAAeivB,YAC3B71B,KAAKq1D,aAAa,oCAAqCrrD,YAChDhK,KAAK+/F,YAAYhqC,qBAAqB,QAAS8qC,cAE1D7gG,KAAK+gG,YAAYn6F,IAAKoD,YACfpD,KAEX,MAAwB0S,GAEpB,MADAtZ,MAAKq1D,aAAa,GAAK/7C,EAAGtP,YACnBhK,KAAK+/F,YAAYhqC,qBAAqB,QAAS8qC,cAS9Df,cAAcv/F,UAAU80D,aAMxB,SAAUnkD,QAASlH,WAAYswD,WACb,KAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChDp6D,KAAKggG,cAAcj5F,KAAK,GAAIszD,YAAWrwD,WAAYkH,QAASopD,SAOhEwlC,cAAcv/F,UAAUugG,8BAKxB,SAAU9uE,OAAQhoB,YACd,IAAK,GAAIpI,IAAK,EAAG6gG,SAAWzwE,OAAQpwB,GAAK6gG,SAAS3gG,OAAQF,KAAM,CAC5D,GAAI2C,OAAQk+F,SAAS7gG,GACrB5B,MAAKq1D,aAAa9wD,MAAM2M,QAASlH,cAQzC81F,cAAcv/F,UAAUwgG,YAKxB,SAAUn6F,IAAKoD,YACX,GAAIu5B,OAAQvjC,IACZ,IAAI4G,IAAK,CACL,GAAqB87F,WAAY,GAAIC,cACrC/7F,KAAID,MAAM+7F,WACVA,UAAUjgE,MAAM57B,QAAQ,SAAUD,IAAKg8F,UACnC,GAAqB/e,UAAWtgD,MAAM08D,YAAY1/E,IAAIqiF,SACjD/e,UAIDtgD,MAAM28D,WAAW1/E,IAAIoiF,SAAU/e,UAH/BtgD,MAAM8xB,aAAa,aAAeutC,SAAW,uBAAwB,GAAIhtF,iBAAgB5L,WAAWD,MAAMsvD,OAAOzyD,IAAI+D,KAAKZ,OAAQC,WAAWD,MAAMsvD,OAAOzyD,IAAI+D,KAAKT,WAcnL41F,cAAcv/F,UAAU2hG,iCAMxB,SAAU9uE,SAAUppB,WAAY64F,QAC5B,GAAqBC,QAASD,OAAS7iG,KAAK49E,gBAAgB+b,kBAAkBvmE,UAC1EpzB,KAAK49E,gBAAgB8b,iBAAiBtmE,SACtC0vE,QAAOv+F,OACPvE,KAAKq1D,aAAgCytC,OAAW,IAAG94F,WAAYkwD,gBAAgBE,QAGhF0lC,iBAEP6C,cAAiB,SAAUl4F,QAE3B,QAASk4F,iBACL,GAAIp/D,OAAmB,OAAX94B,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,IAEhE,OADAujC,OAAMd,MAAQ,GAAI9Z,KACX4a,MAkBX,MAtBAtjC,WAAU0iG,cAAel4F,QAWzBk4F,cAAcpiG,UAAUiU,UAKxB,SAAU5N,IAAKpD,SAIX,MAHAxD,MAAKyiC,MAAMjiB,IAAI5Z,IAAInF,KAAMmF,KACzBA,IAAI6N,IAAI9N,MAAM3G,MACdA,KAAK4J,SAAShD,IAAIjF,KAAM6B,SACjB,MAEJm/F,eACTxuC,qBAsCE4uC,iBAAmB,2GAsBnB5sE,iBAAmB,WAInBf,WAAa,QACb4tE,kBAAoBzvE,YAAYC,MAAM,KAAK,GAC3C4C,qCAAuC,kEAEvC9B,iBAcA2uE,mBAAsB,SAAUx4F,QAEhC,QAASw4F,oBAAmB/xF,QAASvG,KAAM2vD,OACvC,MAAO7vD,QAAOmjC,KAAK5tC,KAAM2K,KAAMuG,QAASopD,QAAUt6D,KAEtD,MAJAC,WAAUgjG,mBAAoBx4F,QAIvBw4F,oBACT5oC,YACE6oC,oBAAuB,WACvB,QAASA,qBAAoBC,YAAaC,UAAWpxE,QACjDhyB,KAAKmjG,YAAcA,YACnBnjG,KAAKojG,UAAYA,UACjBpjG,KAAKgyB,OAASA,OAElB,MAAOkxE,wBAEPh8D,eAAkB,WAClB,QAASA,gBAAe0kB,QAASqC,WAAY8xC,YAAaniB,gBAAiBjyB,YAAaisB,SAAUyrB,YAC9FrjG,KAAK4rD,QAAUA,QACf5rD,KAAKiuD,WAAaA,WAClBjuD,KAAK+/F,YAAcA,YACnB//F,KAAK49E,gBAAkBA,gBACvB59E,KAAK2rD,YAAcA,YACnB3rD,KAAK43E,SAAWA,SAChB53E,KAAKqjG,WAAaA,WAgLtB,MApKAn8D,gBAAe3mC,UAAUizB,MAUzB,SAAU/J,UAAWwuB,SAAUzvB,WAAYia,MAAOiX,QAASxB,YAAa3R,qBACpE,GAAqB7/B,QAAS1G,KAAKsjG,SAAS75E,UAAWwuB,SAAUzvB,WAAYia,MAAOiX,QAASxB,YAAa3R,qBACrFlS,SAA8B3tB,OAAc,OAAEsc,OAAO,SAAUze,OAAS,MAAOA,OAAM+1D,QAAUJ,gBAAgBC,UAAYn3C,OAAOoR,cA9DvH,4EA8DwKgC,wCACnLpE,OAA4BtrB,OAAc,OAAEsc,OAAO,SAAUze,OAAS,MAAOA,OAAM+1D,QAAUJ,gBAAgBE,OAIlI,IAHI/lC,SAASvyB,OAAS,GAClB9B,KAAK43E,SAASxJ,KAAK,6BAA+B/5C,SAASxuB,KAAK,OAEhEmsB,OAAOlwB,OAAS,EAAG,CAEnB,KAAMsC,aAAY,2BADiB4tB,OAAOnsB,KAAK,MACamsB,QAEhE,OAASimB,SAA6BvxC,OAAmB,YAAG+7B,MAA0B/7B,OAAiB,YAY3GwgC,eAAe3mC,UAAU+iG,SAUzB,SAAU75E,UAAWwuB,SAAUzvB,WAAYia,MAAOiX,QAASxB,YAAa3R,qBACpE,GAAqBg9D,iBAAsC,gBAAbtrD,UAA2Cj4C,KAAiB,YAAEwzB,MAAMykB,SAAUC,aAAa,EAAMl4C,KAAKwjG,uBAAuB/5E,YACvKwuB,QAIJ,OAHK1R,uBACDg9D,gBAAkB5xE,kBAAkB4xE,kBAEjCvjG,KAAKyjG,aAAazjG,KAAK0jG,WAAWH,iBAAkB95E,UAAWjB,WAAYia,MAAOiX,UAU7FxS,eAAe3mC,UAAUkjG,aAQzB,SAAU7xE,kBAAmBnI,UAAWjB,WAAYia,MAAOiX,SACvD,GAAqBhzC,QACAsrB,OAASJ,kBAAkBI,OAC3BoxE,YACrB,IAAIxxE,kBAAkBG,UAAUjwB,OAAS,EAAG,CACxC,GAAqB6hG,gBAAiBluE,wBAAwBjN,YACzCo7E,UAAYnuE,wBAAwBgN,OACpCohE,oBAAsB,GAAI5V,qBAAoBjuF,KAAKiuD,WAAYxkC,WAC/DvT,wBAAuC,EACxDuT,WAAUwuB,UAAYxuB,UAAUwuB,SAASM,gBACzCriC,qBACInM,MAAO0f,UAAUwuB,SAASM,cAAc,GACxCruC,IAAKuf,UAAUwuB,SAASM,cAAc,IAG9C,IAAqBurD,eAAgB,GAAIhE,eAAc9/F,KAAK+/F,YAA8B,oBAAyB//F,KAAK49E,gBAAiBgmB,UAAW5xE,QAC/H+xE,aAAe,GAAIC,sBAAqBhkG,KAAKiuD,WAAYjuD,KAAK4rD,QAASi4C,oBAAqBF,eAAgBG,cAAe9jG,KAAK49E,gBAAiBlkC,QAAS1nB,OAC/KtrB,QAASkD,SAASm6F,aAAcnyE,kBAAkBG,UAAWkyE,uBAC7DjyE,OAAOjrB,KAAK/E,MAAMgwB,OAAQ6xE,oBAAoB7xE,QAC9CoxE,UAAUr8F,KAAK/E,MAAMohG,UAAWU,cAAc1D,oBAG9C15F,UAGJ,OADA1G,MAAKkkG,wCAAwCx9F,OAAQsrB,QACjDA,OAAOlwB,OAAS,EACT,GAAIohG,qBAAoBx8F,OAAQ08F,UAAWpxE,SAElDhyB,KAAKqjG,YACLrjG,KAAKqjG,WAAWx8F,QAAQ,SAAUy9B,WAAa59B,OAASF,iBAAiB89B,UAAW59B,UAEjF,GAAIw8F,qBAAoBx8F,OAAQ08F,UAAWpxE,UAOtDkV,eAAe3mC,UAAUmjG,WAKzB,SAAU9xE,kBAAmBuyE,YACV,KAAXA,SAAqBA,QAAS,EAClC,IAAqBnyE,QAASJ,kBAAkBI,MAChD,IAAqB,GAAjBA,OAAOlwB,QAAeqiG,OAAQ,CAE9B,GAAqBC,iBAAkBnyE,YAAYL,kBAAkBG,UACrEC,QAAOjrB,KAAK/E,MAAMgwB,OAAQoyE,gBAAgBpyE,QAC1CJ,kBAAoB,GAAIC,iBAAgBuyE,gBAAgBv6F,MAAOmoB,QAEnE,MAAOJ,oBAMXsV,eAAe3mC,UAAUijG,uBAIzB,SAAU/5E,WACN,GAAIA,UAAUwuB,SACV,MAAOsD,qBAAoBC,UAAU/xB,UAAUwuB,SAASM,gBAWhErR,eAAe3mC,UAAU2jG,wCAMzB,SAAUx9F,OAAQsrB,QACd,GAAqBqyE,sBACrB39F,QAAOsc,OAAO,SAAU7K,SAAW,QAAS,QAA6B69B,aACpEnvC,QAAQ,SAAUsR,SACnB,MAAO,SAA6B69B,WAAWnvC,QAAQ,SAAUS,WAC7D,GAAqB7F,MAAO6F,UAAU7F,IACtC,IAAI4iG,mBAAmBnhG,QAAQzB,MAAQ,EACnC4iG,mBAAmBt9F,KAAKtF,UAEvB,CACD,GAAqB8C,OAAQ,GAAI0+F,oBAAmB,eAAkBxhG,KAAO,6BAA+B6F,UAAU0C,WAAYkwD,gBAAgBE,MAClJpoC,QAAOjrB,KAAKxC,aAKrB2iC,kBAEP88D,qBAAwB,WACxB,QAASA,sBAAqBvhF,UAAWtN,OAAQ0uF,oBAAqBr7E,WAAY87E,eAAgB1mB,gBAAiB2mB,SAAUvE,eACzH,GAAIz8D,OAAQvjC,IACZA,MAAKyiB,UAAYA,UACjBziB,KAAKmV,OAASA,OACdnV,KAAK6jG,oBAAsBA,oBAC3B7jG,KAAKskG,eAAiBA,eACtBtkG,KAAK49E,gBAAkBA,gBACvB59E,KAAKukG,SAAWA,SAChBvkG,KAAKggG,cAAgBA,cACrBhgG,KAAKwkG,gBAAkB,GAAIrpB,iBAC3Bn7E,KAAKykG,gBAAkB,GAAI97E,KAC3B3oB,KAAK0kG,eAAiB,EAEtB1kG,KAAKgqB,oBAAsB65E,oBAAoBp6E,UAAUE,YAAY7nB,OAAS,EAC9E0mB,WAAW3hB,QAAQ,SAAU+hB,UAAWxjB,OACpC,GAAqB8qB,UAAWqD,YAAYC,MAAyB5K,UAAmB,SACxF2a,OAAMihE,gBAAgB3oB,eAAe3rD,SAAUtH,WAC/C2a,MAAMkhE,gBAAgBjkF,IAAIoI,UAAWxjB,SAyoB7C,MAjoBA4+F,sBAAqBzjG,UAAUw6C,eAK/B,SAAUu5B,UAAW9wE,SAAW,MAAO,OAMvCwgG,qBAAqBzjG,UAAU26C,mBAK/B,SAAUq5B,cAAe/wE,SAAW,MAAO,OAM3CwgG,qBAAqBzjG,UAAUw0C,UAK/B,SAAUxkC,KAAMk5B,QACZ,GAAqBqL,gBAAoCrL,OAAOk7D,mBAAmB3B,mBAC9D4B,YAAcnzE,YAAYlhB,KAAKjN,OAC/BuiB,KAAO7lB,KAAKskG,eAAe3uC,mBAAmBivC,YAAgCr0F,KAAgB,WACnH,OAAOsV,MAAO,GAAImvB,cAAanvB,KAAMivB,eAAmCvkC,KAAgB,YACpF,GAAIskC,SAAQ+vD,YAAa9vD,eAAmCvkC,KAAgB,aAOpFyzF,qBAAqBzjG,UAAU66C,eAK/B,SAAUswB,UAAWloE,SACjB,MAAO,IAAI0xC,SAAQw2B,UAAUjqE,KAAMiqE,UAAUpoE,MAAOooE,UAAU1hE,aAOlEg6F,qBAAqBzjG,UAAU+6C,aAK/B,SAAUswB,QAASpoE;sEAAW,MAAO,OAMrCwgG,qBAAqBzjG,UAAU01C,aAK/B,SAAU99B,QAASsxB,QACf,GAAIlG,OAAQvjC,KACS6kG,gBAAkB7kG,KAAKgqB,oBACvBhc,SAAWmK,QAAQ1W,KACnBqsD,iBAAmB9gD,gBAAgBmL,QACxD,IAAI21C,iBAAiB1nD,OAAS6H,qBAAqBM,QAC/Cu/C,iBAAiB1nD,OAAS6H,qBAAqBI,MAI/C,MAAO,KAEX,IAAIy/C,iBAAiB1nD,OAAS6H,qBAAqBS,YAC/CpD,qBAAqBwiD,iBAAiB5gD,UAGtC,MAAO,KAEX,IAAqB43F,mBACAC,2BACAC,0BACAC,eACAC,UACAC,mCACAC,0BACAC,uBACAC,oBAAqB,EACrBh4F,SACAi4F,kBAAoBzvE,WAAW3d,QAASnY,KAAKmV,OAAO6gB,qBAAsB,SAAUtzB,EAAGiI,MAAQ,MAAO44B,OAAM8xB,aAAa3yD,EAAGiI,KAAMuvD,gBAAgBC,UACvKhiD,SAAQ7K,MAAMzG,QAAQ,SAAU0G,MAC5B,GACqBi4F,wBACA/vC,YAFAgwC,WAAaliE,MAAMmiE,WAAWH,kBAAmBh4F,KAAMu3F,eAAgBC,wBAAyBG,OAAQF,uBAAwBC,aAGhIU,eAAiBpiE,MAAMqiE,wBAAwBr4F,KAAK9L,KACrE8hC,OAAMpuB,OAAO6gB,sBA7VT,YA6ViC2vE,gBACrCpiE,MAAM8xB,aAzVkB,4EAyV8B9nD,KAAKvD,WAAYkwD,gBAAgBC,SACvFqrC,uBAAyBj4F,KAAKjK,OAEzBqiG,eAAernF,WAhWT,OAiWXknF,uBAAyBj4F,KAAKjK,MAC9BmyD,YAAckwC,eAAez/F,UAlWlB,IAkWiDpE,QAAU,IAE1E,IAAqB+jG,oBAA+C,MAA1BL,sBACtCK,sBACIP,oBACA/hE,MAAM8xB,aAAa,mHAAoH9nD,KAAKvD,YAEhJs7F,oBAAqB,EACrB/hE,MAAM+gE,eAAetD,2BAA4C,YAAkC,uBAA4BzzF,KAAKvD,WAAYo7F,uBAAwBD,gCAAiCE,sBAExMI,YAAeI,qBAEhBv4F,MAAMvG,KAAKw8B,MAAM6X,eAAe7tC,KAAM,OACtCu3F,eAAe/9F,MAAMwG,KAAK9L,KAAM8L,KAAKjK,UAG7C,IAAqBwiG,oBAAqBnxE,yBAAyB3mB,SAAU82F,gBACzE1rF,GAAKpZ,KAAK+lG,iBAAiB/lG,KAAKwkG,gBAAiBsB,oBAAqBE,eAAiB5sF,GAAGoP,WAAYy9E,aAAe7sF,GAAG6sF,aACvGjwD,cACAkwD,wBAA0B,GAAIliF,KAC9BmiF,cAAgBnmG,KAAKomG,qBAAqBb,kBAAmBptF,QAAQ1W,KAAMukG,eAAgBjB,wBAAyBC,uBAA2C7sF,QAAmB,WAAG69B,WAAYkwD,yBACjMG,aAAermG,KAAKsmG,2BAA2BnuF,QAAQ1W,KAAMsjG,wBAAyBmB,yBACtFK,WAAa98D,OAAO87D,mBAAqBD,mBACzCkB,gBAAkB,GAAItY,wBAAuBluF,KAAK6jG,oBAAwCp6D,OAAuB,gBAAG88D,WAAYJ,cAAe74F,MAAO0oC,WAAYuvD,kBAAmBV,gBAAoC1sF,QAAmB,YAC5O9N,SAAWT,SAASkkD,iBAAiB1gD,YAAcq5F,qBAAuBzmG,KAAMmY,QAAQ9N,SAAUq8F,eAAejmG,OAAO8kG,kBAAmBY,cAAeZ,kBAAuC97D,OAAuB,gBAAI+8D,iBACjPA,iBAAgBjX,cAEhB,IAIqBoX,eAJAC,mBAAmD,MAA9B94C,iBAAiBzgD,UACvDkmB,YAAYC,MAAMs6B,iBAAiBzgD,WAAW,GAC9Cy4F,mBACiBhxD,eAAoCrL,OAAOk7D,mBAAmBiC,mBAEnF,IAAI94C,iBAAiB1nD,OAAS6H,qBAAqBE,WAC3CgK,QAAQ9N,WAAa8N,QAAQ9N,SAASw8F,MAAMtxE,mBAC5Cv1B,KAAKq1D,aAAa,4CAAgEl9C,QAAmB,YAEzGwuF,cAAgB,GAAI1sE,cAAaj6B,KAAK0kG,iBAAkBY,mBAAsC,KAAWxwD,eAAmC38B,QAAmB,gBAE9J,IAAIotF,kBACLvlG,KAAK8mG,sCAAsCX,cAAejB,QAC1DllG,KAAK+mG,gDAAgDZ,cAAeE,aAAiCluF,QAAmB,YACxHwuF,cAAgB,GAAI7sE,qBAAoBxsB,MAAO43F,OAAQlvD,WAAYivD,YAAauB,gBAAgBQ,yBAA0BR,gBAAgB7W,mBAAoB6W,gBAAgB5X,4BAA6B4X,gBAAgBxqE,aAAc3xB,SAAUi7F,mBAAsC,KAAWxwD,eAAmC38B,QAAmB,gBAEzV,CACDnY,KAAKinG,qBAAqBhB,aAAc9tF,SACxCnY,KAAKknG,wBAAwBf,cAAkChuF,QAAmB,WAClF,IAAqBgvF,kBAAmB7B,mBAAqB,KAAO77D,OAAOk7D,mBAAmBiC,mBAC9FD,eAAgB,GAAI3sE,YAAWhsB,SAAUV,MAAO+4F,aAAcnB,OAAQlvD,WAAYwwD,gBAAgBQ,yBAA0BR,gBAAgB7W,mBAAoB6W,gBAAgB5X,4BAA6B4X,gBAAgBxqE,aAAc3xB,SAAUi7F,mBAAqB,KAAO6B,iBAAkBhvF,QAAQnO,WAAYmO,QAAQ/N,eAAiB,MAEpV,GAAIk7F,mBAAoB,CACpB,GAAqB8B,yBAA0BpnG,KAAKgqB,oBAC/Bq9E,iBAAmB1yE,yBAAyBwB,iBAAkBivE,wBAC/EkC,uBAAyBtnG,KAAK+lG,iBAAiB/lG,KAAKwkG,gBAAiB6C,kBAAkB7+E,WACtE++E,gCAAkC,GAAIvjF,KACtCwjF,sBAAwBxnG,KAAKomG,sBAAqB,EAAMjuF,QAAQ1W,KAAM6lG,uBAAwBnC,mCAAwDhtF,QAAmB,cAAOovF,iCAChLE,qBAAuBznG,KAAKsmG,2BAA2BnuF,QAAQ1W,KAAM0jG,gCAAiCoC,gCAC3HvnG,MAAK+mG,gDAAgDS,sBAAuBC,qBAAyCtvF,QAAmB,WACxI,IAAqBuvF,yBAA0B,GAAIxZ,wBAAuBluF,KAAK6jG,oBAAwCp6D,OAAuB,gBAAGA,OAAO87D,kBAAmBiC,6BAA+B,EAAMJ,wBAA4CjvF,QAAmB,WAC/QuvF,yBAAwBnY,eACxBoX,cAAgB,GAAI7sE,8BAAgCurE,oBAAqBqC,wBAAwBV,yBAA0BU,wBAAwB/X,mBAAoB+X,wBAAwB9Y,4BAA6B8Y,wBAAwB1rE,cAAe2qE,eAAgB7xD,eAAmC38B,QAAmB,YAE7U,MAAOwuF,gBAYX3C,qBAAqBzjG,UAAUmlG,WAU/B,SAAUH,kBAAmBh4F,KAAM0zF,qBAAsBC,YAAamB,aAAcsF,WAAYxG,YAC5F,GAAqB1/F,MAAOzB,KAAK4lG,wBAAwBr4F,KAAK9L,MACzC6B,MAAQiK,KAAKjK,MACbskG,QAAUr6F,KAAKvD,WACf69F,UAAYpmG,KAAK+J,MAAMu3F,kBACvB0C,YAAa,CAClC,IAAkB,OAAdoC,UAEA,GADApC,YAAa,EACiB,MAA1BoC,UApdE,GAqdF7nG,KAAKskG,eAAe9D,qBAAqBqH,UAzctC,GAyc+DvkG,OAAO,EAAOskG,QAAS3G,qBAAsBC,iBAE9G,IAAI2G,UArdJ,GAsdD,GAAItC,kBAAmB,CACnB,GAAqB99F,YAAaogG,UA7cnC,EA8cC7nG,MAAK8nG,eAAergG,WAAYnE,MAAOskG,QAASzG,gBAGhDnhG,MAAKq1D,aAAa,oDAAuDuyC,aAG5E,IAAIC,UA5dJ,GA4d2B,CAC5B,GAAqBpgG,YAAaogG,UArd/B,EAsdH7nG,MAAK+nG,gBAAgBtgG,WAAYnE,MAAOskG,QAASD,gBAE5CE,WA9dL,GA+dA7nG,KAAKskG,eAAe1D,WAAWiH,UAzd5B,GAydqDvkG,MAAOskG,QAAS3G,qBAAsBoB,cAEzFwF,UA/dD,IAgeJ7nG,KAAKskG,eAAe9D,qBAAqBqH,UA5dtC,GA4d+DvkG,OAAO,EAAOskG,QAAS3G,qBAAsBC,aAC/GlhG,KAAKgoG,sBAAsBH,UA7dxB,GA6diDvkG,MAAOskG,QAAS3G,qBAAsBoB,eAErFwF,UAjeL,GAkeA7nG,KAAKskG,eAAehD,iBAAiB7/F,KAAM6B,MAAOskG,QAAS3G,qBAAsBC,aAE5E2G,UAheM,IAieX7nG,KAAKskG,eAAe9D,qBAAqBqH,UAje9B,GAie+DvkG,OAAO,EAAOskG,QAAS3G,qBAAsBC,aACvHlhG,KAAKgoG,sBAAsBH,UAlehB,GAkeiDvkG,MAAOskG,QAAS3G,qBAAsBoB,eAE7FwF,UAleI,GAmeT7nG,KAAKskG,eAAe9D,qBAAqBqH,UAnehC,GAme+DvkG,OAAO,EAAOskG,QAAS3G,qBAAsBC,aAEhH2G,UAneC,KAoeN7nG,KAAKskG,eAAe1D,WAAWiH,UApezB,IAoeqDvkG,MAAOskG,QAAS3G,qBAAsBoB,kBAIrGoD,YAAazlG,KAAKskG,eAAe1C,2BAA2BngG,KAAM6B,MAAOskG,QAAS3G,qBAAsBC,YAK5G,OAHKuE,aACDzlG,KAAKskG,eAAehD,iBAAiB7/F,KAAM6B,MAAOskG,QAAS3G,qBAAsBC,aAE9EuE,YAMXzB,qBAAqBzjG,UAAUqlG,wBAI/B,SAAU5wE,UACN,MAAO,UAAU3pB,KAAK2pB,UAAYA,SAAS9uB,UAAU,GAAK8uB,UAS9DgvE,qBAAqBzjG,UAAUunG,eAO/B,SAAUrgG,WAAYnE,MAAO0G,WAAYm3F,YACjC15F,WAAWvE,QAAQ,MAAQ,GAC3BlD,KAAKq1D,aAAa,uCAA0CrrD,YAEhEm3F,WAAWp6F,KAAK,GAAI6uC,aAAYnuC,WAAYnE,MAAO0G,cASvDg6F,qBAAqBzjG,UAAUwnG,gBAO/B,SAAUtgG,WAAYnE,MAAO0G,WAAY29F,YACjClgG,WAAWvE,QAAQ,MAAQ,GAC3BlD,KAAKq1D,aAAa,wCAA2CrrD,YAEjE29F,WAAW5gG,KAAK,GAAIkhG,uBAAsBxgG,WAAYnE,MAAO0G,cAUjEg6F,qBAAqBzjG,UAAUynG,sBAQ/B,SAAUvmG,KAAMkT,WAAY3K,WAAYi3F,qBAAsBoB,cAC1DriG,KAAKskG,eAAe1D,WAAWn/F,KAAO,SAAUkT,WAAa,UAAW3K,WAAYi3F,qBAAsBoB,eAO9G2B,qBAAqBzjG,UAAUwlG,iBAK/B,SAAUvB,gBAAiBsB,oBACvB,GAAIviE,OAAQvjC,KAISwoB,WAAa,GAAI/kB,OAAMzD,KAAKykG,gBAAgB5M,MAE5CoO,cAAe,CAKpC,OAJAzB,iBAAgBh5F,MAAMs6F,mBAAoB,SAAU51E,SAAUtH,WAC1DJ,WAA8B+a,MAAMkhE,gBAAgBlkF,IAAIqI,YAAgBA,UACxEq9E,aAAeA,cAAgB/1E,SAAS4qD,wBAGxCtyD,WAAYA,WAAWxF,OAAO,SAAUgG,KAAO,QAASA,MACxDi9E,aAAcA,eActBjC,qBAAqBzjG,UAAU6lG,qBAW/B,SAAUb,kBAAmBl5F,YAAamc,WAAY9mB,MAAOsjG,uBAAwBkD,kBAAmBC,iBAAkBC,+BACtH,GAAI7kE,OAAQvjC,KACSqoG,kBAAoB,GAAIrkF,KACxByF,UAA6B,KAC7B08E,cAAgB39E,WAAW5iB,IAAI,SAAUgjB,WAC1D,GAAqB5e,YAAa,GAAI4L,iBAAgBsyF,kBAAkBn+F,MAAOm+F,kBAAkBh+F,IAAK,aAAe9C,eAAewhB,UAAUxiB,MAC1IwiB,WAAUE,cACVW,UAAYb,UAEhB,IAAqB0/E,wBACA7xD,eAAoClT,MAAM+gE,eAAejE,gCAAgCz3E,UAAWvc,YAAarC,WAGtIysC,gBAAiBlT,MAAMglE,yBAAyBl8F,YAAaoqC,eAC7D,IAAqBC,YAAgCnT,MAAM+gE,eAAe5D,6BAA6B93E,UAAW5e,WAClHu5B,OAAMilE,6BAA6B5/E,UAAUktB,OAAQp0C,MAAO4mG,oBAAqBF,+BACjFpD,uBAAuBn+F,QAAQ,SAAU4hG,aACJ,IAA5BA,WAAWnlG,MAAMxB,QAAgB8mB,UAAUE,aAC3C2/E,WAAWC,uBAAuB9/E,cACnCu/E,iBAAiBphG,KAAK,GAAI2uC,cAAa+yD,WAAWhnG,KAAM8gB,wBAAwBqG,UAAUxiB,KAAKkB,WAAYmhG,WAAWz+F,aACtHq+F,kBAAkBlsE,IAAIssE,WAAWhnG,QAGzC,IAAqBuoB,qBAAsBuZ,MAAMvZ,mBAEjD,OADAuZ,OAAMvZ,qBAAuBpB,UAAUwB,QAAQtoB,OACxC,GAAI00C,cAAa5tB,UAAW0/E,oBAAqB7xD,eAAgBC,WAAY1sB,oBAAqBhgB,aAgB7G,OAdAg7F,wBAAuBn+F,QAAQ,SAAU4hG,YACrC,GAAIA,WAAWnlG,MAAMxB,OAAS,EACrBumG,kBAAkBt0E,IAAI00E,WAAWhnG,OAClC8hC,MAAM8xB,aAAa,iDAAsDozC,WAAWnlG,MAAQ,IAAMmlG,WAAWz+F,gBAGhH,KAAKyf,UAAW,CACjB,GAAqBk/E,UAA4B,IAC7CpD,qBACAoD,SAAWnmF,gCAAgC+gB,MAAM9gB,UAAWuK,YAAYsmB,cAE5E60D,iBAAiBphG,KAAK,GAAI2uC,cAAa+yD,WAAWhnG,KAAMknG,SAAUF,WAAWz+F,gBAG9Em8F,eASXnC,qBAAqBzjG,UAAUioG,6BAO/B,SAAUF,oBAAqBM,WAAYC,0BAA2BT,+BAClE,GAAIE,oBAAqB,CACrB,GAAqBQ,oBAAqB,GAAIngF,IAC9CigF,YAAW/hG,QAAQ,SAAUi7F,WACzB,GAAqB9mE,WAAY8tE,mBAAmBvoF,IAAIuhF,UAAUrgG,KAC7Du5B,aAAaA,UAAU6kE,WAGxBiJ,mBAAmBtoF,IAAIshF,UAAUrgG,KAAMqgG,aAG/CthG,OAAOw2B,KAAKsxE,qBAAqBzhG,QAAQ,SAAUkiG,SAC/C,GAAqBC,QAASV,oBAAoBS,SAC7BjH,UAAYgH,mBAAmBvoF,IAAIyoF,OAEpDlH,aACAsG,8BAA8BjsE,IAAI2lE,UAAUrgG,MACvCk0B,kBAAkBmsE,UAAUntF,aAC7Bk0F,0BAA0B9hG,KAAK,GAAIqvC,2BAA0B2yD,QAASjH,UAAUrgG,KAAMqgG,UAAUntF,WAAYmtF,UAAU93F,kBAY1Ig6F,qBAAqBzjG,UAAU+lG,2BAM/B,SAAUj6F,YAAa3K,MAAOwkG,yBAC1B,GAAI3iE,OAAQvjC,KACSipG,oBAMrB,OALAvnG,OAAMmF,QAAQ,SAAUwoB,MACfA,KAAKwwE,WAAcqG,wBAAwBnyE,IAAI1E,KAAK5tB,OACrDwnG,kBAAkBliG,KAAKw8B,MAAM+gE,eAAe7D,yBAAyBp0F,YAAagjB,SAGnFrvB,KAAKuoG,yBAAyBl8F,YAAa48F,oBAMtDjF,qBAAqBzjG,UAAU2oG,yBAI/B,SAAU1gF,YACN,MAAOA,YAAWxF,OAAO,SAAU4F,WAAa,MAAOA,WAAUA,UAAUE,eAM/Ek7E,qBAAqBzjG,UAAU4oG,6BAI/B,SAAU3gF,YACN,MAAOxoB,MAAKkpG,yBAAyB1gF,YAChC5iB,IAAI,SAAUgjB,WAAa,MAA0BxhB,gBAAewhB,UAAUA,UAAUxiB,SAOjG49F,qBAAqBzjG,UAAU2mG,wBAK/B,SAAU1+E,WAAYxe,YAClB,GAAqBo/F,oBAAqBppG,KAAKmpG,6BAA6B3gF,WACxE4gF,oBAAmBtnG,OAAS,GAC5B9B,KAAKq1D,aAAa,sJAEgB+zC,mBAAmBvjG,KAAK,KAAOmE,aAazEg6F,qBAAqBzjG,UAAU0mG,qBAU/B,SAAUhB,aAAc9tF,SACpB,GAAqBkxF,QAASlxF,QAAQ1W,KAAKe,QAAQ,WAAY,GAC/D,KAAKyjG,eAAiBjmG,KAAK49E,gBAAgB4b,WAAW6P,OAAQrpG,KAAKukG,UAAW,CAC1E,GAAqB7oC,UAAW,IAAM2tC,OAAS,6BAC/C3tC,WACI,UAAY2tC,OAAS,2EACrBA,OAAOnmG,QAAQ,MAAQ,EACvBw4D,UACI,UAAY2tC,OAAS,gIAGzB3tC,UACI,+FAER17D,KAAKq1D,aAAaqG,SAA6BvjD,QAAmB,cAS1E6rF,qBAAqBzjG,UAAUwmG,gDAM/B,SAAUv+E,WAAY69E,aAAcr8F,YAChC,GAAIu5B,OAAQvjC,KACSopG,mBAAqBppG,KAAKmpG,6BAA6B3gF,WACxE4gF,oBAAmBtnG,OAAS,GAC5B9B,KAAKq1D,aAAa,uCAAyC+zC,mBAAmBvjG,KAAK,KAAMmE,YAE7Fq8F,aAAax/F,QAAQ,SAAUwoB,MAC3BkU,MAAM8xB,aAAa,oBAAsBhmC,KAAK5tB,KAAO,2KAA8KuI,eAQ3Og6F,qBAAqBzjG,UAAUumG,sCAK/B,SAAUt+E,WAAY08E,QAClB,GAAI3hE,OAAQvjC,KACSspG,mBAAqB,GAAItlF,IAC9CwE,YAAW3hB,QAAQ,SAAU+hB,WACzBpoB,OAAOw2B,KAAKpO,UAAUA,UAAUmtB,SAASlvC,QAAQ,SAAUqT,GACvD,GAAqBu1B,WAAY7mB,UAAUA,UAAUmtB,QAAQ77B,EAC7DovF,oBAAmBntE,IAAIsT,eAG/By1D,OAAOr+F,QAAQ,SAAU0iG,OACD,MAAhBA,MAAM11F,QAAmBy1F,mBAAmBv1E,IAAIw1E,MAAM9nG,OACtD8hC,MAAM8xB,aAAa,iBAAmBk0C,MAAM38F,SAAW,2KAA8K28F,MAAMv/F,eASvPg6F,qBAAqBzjG,UAAUgoG,yBAK/B,SAAUl8F,YAAau8F,YACnB,GAAIrlE,OAAQvjC,IAGZ,OAAO4oG,YAAW5lF,OAAO,SAAU8+E,WAC/B,GAAIA,UAAU17F,OAASi0B,oBAAoBC,WACtCiJ,MAAMq6C,gBAAgByb,YAAYhtF,YAAay1F,UAAUrgG,KAAM8hC,MAAMghE,UAAW,CACjF,GAAqB7oC,UAAW,kBAAoBomC,UAAUrgG,KAAO,yCAA2C4K,YAAc,IAC1HA,aAAYiS,WAAW,OACvBo9C,UACI,YAAcomC,UAAUrgG,KAAO,kMAG9B4K,YAAYnJ,QAAQ,MAAQ,IACjCw4D,UACI,YAAcrvD,YAAc,yCAA2Cy1F,UAAUrgG,KAAO,gEACrE4K,YAAc,gOAGzCk3B,MAAM8xB,aAAaqG,SAAUomC,UAAU93F,YAE3C,OAAQ2rB,kBAAkBmsE,UAAUx+F,UAS5C0gG,qBAAqBzjG,UAAU80D,aAM/B,SAAUnkD,QAASlH,WAAYswD,WACb,KAAVA,QAAoBA,MAAQJ,gBAAgBE,OAChDp6D,KAAKggG,cAAcj5F,KAAK,GAAIszD,YAAWrwD,WAAYkH,QAASopD,SAEzD0pC,wBAEPwF,mBAAsB,WACtB,QAASA,uBAwFT,MAjFAA,oBAAmBjpG,UAAU01C,aAK7B,SAAUrvC,IAAK6iC,QACX,GAAqBqkB,kBAAmB9gD,gBAAgBpG,IACxD,IAAIknD,iBAAiB1nD,OAAS6H,qBAAqBM,QAC/Cu/C,iBAAiB1nD,OAAS6H,qBAAqBI,OAC/Cy/C,iBAAiB1nD,OAAS6H,qBAAqBS,WAI/C,MAAO,KAEX,IAAqB+6F,mBAAoB7iG,IAAI0G,MAAM1H,IAAI,SAAU2H,MAAQ,OAAQA,KAAK9L,KAAM8L,KAAKjK,SAC5E4sB,SAAWyE,yBAAyB/tB,IAAInF,KAAMgoG,mBAC9C30D,eAAiBrL,OAAOk7D,mBAAmBz0E,UAC3C7lB,SAAWT,SAAS5J,KAAM4G,IAAIyD,SAAU45F,sBAC7D,OAAO,IAAIjqE,YAAWpzB,IAAInF,KAAMmI,SAAS5J,KAAM4G,IAAI0G,uBAA4B,KAAWjD,SAAUyqC,eAAgBluC,IAAIoD,WAAYpD,IAAIwD,gBAO5Io/F,mBAAmBjpG,UAAU+6C,aAK7B,SAAUswB,QAASpoE,SAAW,MAAO,OAMrCgmG,mBAAmBjpG,UAAU66C,eAK7B,SAAUswB,UAAWloE,SACjB,MAAO,IAAI0xC,SAAQw2B,UAAUjqE,KAAMiqE,UAAUpoE,MAAOooE,UAAU1hE,aAOlEw/F,mBAAmBjpG,UAAUw0C,UAK7B,SAAUxkC,KAAMk5B,QACZ,GAAqBqL,gBAAoCrL,OAAOk7D,mBAAmB3B,kBACnF,OAAO,IAAInuD,SAAQtkC,KAAKjN,MAAOwxC,eAAmCvkC,KAAgB,aAOtFi5F,mBAAmBjpG,UAAUw6C,eAK7B,SAAUu5B,UAAW9wE,SAAW,MAAO8wE,YAMvCk1B,mBAAmBjpG,UAAU26C,mBAK7B,SAAUq5B,cAAe/wE,SAAW,MAAO+wE,gBACpCi1B,sBASPvB,sBAAyB,WACzB,QAASA,uBAAsBxmG,KAAM6B,MAAO0G,YACxChK,KAAKyB,KAAOA,KACZzB,KAAKsD,MAAQA,MACbtD,KAAKgK,WAAaA,WAgBtB,MARAi+F,uBAAsB1nG,UAAUmoG,uBAKhC,SAAU9/E,WACN,OAAkE,IAA3D2L,cAAc3L,UAAU4L,UAAUtxB,QAAQlD,KAAKsD,QAEnD2kG,yBAiBPvB,eAAkB,WAClB,QAASA,gBAAenB,kBAAmBmE,uBAAwBC,wBAAyBnD,iBACxFxmG,KAAKulG,kBAAoBA,kBACzBvlG,KAAK0pG,uBAAyBA,uBAC9B1pG,KAAK2pG,wBAA0BA,wBAC/B3pG,KAAKwmG,gBAAkBA,gBAiD3B,MAzCAE,gBAAejmG,OAMf,SAAU8kG,kBAAmB/8E,WAAYg+E,iBACrC,GAAqB/2E,SAAU,GAAI0rD,iBACdyuB,uBAA0C,KAC1CngF,UAAYjB,WAAW9J,KAAK,SAAUkK,WAAa,MAAOA,WAAUA,UAAUE,aACnG,IAAIW,UAEA,IAAK,GADgB6uB,oBAAwC7uB,UAAUb,UAAmB,SAAE0vB,mBAClEvtC,EAAI,EAAGA,EAAIutC,mBAAmBx2C,OAAQiJ,IAAK,CACjE,GAAqBmlB,UAAWooB,mBAAmBvtC,EAClC,OAAbmlB,SACA05E,uBAAyB7+F,EAGzB0kB,QAAQosD,eAAetoD,YAAYC,MAAM8kB,mBAAmBvtC,IAAKA,GAI7E,MAAO,IAAI27F,gBAAenB,kBAAmB91E,QAASm6E,uBAAwBpD,kBAMlFE,eAAenmG,UAAUokG,mBAIzB,SAAUz0E,UACN,GAAqB25E,oBAMrB,OALA7pG,MAAK0pG,uBAAuBl+F,MAAM0kB,SAAU,SAAUA,SAAU4kB,gBAAkB+0D,iBAAiB9iG,KAAK+tC,kBACxG+0D,iBAAiB11E,OACmB,MAAhCn0B,KAAK2pG,yBACLE,iBAAiB9iG,KAAK/G,KAAK2pG,yBAExBE,iBAAiB/nG,OAAS,EAAI+nG,iBAAiB,GAAK,MAExDnD,kBAuBPzC,sBAAwB,GAAIyC,iBAAe,EAAM,GAAIvrB,iBAAmB,KAAM,MAC9EsrB,qBAAuB,GAAI+C,oBA+D3BM,iBAAoB,WACpB,QAASA,qBAGT,MADAA,kBAAiBP,MAAQxjF,SAAS,UAC3B+jF,oBAMP3xE,2BAA8B,WAC9B,QAASA,4BAA2BnT,MAAO+kF,cACvC/pG,KAAKglB,MAAQA,MACbhlB,KAAK+pG,aAAeA,aAExB,MAAO5xE,+BAyEPS,6BAAgC,WAChC,QAASA,8BAA6B5T,MAAOwT,aACzCx4B,KAAKglB,MAAQA,MACbhlB,KAAKw4B,YAAcA,YAEvB,MAAOI,iCAiEPvB,OACA3I,UAAW,EACXC,WAAY,EAEhB0I,OAAMA,MAAM3I,WAAa,YACzB2I,MAAMA,MAAM1I,YAAc,YAkC1B,IAAIkK,sBAAwB,SAAUpuB,QAElC,QAASouB,sBAAqBmxE,mBAC1B,GAAIzmE,OAAQ94B,OAAOmjC,KAAK5tC,OAASA,IAEjC,OADAujC,OAAMymE,kBAAoBA,kBACnBzmE,MA+CX,MAnDAtjC,WAAU44B,qBAAsBpuB,QAWhCouB,qBAAqBt4B,UAAUiU,UAK/B,SAAU5N,IAAKpD,SACX,GAAI+/B,OAAQvjC,KACS2B,MAAQiF,IAAI6N,KAAK7L,OAAOhC,IAAIjF,MAAMiE,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAM48B,MAAO//B,UACpG,OAAO,IAAIymG,qBAAoBrjG,IAAI+D,KAAMhJ,KAAM3B,KAAKgqG,kBAAkB/yE,oBAAoBrwB,IAAInF,KAAME,KAAKG,UAO7G+2B,qBAAqBt4B,UAAU4T,kBAK/B,SAAUvN,IAAKpD,SACX,GAAI+/B,OAAQvjC,KACS2B,KAAOiF,IAAI4M,YAAY5N,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAM48B,MAAO//B,UACzF,OAAO,IAAIymG,qBAAoBrjG,IAAI+D,KAAMhJ,KAAM3B,KAAKgqG,kBAAkBnzE,4BAA4BjwB,IAAI4M,YAAY1R,UAOtH+2B,qBAAqBt4B,UAAU6T,gBAK/B,SAAUxN,IAAKpD,SACX,GAAI+/B,OAAQvjC,KACS2B,KAAOiF,IAAI7E,OAAO6D,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAM48B,MAAO//B,UACpF,OAAO,IAAIymG,qBAAoBrjG,IAAI+D,KAAMhJ,KAAM3B,KAAKgqG,kBAAkBjzE,0BAA0BnwB,IAAIowB,QAEjG6B,sBACTu7B,gBACEl9B,gBAAmB,WACnB,QAASA,iBAAgBgzE,eAAgBC,kBAAmB1zE,WACxDz2B,KAAKkqG,eAAiBA,eACtBlqG,KAAKmqG,kBAAoBA,kBACzBnqG,KAAKy2B,UAAYA,UACjBz2B,KAAKoqG,SAAW,GAAIzhF,KACpB3oB,KAAKqqG,WAAa,GAAI1hF,KACtB3oB,KAAKsqG,kBAAoB,EACzBtqG,KAAKu3B,eAAiB,EA4vB1B,MArvBAL,iBAAgB32B,UAAU6S,YAK1B,SAAUxM,IAAKwyB,MACX,GAAqB49B,GACrB,QAAQpwD,IAAI8sD,WACR,IAAK,IACDsD,GAAKmwB,eAAeM,IACpB,MACJ,KAAK,IACDzwB,GAAKmwB,eAAeK,KACpB,MACJ,KAAK,IACDxwB,GAAKmwB,eAAeQ,QACpB,MACJ,KAAK,IACD3wB,GAAKmwB,eAAeO,MACpB,MACJ,KAAK,IACD1wB,GAAKmwB,eAAeS,MACpB,MACJ,KAAK,KACD5wB,GAAKmwB,eAAeU,GACpB,MACJ,KAAK,KACD7wB,GAAKmwB,eAAeW,EACpB,MACJ,KAAK,KACD9wB,GAAKmwB,eAAeC,MACpB,MACJ,KAAK,KACDpwB,GAAKmwB,eAAeE,SACpB,MACJ,KAAK,MACDrwB,GAAKmwB,eAAeG,SACpB,MACJ,KAAK,MACDtwB,GAAKmwB,eAAeI,YACpB,MACJ,KAAK,IACDvwB,GAAKmwB,eAAeY,KACpB,MACJ,KAAK,IACD/wB,GAAKmwB,eAAec,MACpB,MACJ,KAAK,KACDjxB,GAAKmwB,eAAea,WACpB,MACJ,KAAK,KACDhxB,GAAKmwB,eAAee,YACpB,MACJ,SACI,KAAM,IAAI1jF,OAAM,yBAA2BoC,IAAI8sD,WAEvD,MAAOp6B,4BAA2BF,KAAM,GAAI2vD,oBAAmB/xB,GAAIh3D,KAAKuqG,OAAO3jG,IAAIyM,KAAMgkB,MAAM1I,YAAa3uB,KAAKuqG,OAAO3jG,IAAI0M,MAAO+jB,MAAM1I,eAO7IuI,gBAAgB32B,UAAUgT,WAK1B,SAAU3M,IAAKwyB,MAEX,MADAD,qBAAoBC,KAAMxyB,KACnB5G,KAAK4J,SAAShD,IAAI4M,YAAa4lB,OAO1ClC,gBAAgB32B,UAAUkT,iBAK1B,SAAU7M,IAAKwyB,MAEX,MAAOE,4BAA2BF,KADLp5B,KAAKuqG,OAAO3jG,IAAIqI,UAAWooB,MAAM1I,YAChB85D,YAAYzoF,KAAKuqG,OAAO3jG,IAAI8M,QAAS2jB,MAAM1I,YAAa3uB,KAAKuqG,OAAO3jG,IAAI+M,SAAU0jB,MAAM1I,eAO1IuI,gBAAgB32B,UAAUiU,UAK1B,SAAU5N,IAAKwyB,MACX,KAAM,IAAI50B,OAAM,yEAA2EoC,IAAInF,OAOnGy1B,gBAAgB32B,UAAUqT,kBAK1B,SAAUhN,IAAKwyB,MACX,GACqBoxE,UADAC,cAAgBzqG,KAAK4J,SAAShD,IAAIjF,KAAM01B,MAAM1I,WAQnE,OALI67E,UADA5jG,cAAeqjG,qBACJrjG,IAAI0nB,UAAUm8E,eAGdzqG,KAAKuqG,OAA0B3jG,IAAW,OAAGywB,MAAM1I,YAAY1C,OAAOw+E,eAE9EnxE,2BAA2BF,KAAMoxE,WAO5CtzE,gBAAgB32B,UAAUuT,sBAK1B,SAAUlN,IAAKwyB,MAEX,MADAC,sBAAqBD,KAAMxyB,KACpB5G,KAAKmqG,mBAOhBjzE,gBAAgB32B,UAAUwT,mBAK1B,SAAUnN,IAAKwyB,MACXC,qBAAqBD,KAAMxyB,IAE3B,KAAK,GADgBjF,OAAQ2lB,QAAQ1gB,IAAI4M,YAAY1R,SAC3BiJ,EAAI,EAAGA,EAAInE,IAAI4sD,QAAQ1xD,OAAS,EAAGiJ,IACzDpJ,KAAKoF,KAAKugB,QAAQ1gB,IAAI4sD,QAAQzoD,KAC9BpJ,KAAKoF,KAAK/G,KAAKuqG,OAAO3jG,IAAI4M,YAAYzI,GAAIssB,MAAM1I,YAGpD,OADAhtB,MAAKoF,KAAKugB,QAAQ1gB,IAAI4sD,QAAQ5sD,IAAI4sD,QAAQ1xD,OAAS,KAC5C8E,IAAI4M,YAAY1R,QAAU,EAC7BmkB,WAAW+G,YAAYksD,mBAAmBjtD,OAAOtqB,MACjDskB,WAAW+G,YAAYmsD,aAAaltD,QAAQtqB,KAAK,GAAI6kB,WAAW7kB,KAAKwB,MAAM,OAOnF+zB,gBAAgB32B,UAAUyT,eAK1B,SAAUpN,IAAKwyB,MACX,GAAqBsxE,cAAe1qG,KAAK2qG,iBAAiB/jG,IAC1D,OAAI8jG,cACO1qG,KAAK4qG,kBAAkBhkG,IAAK8jG,aAActxE,MAG1CE,2BAA2BF,KAAMp5B,KAAKuqG,OAAO3jG,IAAIxE,IAAKi1B,MAAM1I,YAAY1a,IAAIjU,KAAKuqG,OAAO3jG,IAAIqN,IAAKojB,MAAM1I,eAQtHuI,gBAAgB32B,UAAU2T,gBAK1B,SAAUtN,IAAKwyB,MACX,GAAqBh3B,KAAMpC,KAAKuqG,OAAO3jG,IAAIxE,IAAKi1B,MAAM1I,YACjC1a,IAAMjU,KAAKuqG,OAAO3jG,IAAIqN,IAAKojB,MAAM1I,YACjCrrB,MAAQtD,KAAKuqG,OAAO3jG,IAAItD,MAAO+zB,MAAM1I,WAC1D,OAAO2K,4BAA2BF,KAAMh3B,IAAI6R,IAAIA,KAAKuM,IAAIld,SAO7D4zB,gBAAgB32B,UAAU4T,kBAK1B,SAAUvN,IAAKwyB,MACX,KAAM,IAAI50B,OAAM,4EAOpB0yB,gBAAgB32B,UAAU6T,gBAK1B,SAAUxN,IAAKwyB,MACX,KAAM,IAAI50B,OAAM,0EAOpB0yB,gBAAgB32B,UAAU8T,sBAK1B,SAAUzN,IAAKwyB,MACX,MAAOE,4BAA2BF,KAAM9R,QAAQ1gB,IAAItD,SAMxD4zB,gBAAgB32B,UAAUsqG,UAI1B,SAAUppG,MAAQ,MAAOzB,MAAKkqG,eAAeY,SAASrpG,OAMtDy1B,gBAAgB32B,UAAU+T,gBAK1B,SAAU1N,IAAKwyB,MACX,GAAqBsxE,cAAe1qG,KAAK2qG,iBAAiB/jG,IAC1D,IAAI8jG,aACA,MAAO1qG,MAAK4qG,kBAAkBhkG,IAAK8jG,aAActxE,KAGjD,IAAqBz3B,MAAO3B,KAAK4J,SAAShD,IAAIjF,KAAM01B,MAAM1I,YACrCjoB,OAAS,KACT6N,SAAWvU,KAAKuqG,OAAO3jG,IAAI2N,SAAU8iB,MAAM1I,WAChE,IAAIpa,WAAavU,KAAKmqG,kBAAmB,CACrC,GAAqBY,SAAU/qG,KAAK6qG,UAAUjkG,IAAInF,KAC9CspG,WACArkG,OAASqkG,QAAQ9+E,OAAOtqB,OAMhC,MAHc,OAAV+E,SACAA,OAAS6N,SAAS8zE,WAAWzhF,IAAInF,KAAME,OAEpC23B,2BAA2BF,KAAM1yB,SAQhDwwB,gBAAgB32B,UAAUmU,eAK1B,SAAU9N,IAAKwyB,MACX,MAAOE,4BAA2BF,KAAMtS,IAAI9mB,KAAKuqG,OAAO3jG,IAAI+N,WAAY0iB,MAAM1I,eAOlFuI,gBAAgB32B,UAAUqU,mBAK1B,SAAUhO,IAAKwyB,MACX,MAAOE,4BAA2BF,KAAMpS,cAAchnB,KAAKuqG,OAAO3jG,IAAI+N,WAAY0iB,MAAM1I,eAO5FuI,gBAAgB32B,UAAUsU,kBAK1B,SAAUjO,IAAKwyB,MACX,GAAqBsxE,cAAe1qG,KAAK2qG,iBAAiB/jG,IAC1D,IAAI8jG,aACA,MAAO1qG,MAAK4qG,kBAAkBhkG,IAAK8jG,aAActxE,KAGjD,IAAqB1yB,QAAS,KACT6N,SAAWvU,KAAKuqG,OAAO3jG,IAAI2N,SAAU8iB,MAAM1I,WAOhE,OANIpa,YAAavU,KAAKmqG,oBAClBzjG,OAAS1G,KAAK6qG,UAAUjkG,IAAInF,OAElB,MAAViF,SACAA,OAAS6N,SAAS8a,KAAKzoB,IAAInF,OAExB63B,2BAA2BF,KAAM1yB,SAQhDwwB,gBAAgB32B,UAAUuU,mBAK1B,SAAUlO,IAAKwyB,MACX,GAAqB7kB,UAAWvU,KAAKuqG,OAAO3jG,IAAI2N,SAAU8iB,MAAM1I,WAChE,IAAIpa,WAAavU,KAAKmqG,kBAAmB,CAErC,GAD+BnqG,KAAK6qG,UAAUjkG,IAAInF,MAE9C,KAAM,IAAI+C,OAAM,6CAGxB,MAAO80B,4BAA2BF,KAAM7kB,SAAS8a,KAAKzoB,IAAInF,MAAM+e,IAAIxgB,KAAKuqG,OAAO3jG,IAAItD,MAAO+zB,MAAM1I,eAOrGuI,gBAAgB32B,UAAU0U,sBAK1B,SAAUrO,IAAKwyB,MACX,MAAOp5B,MAAK4qG,kBAAkBhkG,IAAK5G,KAAK2qG,iBAAiB/jG,KAAMwyB,OAOnElC,gBAAgB32B,UAAUyU,oBAK1B,SAAUpO,IAAKwyB,MACX,MAAOp5B,MAAK4qG,kBAAkBhkG,IAAK5G,KAAK2qG,iBAAiB/jG,KAAMwyB,OAOnElC,gBAAgB32B,UAAUqJ,SAK1B,SAAUnD,KAAM2yB,MACZ,GAAImK,OAAQvjC,IACZ,OAAOyG,MAAKb,IAAI,SAAUgB,KAAO,MAAO28B,OAAMgnE,OAAO3jG,IAAKwyB,SAO9DlC,gBAAgB32B,UAAUwU,WAK1B,SAAUnO,IAAKwyB,MACX,KAAM,IAAI50B,OAAM,gEAAkEoC,IAAI6rD,wBAA0B,eAAiB7rD,IAAI8rD,WAOzIx7B,gBAAgB32B,UAAUgqG,OAK1B,SAAU3jG,IAAKwyB,MACX,GAAqB1yB,QAAS1G,KAAKqqG,WAAW9pF,IAAI3Z,IAClD,OAAIF,UAEI1G,KAAKoqG,SAAS7pF,IAAI3Z,MAAQA,KAAKD,MAAM3G,KAAMo5B,OAQvDlC,gBAAgB32B,UAAUqqG,kBAM1B,SAAUhkG,IAAK8jG,aAActxE,MAoCzB,GAAqB4xE,mBAAoBhrG,KAAKuqG,OAAOG,aAAan2F,SAAU8iB,MAAM1I,YAC7Ds8E,cAA6B,EAC9CjrG,MAAKkrG,eAAeR,aAAan2F,YAGjC02F,UAAYjrG,KAAKmrG,oBAEjBH,kBAAoBC,UAAUzqF,IAAIwqF,mBAElChrG,KAAKqqG,WAAW7pF,IAAIkqF,aAAan2F,SAAU02F,WAE/C,IAAqBh8F,WAAY+7F,kBAAkBvhB,SAG/CihB,wBAAwB52C,gBACxB9zD,KAAKoqG,SAAS5pF,IAAIkqF,aAAc,GAAI72C,YAAW62C,aAAa//F,KAAM+/F,aAAan2F,SAAUm2F,aAAajpG,KAAMipG,aAAa/oG,OAGzH3B,KAAKoqG,SAAS5pF,IAAIkqF,aAAc,GAAI53C,cAAa43C,aAAa//F,KAAM+/F,aAAan2F,SAAUm2F,aAAajpG,MAG5G,IAAqB2pG,QAASprG,KAAKuqG,OAAO3jG,IAAKywB,MAAM1I,WASrD,OANA3uB,MAAKoqG,SAAShuE,OAAOsuE,cAEjBO,WACAjrG,KAAKqrG,iBAAiBJ,WAGnB3xE,2BAA2BF,KAAMnqB,UAAUw5E,YAAYnhE,QAAQ,MAAO8jF,UAMjFl0E,gBAAgB32B,UAAUoqG,iBAI1B,SAAU/jG,KACN,GAAI28B,OAAQvjC,KACS2G,MAAQ,SAAUpD,QAASqD,KAC5C,OAAQ28B,MAAM6mE,SAAS7pF,IAAI3Z,MAAQA,KAAKD,MAAMpD,SAElD,OAAOqD,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAO,OACxB2M,WAIA,SAAU3M,KAAO,MAAO,OACxB6M,iBAIA,SAAU7M,KAAO,MAAO,OACxBgN,kBAIA,SAAUhN,KAAO,MAAO,OACxBkN,sBAIA,SAAUlN,KAAO,MAAO,OACxBmN,mBAIA,SAAUnN,KAAO,MAAO,OACxBoN,eAIA,SAAUpN,KAAO,MAAOD,OAAM3G,KAAM4G,IAAIxE,MACxC8R,gBAIA,SAAUtN,KAAO,MAAO,OACxBuN,kBAIA,SAAUvN,KAAO,MAAO,OACxBwN,gBAIA,SAAUxN,KAAO,MAAO,OACxByN,sBAIA,SAAUzN,KAAO,MAAO,OACxB0N,gBAIA,SAAU1N,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI2N,WACxCC,UAIA,SAAU5N,KAAO,MAAO,OACxB8N,eAIA,SAAU9N,KAAO,MAAO,OACxBgO,mBAIA,SAAUhO,KAAO,MAAO,OACxBiO,kBAIA,SAAUjO,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI2N,WACxCO,mBAIA,SAAUlO,KAAO,MAAO,OACxBmO,WAIA,SAAUnO,KAAO,MAAO,OACxBoO,oBAIA,SAAUpO,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI2N,WAAa3N,KACrDqO,sBAIA,SAAUrO,KACN,MAAOD,OAAM3G,KAAM4G,IAAI2N,WAAa3N,QAQhDswB,gBAAgB32B,UAAU2qG,eAI1B,SAAUtkG,KACN,GAAI28B,OAAQvjC,KACS2G,MAAQ,SAAUpD,QAASqD,KAC5C,MAAOA,OAAQ28B,MAAM6mE,SAAS7pF,IAAI3Z,MAAQA,KAAKD,MAAMpD,UAEpC+nG,UAAY,SAAU/nG,QAASqD,KAChD,MAAOA,KAAI2qB,KAAK,SAAU3qB,KAAO,MAAOD,OAAMpD,QAASqD,OAE3D,OAAOA,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAOD,OAAM3G,KAAM4G,IAAIyM,OAAS1M,MAAM3G,KAAM4G,IAAI0M,QACjEC,WAIA,SAAU3M,KAAO,OAAO,GACxB6M,iBAIA,SAAU7M,KACN,MAAOD,OAAM3G,KAAM4G,IAAIqI,YAActI,MAAM3G,KAAM4G,IAAI8M,UACjD/M,MAAM3G,KAAM4G,IAAI+M,WAExBC,kBAIA,SAAUhN,KAAO,OAAO,GACxBkN,sBAIA,SAAUlN,KAAO,OAAO,GACxBmN,mBAIA,SAAUnN,KAAO,MAAO0kG,WAAUtrG,KAAM4G,IAAI4M,cAC5CQ,eAIA,SAAUpN,KAAO,OAAO,GACxBsN,gBAIA,SAAUtN,KAAO,OAAO,GACxBuN,kBAIA,SAAUvN,KAAO,OAAO,GACxBwN,gBAIA,SAAUxN,KAAO,OAAO,GACxByN,sBAIA,SAAUzN,KAAO,OAAO,GACxB0N,gBAIA,SAAU1N,KAAO,OAAO,GACxB4N,UAIA,SAAU5N,KAAO,OAAO,GACxB8N,eAIA,SAAU9N,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI+N,aACxCC,mBAIA,SAAUhO,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI+N,aACxCE,kBAIA,SAAUjO,KAAO,OAAO,GACxBkO,mBAIA,SAAUlO,KAAO,OAAO,GACxBmO,WAIA,SAAUnO,KAAO,OAAO,GACxBoO,oBAIA,SAAUpO,KAAO,OAAO,GACxBqO,sBAIA,SAAUrO,KAAO,OAAO,MAMhCswB,gBAAgB32B,UAAU4qG,kBAG1B,WACI,GAAqBI,YAAavrG,KAAKsqG,mBAEvC,OADAtqG,MAAKu3B,eAAiB3a,KAAKC,IAAI7c,KAAKsqG,kBAAmBtqG,KAAKu3B,gBACrD,GAAIvR,aAAY8S,cAAc94B,KAAKy2B,UAAW80E,cAMzDr0E,gBAAgB32B,UAAU8qG,iBAI1B,SAAUJ,WAEN,GADAjrG,KAAKsqG,oBACDW,UAAUxpG,MAAQq3B,cAAc94B,KAAKy2B,UAAWz2B,KAAKsqG,mBACrD,KAAM,IAAI9lG,OAAM,aAAeymG,UAAUxpG,KAAO,2BAGjDy1B,mBAePR,qBAAwB,WACxB,QAASA,yBAgBT,MAVAA,sBAAqBn2B,UAAUuqG,SAI/B,SAAUrpG,MACN,MAAIA,QAASqoG,iBAAiBP,MAAM9nG,KACzBqoG,iBAAiBP,MAErB,MAEJ7yE,wBA6BPuzE,oBAAuB,SAAUx/F,QAEjC,QAASw/F,qBAAoBt/F,KAAMhJ,KAAM2sB,WACrC,GAAIiV,OAAQ94B,OAAOmjC,KAAK5tC,KAAM2K,KAAM,KAAMhJ,OAAS3B,IAGnD,OAFAujC,OAAM5hC,KAAOA,KACb4hC,MAAMjV,UAAYA,UACXiV,MAEX,MAPAtjC,WAAUgqG,oBAAqBx/F,QAOxBw/F,qBACTl2C,cASErsB,kBAAqB,WACrB,QAASA,mBAAkBtC,QAAS3iB,WAChCziB,KAAKolC,QAAUA,QACfplC,KAAKyiB,UAAYA,UAmDrB,MA3BAilB,mBAAkBnnC,UAAUm+F,iBAc5B,SAAU8M,YAAa/hF,UAAWwuB,SAAUmrD,UAAWqI,uBACnD,GAAIloE,OAAQvjC,KACSyiC,MAAQ,GAAI9Z,IACjCy6E,WAAUv8F,QAAQ,SAAU4X,GAAK,MAAOgkB,OAAMjiB,IAAI/B,EAAEhd,KAAMgd,EAAErY,KAAKkB,YACjE,IAAqBokG,mBAAoB,EACpBC,mBAAqB,SAAUliE,QAChD,GAAqBmiE,mBAAoBF,mBACzC,OAAO,IAAIG,aAAYtoE,MAAM6B,QAAS7B,MAAM9gB,UAAWgpF,sBAAuBhiE,OAAQhgB,UAAUrjB,KAAKkB,UAAWmiB,UAAUivB,OAAQkzD,kBAAmBnpE,MAAOkpE,qBAE3IpoG,QAAUooG,mBAAmB;kCAElD,OADApoG,SAAQqG,YAAaquC,UACd10C,QAAQ+9D,MAAMkqC,cAElB9jE,qBAGPmkE,YAAe,WACf,QAASA,aAAYzmE,QAAS3iB,UAAWgpF,sBAAuBhiE,OAAQhgB,UAAWqiF,gBAAiBF,kBAAmBnpE,MAAOkpE,oBAC1H3rG,KAAKolC,QAAUA,QACfplC,KAAKyiB,UAAYA,UACjBziB,KAAKyrG,sBAAwBA,sBAC7BzrG,KAAKypC,OAASA,OACdzpC,KAAKypB,UAAYA,UACjBzpB,KAAK8rG,gBAAkBA,gBACvB9rG,KAAK4rG,kBAAoBA,kBACzB5rG,KAAKyiC,MAAQA,MACbziC,KAAK2rG,mBAAqBA,mBAC1B3rG,KAAK+rG,cAAgB,GAAIpjF,KACzB3oB,KAAKk2C,aACLl2C,KAAKqK,YACLrK,KAAKgsG,WACLhsG,KAAKisG,WAwXT,MAlXAJ,aAAYtrG,UAAU2rG,aAItB,SAAU9lG,MACN,GAAqB0/E,QAUrB,MARIA,QADA1/E,OAASpG,KAAKypB,WAAazpB,KAAK8rG,gBA5BrB,OA+BN1lG,eAAgBoB,cACXxH,KAAKyrG,sBAAsBlrF,IAAIna,MAhC9B,QAsCX,KAAM,IAAI5B,OAAM,yDAA2D6yC,KAAK3xC,UAAUU,MAE9F,OAAO0/E,UAOX+lB,YAAYtrG,UAAUqJ,SAKtB,SAAUssC,UAAWtc,UACjB55B,KAAKk2C,UAAYA,UACjB1vC,iBAAiBxG,KAAM45B,WAO3BiyE,YAAYtrG,UAAU+gE,MAKtB,SAAUkqC,YAAaW,kBACnB,GAAI5oE,OAAQvjC,SACa,KAArBmsG,mBAA+BA,qBACnCnsG,KAAKqK,SAASxD,QAAQ,SAAUo1B,OAAS,MAAOA,OAAMqlC,MAAMkqC,YAAaW,mBACzE,IAAqBC,YAAarmF,SAtEnB,QAsE8CvF,IAAI6L,WAAW2L,WAAWtM,eAClE2gF,aAAe,CACpCrsG,MAAKgsG,QAAQnlG,QAAQ,SAAU8N,YAC3B,GAAIyE,IAAKmqB,MAAM+oE,2BAA2B33F,YAAa3K,WAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC/FmzB,UAAY,GAAK41E,eACjBE,aAAe/oG,UAAY+/B,MAAM9Z,UAAY8Z,MAAQ,KACtEhqB,GAAK+e,uBAAuBi0E,aAAcxmF,SAASwd,MAAM2oE,aAAa1oG,UAAWF,MAAOmzB,WAAYzR,MAAQzL,GAAGyL,MAAOwT,YAAcjf,GAAGif,WAC3IxT,OAAMje,KAAK,GAAI2yB,qBAAoBlB,cACnC4zE,UAAUrlG,KAAK/E,MAAMoqG,UAAWpnF,MAAMpf,IAAI,SAAU4f,MAAQ,MAAOD,oCAAmCC,KAAMxb,iBAEhHhK,KAAKisG,QAAQplG,QAAQ,SAAUuS,IAC3B,GAAIpP,YAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC5CmzB,UAAY,GAAK41E,eACjBE,aAAe/oG,UAAY+/B,MAAM9Z,UAAY8Z,MAAQ,KACtEve,MAAQqR,qBAAqBk2E,aAAcxmF,SAASwd,MAAM2oE,aAAa1oG,UAAWF,MAAOmzB,WAAWzR,KACxGonF,WAAUrlG,KAAK/E,MAAMoqG,UAAWpnF,MAAMpf,IAAI,SAAU4f,MAAQ,MAAOD,oCAAmCC,KAAMxb,gBAEhH,IAAqBwiG,UAAW,SAAWhB,YAAc,IAAMxrG,KAAK4rG,kBAC/Ca,YAAc,GAAIhhB,qBAAoB+gB,YAAcJ,UAEzE,OADAD,kBAAiBplG,KAAK0lG,aACfN,kBAOXN,YAAYtrG,UAAU00C,eAKtB,SAAUruC,IAAKpD,SACX,GAAI+/B,OAAQvjC,IAC2C4G,KAAS,MACA,IAC1D4M,YAAY3M,QAAQ,SAAUgf,MAChC,MAAO0d,OAAMyoE,QAAQjlG,MAAOvD,QAAS+/B,MAAM9Z,UAAWnmB,MAAOuiB,KAAM7b,WAAYpD,IAAIoD,gBAQ3F6hG,YAAYtrG,UAAU41C,sBAKtB,SAAUvvC,IAAKpD,SAKX,GAJAxD,KAAK0sG,uBAAuB9lG,KAIxB5G,KAAKolC,QAAQunE,sBAAuB,CACpC,GAAqBC,cAAe5sG,KAAK2rG,mBAAmB3rG,KAC5DA,MAAKqK,SAAStD,KAAK6lG,cACnBA,aAAahjG,SAAShD,IAAIsvC,UAAWtvC,IAAIyD,YAQjDwhG,YAAYtrG,UAAU01C,aAKtB,SAAUrvC,IAAKpD,SACX,GAAI+/B,OAAQvjC,IACZA,MAAK0sG,uBAAuB9lG,IAI5BA,KAAIkvC,OAAOjvC,QAAQ,SAAUszB,UACzBoJ,MAAMyoE,QAAQjlG,MAAOvD,QAAS+/B,MAAM9Z,UAAWnmB,MAAO62B,SAAS72B,MAAO0G,WAAYmwB,SAASnwB,eAE/FxD,iBAAiBxG,KAAM4G,IAAIyD,WAM/BwhG,YAAYtrG,UAAUmsG,uBAItB,SAAU9lG,KACN,GAAI28B,OAAQvjC,IACZ4G,KAAI4hB,WAAW3hB,QAAQ,SAAUuzB,QAAUmJ,MAAMoT,eAAevc,UAChExzB,IAAIovC,WAAWnvC,QAAQ,SAAUU,KAC7B,GAAqBslG,eAAiC,IAKlDA,eADAtlG,IAAIjE,OAASiE,IAAIjE,MAAMmE,YAAc87B,MAAM6B,QAAQunE,sBACnCplG,IAAIjE,MAAMmE,WAAWH,UAGrBg/E,gBAAgB/zC,QAEpChP,MAAMwoE,cAAcvrF,IAAIjZ,IAAI9F,KAAMorG,iBAEtCjmG,IAAImvC,QAAQlvC,QAAQ,SAAUimG,WAC1BvpE,MAAM0oE,QAAQllG,MAAOvD,QAAS+/B,MAAM9Z,UAAWnmB,MAAOwpG,UAAUv3D,QAASvrC,WAAY8iG,UAAU9iG,gBAOvG6hG,YAAYtrG,UAAUo2C,eAItB,SAAUvc,QACN,GAAImJ,OAAQvjC,KACS8+E,QAAU1kD,OAAOxR,UAAUxiB,KAAKkB,SACrD8yB,QAAO0b,OAAOjvC,QAAQ,SAAUtE,OAC5B,MAAOghC,OAAMyoE,QAAQjlG,MAAOvD,QAAS+/B,MAAM9Z,UAAWnmB,MAAOf,MAAMe,MAAO0G,WAAYzH,MAAMyH,eAK5FhK,KAAKolC,QAAQunE,wBACbvyE,OAAOqc,eAAe5vC,QAAQ,SAAUszB,UACpC,MAAOoJ,OAAMyoE,QAAQjlG,MAAOvD,QAASs7E,QAASx7E,MAAO62B,SAAS72B,MAAO0G,WAAYmwB,SAASnwB,eAE9FowB,OAAOsc,WAAW7vC,QAAQ,SAAUkmG,cAChC,MAAOxpE,OAAM0oE,QAAQllG,MACjBvD,QAASs7E,QACTx7E,MAAOypG,aAAax3D,QACpBvrC,WAAY+iG,aAAa/iG,iBASzC6hG,YAAYtrG,UAAUuqG,SAItB,SAAUrpG,MACN,GAAIA,MAAQqoG,iBAAiBP,MAAM9nG,KAC/B,MAAOskB,UAAS/lB,KAAKksG,aAAa5lB,gBAAgB/zC,SAEtD,KAAK,GAAqBy6D,aAAchtG,KAAMgtG,YAAaA,YAAcA,YAAYvjE,OAAQ,CACzF,GAAqBojE,mBAAgB,EAGrC,IAAqB,OADrBA,cAAgBG,YAAYjB,cAAcxrF,IAAI9e,OACnB,CAEOurG,YAAY92D,UAAUx3B,KAAK,SAAUuuF,QAAU,MAAOA,QAAOxrG,OAASA,SAEhGorG,cAAgBvmB,gBAAgB/zC,SAGxC,GAAqB,MAAjBs6D,cACA,MAAO9mF,UAAS/lB,KAAKksG,aAAaW,gBAG1C,MAAO,OAMXhB,YAAYtrG,UAAU2sG,cAItB,SAAUzrG,MACN,GAAqB0+F,MAAOngG,KAAKyiC,MAAMliB,IAAI9e,KAC3C,KAAK0+F,KACD,KAAM,IAAI37F,OAAM,sCAAwC/C,KAAO,mBAAqBzB,KAAKypB,UAE7F,OAAOzpB,MAAKksG,aAAa/L,OAM7B0L,YAAYtrG,UAAU+rG,2BAItB,SAAU33F,YACN,GAAI4uB,OAAQvjC,IACZ,QACIgK,WAAY2K,WAAW3K,WACvBxG,QAASmR,WAAWnR,QACpBF,MAAOszB,gCACHC,4BAA6B,SAAUC,UACnC,MAAO,UAAUn1B,MACb,GAAqBqN,KAAMwX,WAAW7kB,KAGtC,OAAO4hC,OAAM6B,QAAQunE,sBAAwB39F,IAAMA,IAAI8oB,KAAKpM,gBAGpEqL,0BAA2B,SAAUC,MACjC,MAAO,UAAUj1B,QACb,GAAqB+pF,SAAU90D,KAAKpxB,IAAI,SAAUsU,EAAGnP,GACjD,OACIkJ,IAAKiG,EAAEjG,IACP3Q,MAAOvB,OAAOgJ,GACd8b,OAAQ3M,EAAE2M,UAGGjhB,IAAM8gB,WAAWolE,QAGtC,OAAOvoD,OAAM6B,QAAQunE,sBAAwB/mG,IAAMA,IAAIkyB,KAAKpM,gBAGpEuL,oBAAqB,SAAUx1B,KAAMq1B,UACjC,MAAO,UAAUn1B,MAMb,MAFIokB,UAD4Bwd,MAAM6B,QAAQunE,sBACjCppE,MAAM2pE,cAAczrG,MACpB8hC,MAAM2oE,aAAa5lB,gBAAgB/zC,UAChC81C,WAAW,YAAa1mF,SAGjDgT,WAAWrR,SAQtBuoG,YAAYtrG,UAAUs2C,eAKtB,SAAUjwC,IAAKpD,WAMfqoG,YAAYtrG,UAAUw0C,UAKtB,SAAUnuC,IAAKpD,WAMfqoG,YAAYtrG,UAAUg2C,uBAKtB,SAAU3vC,IAAKpD,WAMfqoG,YAAYtrG,UAAUo1C,eAKtB,SAAU/uC,IAAKpD,WAMfqoG,YAAYtrG,UAAUs1C,cAKtB,SAAUjvC,IAAKpD,WAMfqoG,YAAYtrG,UAAUk1C,WAKtB,SAAU7uC,IAAKpD,WAMfqoG,YAAYtrG,UAAU80C,qBAKtB,SAAUzuC,IAAKpD,WAMfqoG,YAAYtrG,UAAU40C,UAKtB,SAAUvuC,IAAKpD,WACRqoG,eAcPzwE,aAAe,QACfC,WAAa,QAEb8xE,kBAAqB,WACrB,QAASA,mBAAkBC,aAAcC,iBACrCrtG,KAAKotG,aAAeA,aACpBptG,KAAKqtG,gBAAkBA,gBAE3B,MAAOF,sBAEP3lE,aAAgB,WAChB,QAASA,cAAaymB,YAClBjuD,KAAKiuD,WAAaA,WAiDtB,MAvCAzmB,cAAajnC,UAAUm+F,iBAQvB,SAAU3+D,UAAWtW,UAAWwuB,SAAUJ,OAAQurD,WAC9C,GAAI7/D,OAAQvjC,KACS0rG,kBAAoB,EACpB5vE,eAAiBD,mBAAmBoc,UACpCq1D,2BAA0C,EAC/D,KAAK7jF,UAAUivB,OAAQ,CACnB,GAAqB60D,YAAgC9jF,UAAmB,SACnD+jF,mBACjBD,YAAWl1D,YAAck1D,WAAWl1D,WAAWv2C,QAC/C0rG,iBAAiBzmG,KAAK,GAAI6f,iBAAgB,YAAa0D,wBAAwByV,UAAWwtE,WAAWl1D,aAAa,GAEtH,IAAqBo1D,oBAAqB1nF,SAAS/d,iBAAiByhB,UAAUrjB,KAAKkB,WACnFgmG,wBAA4CG,mBAAwB,KACpE1tE,UAAU9G,WAAWlyB,KAAK0mG,mBACrBjtF,IAAIyF,WAAW+G,YAAYmtD,qBAAqBluD,QAAQ,GAAItF,iBACzD,GAAIC,iBAAgB,gBAAiBU,QAAQimF,WAAWv1D,gBAAgB,GACxE,GAAIpxB,iBAAgB,SAAUixB,QAAQ,GACtC,GAAIjxB,iBAAgB,OAAQ,GAAID,gBAAe6mF,mBAAmB,QAErEx1E,WAAW5R,WAAW4G,YAAYotD,gBAAiBniD,aAAaC,MAAOD,aAAakI,YAE7F,GAAqBwrE,oBAAqB,SAAUliE,QAChD,GAAqBmiE,mBAAoBF,mBACzC,OAAO,IAAIgC,eAAcnqE,MAAM0qB,WAAYluB,UAAW0J,OAAQhgB,UAAWmiF,kBAAmBxI,UAAWtnE,eAAgB6vE,qBAEtGpoG,QAAUooG,mBAAmB,KAGlD,OAFApoG,SAAQqG,YAAaquC,WACpB7+B,GAAK2mB,UAAU9G,YAAYlyB,KAAK/E,MAAMoX,GAAI7V,QAAQ+9D,SAC5C,GAAI6rC,mBAAkB5pG,QAAQipG,SAAUc,uBAC/C,IAAIl0F,KAEDouB,gBAEPmmE,UAAY5nF,SAAS,MACrB0V,SAAW1V,SAAS,MACpByV,UAAYzV,SAAS,OACrB6nF,SAAW7nF,SAAS,OACpB8nF,eAAiB9nF,SAAS,MAC1B+nF,kBAAoB/nF,SAAS,MAC7B2nF,cAAiB,WACjB,QAAS7B,aAAYppF,UAAWsd,UAAW0J,OAAQhgB,UAAWmiF,kBAAmBxI,UAAWtnE,eAAgB6vE,oBACxG3rG,KAAKyiB,UAAYA,UACjBziB,KAAK+/B,UAAYA,UACjB//B,KAAKypC,OAASA,OACdzpC,KAAKypB,UAAYA,UACjBzpB,KAAK4rG,kBAAoBA,kBACzB5rG,KAAKojG,UAAYA,UACjBpjG,KAAK87B,eAAiBA,eACtB97B,KAAK2rG,mBAAqBA,mBAC1B3rG,KAAK6J,SACL7J,KAAK+tG,oBAAsBvtG,OAAOC,OAAO,MACzCT,KAAKguG,eAAiBxtG,OAAOC,OAAO,MACpCT,KAAKk2C,aACLl2C,KAAKqK,YAILrK,KAAK8H,SAAW9H,KAAK4rG,kBAAoB,EACrClgF,aACmBpF,eAAeyZ,UAAU9Z,WAAWjmB,KAAKypB,UAAUrjB,KAAKkB,YAC/EtH,KAAKwsG,SAAW3kG,cAAc7H,KAAKypB,UAAUrjB,KAAKkB,UAAWtH,KAAK4rG,mBAi+BtE,MA19BAC,aAAYtrG,UAAUqJ,SAKtB,SAAUssC,UAAWtc,UACjB,GAAI2J,OAAQvjC,IAUZ,IATAA,KAAKk2C,UAAYA,UAEZl2C,KAAKypC,QACNzpC,KAAKojG,UAAUv8F,QAAQ,SAAUs5F,MACzBA,KAAKjxD,OACL3L,MAAMwqE,oBAAoB5N,KAAK1+F,MAAQ8hC,MAAM0qE,YAAY,KAAM9N,UAItEngG,KAAKypC,OAAQ,CACd,GAAqBykE,YAAa7xE,mBAAmBr8B,KAAK87B,eAC1D97B,MAAKypB,UAAUE,YAAY9iB,QAAQ,SAAU+iB,MAAOukF,YAEhD,GAAqBrkF,SAAUqkF,WAAa,EACvBpM,YAAcn4E,MAAMykB,MAAQ,EAAgB,EAC5C1jB,MAAQ,UAAgCgS,4BAA4BuxE,WAAYpkF,QAASF,MAAMykB,MACpH9K,OAAM15B,MAAM9C,KAAK,WACb,OACIiD,WAAY,KACZokG,UAAWzjF,MACX0jF,QAASpoF,WAAW+G,YAAY4sD,UAAU3tD,QACtC3E,QAAQqD,OAAQrD,QAAQwC,SACxB,GAAInD,iBAAgB,GAAIC,iBAAgBgD,MAAM87D,aAAcp+D,QAAQy6E,cAAc,YAMtGv7F,iBAAiBxG,KAAM45B,UACnB55B,KAAKypC,SAA+B,IAApB7P,SAAS93B,QAAgB63B,wBAAwBC,YAEjE55B,KAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAY,KACZokG,UAAW,EACXC,QAASpoF,WAAW+G,YAAYysD,WAAWxtD,QACvC3E,QAAQ,GAAe+E,UAAWA,UAAW/E,QAAQ,SAUzEukF,YAAYtrG,UAAU+gE,MAItB,SAAU6qC,sBACmB,KAArBA,mBAA+BA,qBACnCnsG,KAAKqK,SAASxD,QAAQ,SAAUo1B,OAAS,MAAOA,OAAMqlC,MAAM6qC,mBAC5D,IAAI/yF,IAAKpZ,KAAKsuG,yBAA0BC,oBAAsBn1F,GAAGm1F,oBAAqBC,sBAAwBp1F,GAAGo1F,sBAAuBC,aAAer1F,GAAGq1F,aACrIC,iBAAmB1uG,KAAK2uG,gBAAgBJ,qBACxCK,mBAAqB5uG,KAAK2uG,gBAAgBH,uBAC1CK,UAAY,CAC5B7uG,MAAKypC,QAAUzpC,KAAKypB,UAAUulB,kBAAoBH,wBAAwBC,SAC3E+/D,WAAa,EAEjB,IAAqBpC,aAAc,GAAIhhB,qBAAoBzrF,KAAKwsG,UAAW,GAAI/gF,SAA2BkiF,UAAe,QAAM,GAAIzhF,iBAAgBjG,WAAW+G,YAAYusD,SAASttD,QAC3K3E,QAAQunF,WACRroF,WAAWioF,cACXG,mBACAF,qBACEtoF,WAAW4G,YAAYqtD,gBAA4C,IAA3Br6E,KAAK4rG,mBAA2B3zE,aAAakI,aAE/F,OADAgsE,kBAAiBplG,KAAK0lG,aACfN,kBAMXN,YAAYtrG,UAAUouG,gBAItB,SAAUG,aACN,GAAqBC,SACrB,IAAID,YAAYhtG,OAAS,EAAG,CACxB,GAAqBktG,cAChBhvG,KAAKypB,UAAUivB,QAAU3zB,iBAAiB+pF,aAAa/6E,IAAuB65E,SAAc,OAC7FoB,SAASjoG,KAAK6mG,SAASptF,IAAIib,SAASpM,KAAK,cAAc2I,WAAWh4B,KAAK8H,WAE3EinG,SAAW7nF,IACP,GAAIuE,SAA2B+P,UAAe,KAAGrP,eACjD,GAAIV,SAA2BgQ,SAAc,KAAGtP,gBACjD6iF,SAASpmG,OAAOkmG,aAAc3iF,mBAGjC4iF,UAAW1iF,SAEf,OAAO0iF,WAOXlD,YAAYtrG,UAAUs2C,eAKtB,SAAUjwC,IAAKpD,SAEXxD,KAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChBokG,UAAW,EACXC,QAASpoF,WAAW+G,YAAYktD,cAAcjuD,QAC1C3E,QAAQ1gB,IAAIkuC,gBAAiBxtB,QAAQ1gB,IAAIxB,aAUzDymG,YAAYtrG,UAAUw0C,UAKtB,SAAUnuC,IAAKpD,SAGXxD,KAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChBokG,UAAW,EACXC,QAASpoF,WAAW+G,YAAY0sD,SAASztD,QACrC3E,SANsB,GAOtBA,QAAQ1gB,IAAIkuC,gBACZtuB,YAAYc,QAAQ1gB,IAAItD,eAUxCuoG,YAAYtrG,UAAU00C,eAKtB,SAAUruC,IAAKpD,SACX,GAAI+/B,OAAQvjC,KACSu7B,UAAYv7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,KACjC,IAAqBkoG,eAAkCroG,IAAS,MAC3CsoG,MAA0BD,cAAiB,IAC3CE,0BAA4BD,MAAM17F,YAAY5N,IAAI,SAAUigB,KAAMupF,cACnF,MAAO7rE,OAAM8rE,6BAA8B9zE,UAAWA,UAAW6zE,aAAcA,aAAcplG,WAAYpD,IAAIoD,WAAYxG,QAASoqG,SAAUtqG,MAAOuiB,SAIlIypF,WAAa/zE,SAClCv7B,MAAK6J,MAAM0xB,WAAa,WACpB,OACIvxB,WAAYpD,IAAIoD,WAChBokG,UAAW,EACXC,QAASpoF,WAAW+G,YAAY0sD,SAASztD,QACrC3E,QAAQgoF,YACRhoF,QAAQ1gB,IAAIkuC,gBACZtuB,WAAW0oF,MAAM17C,QAAQ5tD,IAAI,SAAUd,GAAK,MAAOwiB,SAAQxiB,QAE/DyqG,eAAgBJ,6BAS5BtD,YAAYtrG,UAAU41C,sBAKtB,SAAUvvC,IAAKpD,SACX,GAAI+/B,OAAQvjC,KACSu7B,UAAYv7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,KACjC,IAAIqS,IAAKpZ,KAAKwvG,wBAAwBj0E,UAAW30B,KAAM+jB,MAAQvR,GAAGuR,MAAO8kF,iBAAmBr2F,GAAGq2F,iBAAkB/4D,WAAat9B,GAAGs9B,WAC5Gk2D,aAAe5sG,KAAK2rG,mBAAmB3rG,KAC5DA,MAAKqK,SAAStD,KAAK6lG,cACnBA,aAAahjG,SAAShD,IAAIsvC,UAAWtvC,IAAIyD,SACzC,IAAqBqlG,YAAa1vG,KAAK6J,MAAM/H,OAASy5B,UAAY,CAKlEv7B,MAAK6J,MAAM0xB,WAAa,WACpB,OACIvxB,WAAYpD,IAAIoD,WAChBokG,UAAW,EAAsBzjF,MACjC0jF,QAASpoF,WAAW+G,YAAYysD,WAAWxtD,QACvC3E,QAAQqD,OACR8kF,iBACAnoF,QAAQ1gB,IAAIkuC,gBACZxtB,QAAQooF,YACRnsE,MAAMosE,4BAA4Bp0E,UAAWmb,YAC7C3wB,SAAS6mF,aAAaJ,eAUtCX,YAAYtrG,UAAU01C,aAKtB,SAAUrvC,IAAKpD,SACX,GAAI+/B,OAAQvjC,KACSu7B,UAAYv7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,KAEjC,IAAqBsiG,QAAS98F,cAAc3F,IAAInF,MAAQ,KAAOmF,IAAInF,KAC/D2X,GAAKpZ,KAAKwvG,wBAAwBj0E,UAAW30B,KAAM+jB,MAAQvR,GAAGuR,MAAOilF,WAAax2F,GAAGw2F,WAAYH,iBAAmBr2F,GAAGq2F,iBAAkBI,gBAAkBz2F,GAAG02F,aAAcp5D,WAAat9B,GAAGs9B,WAC3Kq5D,aACAZ,6BACAa,aACrB,IAAI3G,OAAQ,CACR,GAAqByG,cAAelpG,IAAIkvC,OACnClwC,IAAI,SAAUu0B,UACf,OACI32B,QAA0B,SAC1B22B,SAAUA,SACVC,OAAyB,QAG5BxxB,OAAOinG,gBACRC,cAAahuG,SACbqtG,0BACIW,aAAalqG,IAAI,SAAU8oD,YAAa0gD,cACpC,MAAO7rE,OAAM8rE,6BACT7rG,QAASkrD,YAAYlrD,QACrB+3B,UAAWA,UACX6zE,aAAcA,aACdplG,WAAY0kD,YAAYv0B,SAASnwB,WACjC1G,MAAOorD,YAAYv0B,SAAS72B,UAGxCysG,UAAYD,aAAalqG,IAAI,SAAU8oD,aAAe,MAAOx0B,mBAAkBw0B,YAAYv0B,SAAUu0B,YAAYt0B,WAErH41E,WAAaJ,WAAWhqG,IAAI,SAAUwT,IAClC,GAAIvF,QAASuF,GAAG,GAAIq2B,UAAYr2B,GAAG,EACnC,OAAOoN,aAAYc,QAAQzT,QAASyT,QAAQmoB,eAGpDjpC,iBAAiBxG,KAAM4G,IAAIyD,SAC3B,IAAqBqlG,YAAa1vG,KAAK6J,MAAM/H,OAASy5B,UAAY,EAC7C00E,QAAUrpG,IAAI4hB,WAAW9J,KAAK,SAAU0b,QAAU,MAAOA,QAAOxR,UAAUE,cAC1EonF,iBAAoC,UACpCC,SAA4B,SAC7CF,WACAE,SAAWnwG,KAAK+/B,UAAU9Z,WAAWgqF,QAAQrnF,UAAUgwB,mBACvDs3D,iBAAmBlwG,KAAK+/B,UAAU9Z,WAAWgqF,QAAQrnF,UAAUiwB,cAInE,IAAqBy2D,YAAa/zE,SAClCv7B,MAAK6J,MAAM0xB,WAAa,WACpB,OACIvxB,WAAYpD,IAAIoD,WAChBokG,UAAW,EAAsBzjF,MACjC0jF,QAASpoF,WAAW+G,YAAYwsD,YAAYvtD,QACxC3E,QAAQgoF,YACRhoF,QAAQqD,OACR8kF,iBACAnoF,QAAQ1gB,IAAIkuC,gBACZxtB,QAAQooF,YACRpoF,QAAQ+hF,QACRA,OAAS1uE,cAAc/zB,KAAOylB,UAC9B0jF,UAAUjuG,OAAS0kB,WAAWupF,WAAa1jF,UAC3C2jF,WAAWluG,OAAS0kB,WAAWwpF,YAAc3jF,UAC7CkX,MAAMosE,4BAA4Bp0E,UAAWmb,YAC7Cy5D,SACAD,mBAEJX,eAAgBJ,6BAS5BtD,YAAYtrG,UAAUivG,wBAKtB,SAAUj0E,UAAW30B,KACjB,GAAI28B,OAAQvjC,KACS2qB,MAAQ,CACzB/jB,KAAImzB,mBACJpP,OAAS,SAEb,IAAqBilF,YAAa,GAAIjnF,IACtC/hB,KAAImvC,QAAQlvC,QAAQ,SAAU0iG,OAC1B,GAAInwF,IAAKmjB,0BAA0BgtE,MAAO,MAAO9nG,KAAO2X,GAAG3X,KAAMoS,OAASuF,GAAGvF,MAC7E+7F,YAAWpvF,IAAIsc,qBAAqBjpB,OAAQpS,OAAQoS,OAAQpS,SAEhEmF,IAAI4hB,WAAW3hB,QAAQ,SAAUuzB,QAC7BA,OAAOsc,WAAW7vC,QAAQ,SAAU0iG,OAChC,GAAInwF,IAAKmjB,0BAA0BgtE,MAAOnvE,QAAS34B,KAAO2X,GAAG3X,KAAMoS,OAASuF,GAAGvF,MAC/E+7F,YAAWpvF,IAAIsc,qBAAqBjpB,OAAQpS,OAAQoS,OAAQpS,UAGpE,IAAqBquG,iBACAp5D,aACrB12C,MAAKowG,uCAAuCxpG,IAAI4hB,YAChD5hB,IAAIshB,UAAUrhB,QAAQ,SAAU6jB,YAAaU,eACzC,GAAqBgP,YAA0B,GAC1Bi2E,aAA4B,EAOjD,IANAzpG,IAAI4hB,WAAW3hB,QAAQ,SAAUypG,YAAavlG,GACtCulG,YAAY1nF,UAAUxiB,KAAKkB,YAAcc,eAAesiB,YAAY/kB,SACpEy0B,OAASk2E,YACTD,SAAWtlG,KAGfqvB,OAAQ,CACR,GAAIhhB,IAAKmqB,MAAMgtE,gBAAgB7lF,YAAa0P,OAAQi2E,SAAU90E,UAAW30B,IAAIovC,WAAYpvC,IAAIo1B,aAAc4zE,WAA+BrsE,MAAMzH,eAAevb,IAAqB,MAAWsvF,gBAAkBz2F,GAAG02F,aAAcU,cAAgBp3F,GAAGs9B,UACrPo5D,cAAa/oG,KAAK/E,MAAM8tG,aAAcD,iBACtCn5D,WAAW3vC,KAAK/E,MAAM00C,WAAY85D,mBAGlCjtE,OAAMktE,eAAe/lF,YAAa9jB,IAAIo1B,eAG9C,IAAqB00E,mBAoCrB,OAnCA9pG,KAAIo1B,aAAan1B,QAAQ,SAAU2E,OAC/B,GAAqBw7E,eAA6B,EAC9C5+E,gBAAeoD,MAAMlI,SACrBigC,MAAM9gB,UAAUC,yBAAyBsK,YAAYomB,YACrD4zC,UAAY,EAEP5+E,eAAeoD,MAAMlI,SAC1BigC,MAAM9gB,UAAUC,yBAAyBsK,YAAYumB,kBACrDyzC,UAAY,EAEP5+E,eAAeoD,MAAMlI,SAC1BigC,MAAM9gB,UAAUC,yBAAyBsK,YAAYsmB,eACrD0zC,UAAY,GAEC,MAAbA,WACA0pB,gBAAgB3pG,KAAKyf,YAAYc,QAAQ9b,MAAMse,SAAUxC,QAAQ0/D,gBAGzEpgF,IAAIovC,WAAWnvC,QAAQ,SAAUU,KAC7B,GAAqBy/E,eAA6B,EAC7Cz/E,KAAIjE,MAGA8E,eAAeb,IAAIjE,SACxBigC,MAAM9gB,UAAUC,yBAAyBsK,YAAYsmB,eACrD0zC,UAAY,GAJZA,UAAY,EAMC,MAAbA,YACAzjD,MAAMyqE,eAAezmG,IAAI9F,MAAQ85B,UACjCm1E,gBAAgB3pG,KAAKyf,YAAYc,QAAQ/f,IAAI9F,MAAO6lB,QAAQ0/D,iBAGpEpgF,IAAImvC,QAAQlvC,QAAQ,SAAUimG,WAC1Bp2D,WAAW3vC,MAAOvD,QAASoqG,SAAUpxE,SAAUswE,UAAW1yE,OAAyB,UAGnFzP,MAAOA,MACPilF,WAAYnsG,MAAMsgB,KAAK6rF,WAAW7tG,UAClC0tG,iBAAkBiB,gBAAgB5uG,OAAS0kB,WAAWkqF,iBAAmBrkF,UACzEyjF,aAAcA,aACdp5D,WAAYA,aAcpBm1D,YAAYtrG,UAAUgwG,gBAWtB,SAAU7lF,YAAa0P,OAAQjQ,eAAgBwmF,iBAAkBpiB,KAAMvyD,aAAc4zE,WAAYhzE,UAC7F,GAAI2G,OAAQvjC,KACSu7B,UAAYv7B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,MACjCqzB,OAAOxR,UAAUwB,QAAQvjB,QAAQ,SAAU+iB,MAAOukF,YAC9C,GAAqBrkF,SAAUsQ,OAAOpQ,oBAAsBmkF,WACvCxjF,MAAQ,SAAkCgS,4BAA4BC,SAAU9S,QAASF,MAAMykB,OAC/F0zD,YAAcn4E,MAAMykB,MAAQ,EAAgB,CACjE9K,OAAM15B,MAAM9C,KAAK,WACb,OACIiD,WAAYowB,OAAOpwB,WACnBokG,UAAWzjF,MACX0jF,QAASpoF,WAAW+G,YAAY4sD,UAAU3tD,QACtC3E,QAAQqD,OAAQrD,QAAQwC,SACxB,GAAInD,iBAAgB,GAAIC,iBAAgBgD,MAAM87D,aAAcp+D,QAAQy6E,cAAc,WASlG,IAAqB2N,YAAa1vG,KAAK6J,MAAM/H,OAASy5B,UAAY,EAC9DniB,GAAKpZ,KAAK4wG,0BAA0BlmF,YAAasR,cAAerR,MAAQvR,GAAGuR,MAAO+lF,gBAAkBt3F,GAAGs3F,gBAAiB1lF,aAAe5R,GAAG4R,aAAcC,SAAW7R,GAAG6R,QAC1KsjE,MAAK1nF,QAAQ,SAAUU,KACfA,IAAIjE,OAAS8E,eAAeb,IAAIjE,SAAW8E,eAAesiB,YAAY/kB,SACtE49B,MAAMyqE,eAAezmG,IAAI9F,MAAQ85B,UACjCm1E,gBAAgB3pG,KAAKyf,YAAYc,QAAQ/f,IAAI9F,MAAO6lB,QAAQ,SAGhE8S,OAAOxR,UAAUE,cACjB6B,OAAS,MAEb,IAAqBolF,WAAY31E,OAAO0b,OAAOlwC,IAAI,SAAUu0B,SAAUu8B,YACnE,GAAqBm6C,UAAWrqF,YAAYc,QAAQovC,YAAapvC,QAAQ6S,SAASkc,gBAElF,OAAO,IAAIzvB,iBAAgBuT,SAASkc,cAAew6D,UAAU,KAE5Cb,cACAzxB,QAAUnkD,OAAOxR,SACtCpoB,QAAOw2B,KAAKunD,QAAQxoC,SAASlvC,QAAQ,SAAUusB,UAC3C,GAAqBqc,WAAY8uC,QAAQxoC,QAAQ3iB,SAC7Cw8E,YAAW77E,IAAI0b,YAEfugE,WAAWjpG,KAAK,GAAI6f,iBAAgBwM,SAAU9L,QAAQmoB,YAAY,KAG1E,IAAqBqhE,gCACjB12E,OAAO0b,OAAOh0C,SAAmB,OAAR6oB,OAAuD,KAChFmmF,2BACI12E,OAAO0b,OAAOlwC,IAAI,SAAUrD,MAAO6sG,cAC/B,MAAO7rE,OAAM8rE,6BACT9zE,UAAWA,UACX6zE,aAAcA,aACdplG,WAAYzH,MAAMyH,WAClBxG,QAASoqG,SACTtqG,MAAOf,MAAMe,UAI7B,IAAqBytG,gBAAiB9qF,WAAW+G,YAAYitD,WAAWhuD,QAAQwP,SAAUnU,QAAQiU,aAC7Eu0E,aAAe11E,OAAOqc,eAAe7wC,IAAI,SAAUu0B,UACpE,OACI32B,QAASutG,eACT32E,OAAQA,OACRD,SAAUA,YAGGuc,WAAatc,OAAOsc,WAAW9wC,IAAI,SAAUmnG,cAC9D,OACIvpG,QAASutG,eACTv0E,SAAUuwE,aAAc3yE,OAAQA,UAKnBk1E,WAAa/zE,SAmBlC,OAlBAv7B,MAAK6J,MAAM0xB,WAAa,WACpB,OACIvxB,WAAYowB,OAAOpwB,WACnBokG,UAAW,MAA4BzjF,MACvC0jF,QAASpoF,WAAW+G,YAAY2sD,cAAc1tD,QAC1C3E,QAAQgoF,YACRhoF,QAAQqD,OACR+lF,gBAAgB5uG,OAAS0kB,WAAWkqF,iBAAmBrkF,UACvD/E,QAAQooF,YACR1kF,aACAC,SACA8kF,UAAUjuG,OAAS,GAAI6kB,gBAAeopF,WAAa1jF,UACnD2jF,WAAWluG,OAAS,GAAI6kB,gBAAeqpF,YAAc3jF,YAEzD2kF,iBAAkBF,2BAClBloF,UAAWwR,OAAOxR,UAAUxiB,QAG3B0pG,aAAcA,aAAcp5D,WAAYA,aAOrDm1D,YAAYtrG,UAAUkwG,eAKtB,SAAU/lF,YAAasR,cACnBh8B,KAAKixG,iBAAiBjxG,KAAK4wG,0BAA0BlmF,YAAasR,gBAMtE6vE,YAAYtrG,UAAU6vG,uCAItB,SAAU5nF,YACN,GAAqB0oF,kBAAmB1oF,WAAW9J,KAAK,SAAU0b,QAAU,MAAOA,QAAOxR,UAAUE,aACpG,IAAIooF,kBAAoBA,iBAAiBtoF,UAAUgE,gBAAgB9qB,OAAQ,CACvE,GAAIsX,IAAKuT,oCAAoC3sB,KAAKyiB,UAAWziB,KAAK+/B,UAAW,KAA4BmxE,iBAAiBtoF,UAAUgE,iBAAkB5B,aAAe5R,GAAG4R,aAAcC,SAAW7R,GAAG6R,SAAUN,MAAQvR,GAAGuR,MAAOO,UAAY9R,GAAG8R,SAC/OlrB,MAAKixG,kBACDjmF,aAAcA,aACdC,SAAUA,SACVN,MAAOA,MACPO,UAAWA,UACXwlF,mBACA1mG,WAAYknG,iBAAiBlnG,eAQzC6hG,YAAYtrG,UAAU0wG,iBAItB,SAAU7iE,MAC2BpuC,KAAK6J,MAAM/H,MAI5C9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYokC,KAAKpkC,WACjBokG,UAAWhgE,KAAKzjB,MAChB0jF,QAASpoF,WAAW+G,YAAYvC,aAAawB,QACzC3E,QAAQ8mB,KAAKzjB,OACbyjB,KAAKsiE,gBAAgB5uG,OAAS0kB,WAAW4nB,KAAKsiE,iBAAmBrkF,UACjE+hB,KAAKljB,UAAWkjB,KAAKpjB,aAAcojB,KAAKnjB,eAUxD4gF,YAAYtrG,UAAUqwG,0BAKtB,SAAUlmF,YAAasR,cACnB,GACqB00E,mBACrB10E,cAAan1B,QAAQ,SAAU2E,OACvBpD,eAAeoD,MAAMlI,SAAW8E,eAAesiB,YAAY/kB,QAC3D+qG,gBAAgB3pG,KAAKyf,YAAYc,QAAQ9b,MAAMse,SAAUxC,QAAQ,OAGzE,IAAIlO,IAAKqR,YAAYzqB,KAAK+/B,UAAWrV,aAAcM,aAAe5R,GAAG4R,aAAcC,SAAW7R,GAAG6R,SAAUkmF,cAAgB/3F,GAAGuR,MAAOO,UAAY9R,GAAG8R,SACpJ,QACIP,MATyB,EASVwmF,cACfT,gBAAiBA,gBACjB1lF,aAAcA,aACdC,SAAUA,SACVC,UAAWA,UACXlhB,WAAY0gB,YAAY1gB,aAOhC6hG,YAAYtrG,UAAUuqG,SAItB,SAAUrpG,MACN,GAAIA,MAAQqoG,iBAAiBP,MAAM9nG,KAC/B,MAAOqoG,kBAAiBP,KAG5B,KAAK,GADgB6H,cAAe31E,SACVuxE,YAAchtG,KAAMgtG,YAAaA,YAAcA,YAAYvjE,OACjF2nE,aAAeA,aAAa/hF,KAAK,UAAUyI,KAAKpM,cAAe,CAE/D,GAAqB2lF,cAAerE,YAAYgB,eAAevsG,KAC/D,IAAoB,MAAhB4vG,aACA,MAAOprF,YAAW+G,YAAYitD,WAAWhuD,QAAQmlF,aAAc9pF,QAAQ+pF,eAG3E,IAAqBpE,QAASD,YAAY92D,UAAUx3B,KAAK,SAAUuuF,QAAU,MAAOA,QAAOxrG,OAASA,MACpG,IAAIwrG,OAAQ,CACR,GAAqBqE,UAAWrE,OAAO3pG,OArtB3B,WAstBZ,OAAO8tG,cAAa/hF,KAAK,WAAWA,KAAKiiF,WAGjD,MAAO,OAOXzF,YAAYtrG,UAAUgxG,6BAKtB,SAAUvnG,WAAY8sB,UAClB,GAAiB,IAAbA,SAAgB,CAChB,GAAqB06E,aAAcvrF,WAAW+G,YAAYosD,YAC1D,OAAO,YAAc,MAAOo4B,cAEhC,GAAqBlC,YAAatvG,KAAK6J,MAAM/H,MAW7C,OAVA9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZokG,UAAW,GACXC,QAASpoF,WAAW+G,YAAY6sD,cAAc5tD,QAC1C3E,QAAQgoF,YACRhoF,QAAQwP,eAIb,SAAUn1B,MAAQ,MAAO25B,eAAcg0E,WAAY3tG,QAO9DkqG,YAAYtrG,UAAUkxG,2BAKtB,SAAUznG,WAAYgtB,MAClB,GAAoB,IAAhBA,KAAKl1B,OAAc,CACnB,GAAqB4vG,aAAczrF,WAAW+G,YAAYqsD,UAC1D,OAAO,YAAc,MAAOq4B,cAEhC,GAAqB9rG,KAAM8gB,WAAWsQ,KAAKpxB,IAAI,SAAU0T,EAAGvO,GAAK,MAAQ9I,aAAaqX,GAAKhW,MAAOgkB,QAAQvc,QACrFukG,WAAatvG,KAAK6J,MAAM/H,MAW7C,OAVA9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZokG,UAAW,GACXC,QAASpoF,WAAW+G,YAAY8sD,eAAe7tD,QAC3C3E,QAAQgoF,YACR1pG,SAIL,SAAUjE,MAAQ,MAAO25B,eAAcg0E,WAAY3tG,QAQ9DkqG,YAAYtrG,UAAUoxG,qBAMtB,SAAUh9F,WAAYlT,KAAMq1B,UACxB,GAAqBqpE,MAA0BngG,KAAKojG,UAAU1kF,KAAK,SAAUqlE,aAAe,MAAOA,aAAYtiF,OAASA,MACxH,IAAI0+F,KAAKjxD,KAAM,CACX,GAAqB0iE,cAAe5xG,KAAK6J,MAAM/H,MAC/C9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAY2K,WAAW3K,WACvBokG,UAAW,IACXC,QAASpoF,WAAW+G,YAAY+sD,aAAa9tD,QACzC3E,QAAQsqF,cACRtqF,QAAQwP,cAOpB,KAFA,GAAqB+6E,cAAep2E,SACfq2E,YAAc9xG,KAC5B8xG,YAAYroE,QACfqoE,YAAcA,YAAYroE,OAC1BooE,aAAeA,aAAaxiF,KAAK,UAAUyI,KAAKpM,aAEpD,IAAqBqmF,eAAgBD,YAAY/D,oBAAoBtsG,MAChDuwG,gBAAkB/rF,WAAW+G,YAAYitD,WAAWhuD,QAAQ4lF,aAAcvqF,QAAQyqF,gBACvG,OAAO,UAAUpwG,MACb,MAAO+5B,iBAAgB/mB,WAAW4mB,UAAW5mB,WAAWy6F,aAAc9zE,cAAcs2E,cAAeI,iBAAiBppG,OAAOjH,SAI/H,GAAqB45B,WAAYv7B,KAAKiuG,YAAYt5F,WAAW3K,WAAYm2F,MACpD8R,gBAAkBhsF,WAAW+G,YAAYitD,WAAWhuD,QAAQwP,SAAUnU,QAAQiU,YACnG,OAAO,UAAU55B,MACb,MAAO+5B,iBAAgB/mB,WAAW4mB,UAAW5mB,WAAWy6F,aAAc6C,gBAAgB5pB,WAAW,YAAa1mF,SAS1HkqG,YAAYtrG,UAAU0tG,YAKtB,SAAUjkG,WAAYm2F,MAClB,GAAI58D,OAAQvjC,KACSu7B,UAAYv7B,KAAK6J,MAAM/H,OACvB6oB,MAAQ,CAC7Bw1E,MAAK/5F,KAAKkiB,eAAezhB,QAAQ,SAAU+jB,eAEnCA,gBAAkB3H,eAAeE,YACjCwH,OAASE,wBAAwBD,iBAGzC,IAAqBkB,UAAWq0E,KAAK/5F,KAAK2lB,OAAOnmB,IAAI,SAAUssG,OAAS,MAAOtmF,QAAO2X,MAAMxD,UAAWmyE,QAYvG,OATAlyG,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZokG,UAAW,GACXC,QAASpoF,WAAW+G,YAAYgtD,SAAS/tD,QACrC3E,QAAQqD,OAAQ4Y,MAAMxD,UAAU9Z,WAAWk6E,KAAK/5F,KAAKkB,WAAYkf,WAAWsF,eAIjFyP,WAWXswE,YAAYtrG,UAAU8uG,4BAStB,SAAU16F,YACN,GAAI4uB,OAAQvjC,IACZ,QACIu7B,UAAW5mB,WAAW4mB,UACtB6zE,aAAcz6F,WAAWy6F,aACzBplG,WAAY2K,WAAW3K,WACvBxG,QAASmR,WAAWnR,QACpBF,MAAOszB,gCACHC,4BAA6B,SAAUC,UACnC,MAAOyM,OAAMguE,6BAA6B58F,WAAW3K,WAAY8sB,WAErEC,0BAA2B,SAAUC,MACjC,MAAOuM,OAAMkuE,2BAA2B98F,WAAW3K,WAAYgtB,OAEnEC,oBAAqB,SAAUx1B,KAAMq1B,UACjC,MAAOyM,OAAMouE,qBAAqBh9F,WAAYlT,KAAMq1B,YAEzDniB,WAAWrR,SAMtBuoG,YAAYtrG,UAAU+tG,uBAGtB,WA+BI,QAAS6D,wBAAuB52E,UAAWvxB,WAAYwJ,YAAa4+F,iBAChE,GAAqBtD,gBACAjjF,MAAQrY,YAAY5N,IAAI,SAAUwT,IACnD,GAAIpP,YAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC5CmzB,UAAY,GAAK47E,qBACjB9F,aAAe/oG,UAAYoqG,SAAW0E,KAAO,KAC9D/4F,GAAK+e,uBAAuBi0E,aAAc/oG,QAASF,MAAOmzB,WAAYzR,MAAQzL,GAAGyL,MAAOwT,YAAcjf,GAAGif,WAE7G,OADAs2E,aAAY/nG,KAAK/E,MAAM8sG,YAAa9pF,MAAMpf,IAAI,SAAU4f,MAAQ,MAAOD,oCAAmCC,KAAMxb,eACzG4b,oCAAoC4S,YAAaxuB,aAK5D,QAHIwJ,YAAY1R,QAAUswG,kBACtBtD,YAAY/nG,KAAKwe,mCAAmC+V,cAAcC,UAAW1P,OAAO0N,SAAUvvB,aAE3F8kG,YA3CX,GAAqBwD,MAAOtyG,KACPqyG,mBAAqB,EACrB9D,uBACAC,yBACAC,aAAezuG,KAAK6J,MAAMjE,IAAI,SAAUnG,QAAS87B,WAClE,GAAIniB,IAAK3Z,UAAW4uG,QAAUj1F,GAAGi1F,QAASD,UAAYh1F,GAAGg1F,UAAW4C,iBAAmB53F,GAAG43F,iBAAkBzB,eAAiBn2F,GAAGm2F,eAAgBvlG,WAAaoP,GAAGpP,UAehK,OAdIulG,iBACAhB,oBAAoBxnG,KAAK/E,MAAMusG,oBAAqB4D,uBAAuB52E,UAAWvxB,WAAYulG,gBAAgB,IAElHyB,kBACAxC,sBAAsBznG,KAAK/E,MAAMwsG,sBAAuB2D,uBAAuB52E,UAAWvxB,WAAYgnG,kBAA+B,OAAZ5C,WAA2D,IAUjLxoF,oCAH2C,EAAZwoF,UAClC,GAAIniB,YAAW0hB,UAAU1hF,WAAWA,WAAYoiF,UAChDA,QACuDrkG,aAE/D,QAASukG,oBAAqBA,oBAAqBC,sBAAuBA,sBAAuBC,aAAcA,eA6BnH5C,YAAYtrG,UAAUovG,4BAKtB,SAAUp0E,UAAWg3E,UACjB,GAAIhvE,OAAQvjC,KACSwyG,oBACAC,wBAA0B,CAC/CF,UAAS1rG,QAAQ,SAAUuS,IACvB,GAAI5V,SAAU4V,GAAG5V,QAASg5B,SAAWpjB,GAAGojB,SAAUpC,OAAShhB,GAAGghB,OACzC3D,UAAY,GAAKg8E,0BACjBlG,aAAe/oG,UAAYoqG,SAAWrqE,MAAQ,KAC/DhqB,GAAK8c,qBAAqBk2E,aAAc/oG,QAASg5B,SAAS+Y,QAAS9e,WAAYzR,MAAQzL,GAAGyL,MAAO+kF,aAAexwF,GAAGwwF,aAClG2I,UAAY1tF,KAC7B+kF,eACA2I,UAAU3rG,KAAK+mG,kBAAkBttF,IAAIupF,aAAaltD,IAAIixD,oBAAoBv0E,SAE9E,IAAIxf,IAAKwiB,0BAA0BC,SAAUpC,QAASu4E,YAAc54F,GAAGlG,OAAQ47B,UAAY11B,GAAGtY,KACzEmxG,cAAgB91E,qBAAqB61E,YAAaljE,UACvE+iE,kBAAiBzrG,KAAKwe,mCAAmC,GAAIunE,QAAOxlE,QAAQsrF,eAAe3pB,UAAU4kB,gBAAiB6E,WAAYl2E,SAASxyB,cAE/I,IAAqB6oG,cACrB,IAAIL,iBAAiB1wG,OAAS,EAAG,CAC7B,GAAqBktG,WAAYlB,kBAAkBttF,IAAI8G,SAAQ,IAAO0Q,WAAWkvD,aAC5ElnF,KAAKypB,UAAUivB,QAAU3zB,iBAAiBytF,kBAAkBz+E,IAAuB65E,SAAc,OAClGoB,SAASjoG,KAAK6mG,SAASptF,IAAIib,SAASpM,KAAK,cAAc2I,WAAWh4B,KAAK8H,WAE3E+qG,cAAgB3rF,IACZ,GAAIuE,SAA2BgQ,SAAc,KAAGtP,eAChD,GAAIV,SAA2BoiF,eAAoB,KAAG1hF,eACtD,GAAIV,SAA2Bq+E,iBAAiBP,MAAW,KAAGp9E,gBAC/D6iF,SAASpmG,OAAO4pG,kBAAmB,GAAItmF,iBAAgB4hF,qBAAsB3hF,mBAGhF0mF,eAAgBxmF,SAEpB,OAAOwmF,gBAOXhH,YAAYtrG,UAAUo2C,eAKtB,SAAU/vC,IAAKpD,WAMfqoG,YAAYtrG,UAAUg2C,uBAKtB,SAAU3vC,IAAKpD,WAMfqoG,YAAYtrG,UAAUo1C,eAKtB,SAAU/uC,IAAKpD,WAMfqoG,YAAYtrG,UAAUs1C,cAKtB,SAAUjvC,IAAKpD,WAMfqoG,YAAYtrG,UAAUk1C,WAKtB,SAAU7uC,IAAKpD,WAMfqoG,YAAYtrG,UAAU80C,qBAKtB,SAAUzuC,IAAKpD,WAMfqoG,YAAYtrG,UAAU40C,UAKtB,SAAUvuC,IAAKpD,WACRqoG,eAgNPiH,cAAiB,WACjB,QAASA,eAAcnnD,YAAakhB,cAAeC,eAAgB8G,aAC/C,KAAZA,UAAsBA,QAAU,MACpC5zE,KAAK2rD,YAAcA,YACnB3rD,KAAK6sE,cAAgBA,cACrB7sE,KAAK8sE,eAAiBA,eACtB9sE,KAAK4zE,QAAUA,QACf5zE,KAAKitE,aA0ET,MAlEA6lC,eAAcvyG,UAAUwyG,mBAMxB,SAAUv7B,KAAM1uE,IAAKoN,qBACjB,GAAqB88F,kBAAmBhzG,KAAK2rD,YAAYn4B,MAAMgkD,KAAM1uE,KAAK,EAAMoN,oBAChF,IAAI88F,iBAAiBhhF,OAAOlwB,OACxB,MAAOkxG,kBAAiBhhF,MAE5B,IAAqBihF,kBAAmBr1F,gBAAgBo1F,iBAAiBjhF,UAAW7b,oBAAqBlW,KAAK6sE,cAAe7sE,KAAK8sE,eAClI,OAAImmC,kBAAiBjhF,OAAOlwB,OACjBmxG,iBAAiBjhF,SAE3B5Y,GAAKpZ,KAAKitE,WAAWlmE,KAAK/E,MAAMoX,GAAI65F,iBAAiB/yF,aAEtD,IAAI9G,KAOR05F,cAAcvyG,UAAU2yG,YAGxB,WAAc,MAAOlzG,MAAKitE,WAM1B6lC,cAAcvyG,UAAUsxE,MAKxB,SAAUyF,WAAY67B,eAClB,GAAqBjzF,aACAkzF,cAAgB,GAAIC,oBAEzCrzG,MAAKitE,UAAUpmE,QAAQ,SAAUqK,SAC7B,GAAqB5H,IAAKguE,WAAWl/D,OAAOlH,QACvCgP,UAAS7Z,eAAeiD,KAIxB8P,GAAK8G,SAAS5W,IAAI07D,SAASj+D,KAAK/E,MAAMoX,GAAIlI,QAAQ8zD,SAHnD9kD,SAAS5W,IAAM4H,OAKnB,IAAIkI,KAGR,IAAqBk6F,SAAU9yG,OAAOw2B,KAAK9W,UAAUta,IAAI,SAAU0D,IAC/D,GAAqB2uE,QAASX,WAAWtH,iBAAiB9vD,SAAS5W,KAC9CiqG,IAAMrzF,SAAS5W,IACfO,MAAQouE,OAASm7B,cAAc//B,QAAQkgC,IAAI1pG,MAAOouE,QAAUs7B,IAAI1pG,MAChE2pG,mBAAqB,GAAI3uC,SAAQh7D,YAAe0pG,IAAIh7F,QAASg7F,IAAI/1F,YAAalU,GAKnG,OAJAkqG,oBAAmBxuC,QAAUuuC,IAAIvuC,QAC7BmuC,eACAK,mBAAmBxuC,QAAQn+D,QAAQ,SAAUkP,QAAU,MAAOA,QAAOnO,SAAWurG,cAAcp9F,OAAOnO,YAElG4rG,oBAEX,OAAOl8B,YAAWzF,MAAMyhC,QAAStzG,KAAK4zE,UAEnCk/B,iBAEPO,oBAAuB,SAAU5oG,QAEjC,QAAS4oG,uBACL,MAAkB,QAAX5oG,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,KA2D/D,MA7DAC,WAAUozG,oBAAqB5oG,QAS/B4oG,oBAAoB9yG,UAAU8yE,QAK9B,SAAUxpE,MAAOouE,QACb,GAAI10C,OAAQvjC,IACZ,OAAOi4E,QAASpuE,MAAMjE,IAAI,SAAUmL,GAAK,MAAOA,GAAEpK,MAAM48B,MAAO00C,UAAcpuE,OAOjFwpG,oBAAoB9yG,UAAUgkE,oBAK9B,SAAUC,GAAIyT,QACV,GAAI10C,OAAQvjC,KACSykE,UAA+BwT,OAAOl4D,aAAaykD,GAAGC,WACtDC,UAAYF,GAAGE,UAA+BuT,OAAOl4D,aAAaykD,GAAGE,WAAeF,GAAGE,UACvFr6D,SAAWm6D,GAAGn6D,SAASzE,IAAI,SAAUmL,GAAK,MAAOA,GAAEpK,MAAM48B,MAAO00C,SACrF,OAAO,IAAIzS,gBAAehB,GAAG5kD,IAAK4kD,GAAGl3D,MAAOm3D,UAAWC,UAAWr6D,SAAUm6D,GAAG9B,OAAQ8B,GAAGx6D;kGAO9FqpG,oBAAoB9yG,UAAUokE,iBAK9B,SAAUH,GAAIyT,QACV,MAAO,IAAIxS,aAAYjB,GAAGlhE,MAA0B20E,OAAOl4D,aAAaykD,GAAG/iE,MAAS+iE,GAAGx6D,aAO3FqpG,oBAAoB9yG,UAAUqkE,oBAK9B,SAAUJ,GAAIyT,QACV,MAAO,IAAIvS,gBAAelB,GAAGlhE,MAA0B20E,OAAOl4D,aAAaykD,GAAG/iE,MAAS+iE,GAAGx6D,aAEvFqpG,qBACT1tC,cAaE8tC,cAAiB,WACjB,QAASA,eAAcC,WAAYx2E,WAAYy2E,eAC3C3zG,KAAK0zG,WAAaA,WAClB1zG,KAAKk9B,WAAaA,WACW,gBAAlBy2E,gBACP3zG,KAAK+V,OAAS49F,cACd3zG,KAAKglB,MAAQ,OAGbhlB,KAAK+V,OAAS,KACd/V,KAAKglB,MAAQ2uF,eAyBrB,MAlBAF,eAAclzG,UAAUskB,aAIxB,SAAUD,OACN,MAAI5kB,MAAKk9B,aAAetY,MAAMsY,aAG1Bl9B,KAAK+V,OACE/V,KAAK+V,SAAW6O,MAAM7O,OAEd,MAAf6O,MAAMI,OAKHF,iBAAoC9kB,KAAW,MAAsB4kB,MAAY,SAErF6uF,iBAwKP70E,iBAAoB,SAAUn0B,QAE9B,QAASm0B,kBAAiBJ,eAAgBD,gBAAiBF,aACvD,GAAIkF,OAAQ94B,OAAOmjC,KAAK5tC,OAASA,IAWjC,OAVAujC,OAAM/E,eAAiBA,eACvB+E,MAAMhF,gBAAkBA,gBACxBgF,MAAMlF,YAAcA,YACpBkF,MAAM9E,WACN8E,MAAMqwE,cAAgB,GAAIjrF,KAC1B4a,MAAMswE,aAAe,GAAIlrF,KACzB4a,MAAMuwE,yBAA2B,GAAInrF,KACrC4a,MAAMwwE,sBACNxwE,MAAMjE,mCAAqC,GAAI3W,KAC/C4a,MAAMpF,WAAaK,eAAew1E,mBAAmB31E,aAC9CkF,MAoOX,MAjPAtjC,WAAU2+B,iBAAkBn0B,QAmB5Bm0B,iBAAiBr+B,UAAUu+B,WAI3B,SAAUG,SACN,GAAIsE,OAAQvjC,KACSi0G,mBAAqBj0G,KAAKs/B,mCAAmC/e,IAAI0e,QAAQF,QACzEm1E,iBAAmBl0G,KAAK8zG,yBAAyBvzF,IAAI0e,QAAQF,OAQlF,IAPKk1E,qBACDA,oBAAuBl1E,OAAQE,QAAQF,OAAQC,aAAU96B,IACzDlE,KAAKs/B,mCAAmC9e,IAAIye,QAAQF,OAAQk1E,oBAC5DC,kBAAqBn1E,OAAQ/+B,KAAKm0G,aAAal1E,QAAQF,OAAQ,IAC/D/+B,KAAK+zG,mBAAmBhtG,KAAKmtG,kBAC7Bl0G,KAAK8zG,yBAAyBtzF,IAAIye,QAAQF,OAAQm1E,oBAEjDD,mBAAmBj1E,UAAYC,QAAQD,SAAU,CAClD,GAAqBo1E,YAAan1E,QAAQD,YAC1C,IAA8B,UAA1Bo1E,WAAW/zE,WAAwB,CASnC,GAAqBg0E,WACrB7zG,QAAOw2B,KAAKo9E,YAAYvtG,QAAQ,SAAUusB,UACrB,eAAbA,WACAihF,QAAQjhF,UAAYghF,WAAWhhF,aAGvCghF,WAAaC,YAERj0E,QAAOg0E,cACP9zE,eAAe8zE,aAAgB7zE,uBAAuB6zE,cAGvDA,YACI/zE,WAAY,QACZnvB,QAAS,8CAQrB,IAFA+iG,mBAAmBj1E,SAAWo1E,WAC9BF,iBAAiBl1E,SAAWh/B,KAAKm0G,aAAaC,WAAY,GACtDA,qBAAsB5sG,eACtBxH,KAAKu+B,gBAAgBgB,cAAc60E,WAAWxsG,UAAW,CACzD,GAAqB0sG,mBAAoBt0G,KAAKy+B,QAA2Bz+B,KAAK4zG,cAAcrzF,IAAI6zF,YAC3FhyF,iBAAgBkyF,kBAAkB7yG,OAOnCzB,KAAK6zG,aAAarzF,IAAI8zF,kBAAmBr1E,QAAQF,SAI7D,IAAKk1E,mBAAmB7tG,MAAQ64B,QAAQ74B,OACpC6tG,mBAAmB7tG,KAAO64B,QAAQ74B,KAIlC8tG,iBAAiB9tG,KAAOpG,KAAKm0G,aAAal1E,QAAQ74B,KAAM,GAGpD64B,QAAQ74B,KAAK8yC,cAAgBxB,mBAAmBt2C,UAAU,CAC1D,GAAqBmzG,iBAAoCt1E,QAAY,IACrEs1E,iBAAgBl7D,mBAAmBzwC,OAAO2rG,gBAAgBj7D,eAAezyC,QAAQ,SAAUyC,IACvF,GAAqBy1B,QAASz1B,GAAGhC,SACjC,IAAIi8B,MAAMhF,gBAAgBgB,cAAcR,OAAOn3B,YAC1C27B,MAAMjE,mCAAmCvL,IAAIgL,QAAS,CACvD,GAAqBy1E,WAAYjxE,MAAMhF,gBAAgBkhD,eAAe1gD,OAClEy1E,YACAjxE,MAAMzE,WAAW01E,gBAUzC51E,iBAAiBr+B,UAAU8e,UAG3B,WACI,GAAIkkB,OAAQvjC,KACSw0B,WA4BrB,QAAS0K,KA3BmBmY,KAAK3xC,WAC7By4B,WAAYn+B,KAAKm+B,WACjB8M,UAAWjrC,KAAK+zG,mBAChBt1E,QAASz+B,KAAKy+B,QAAQ74B,IAAI,SAAUm5B,OAAQ35B,OACxC25B,OAAOqY,iBACP,IAAqBq9D,cAA4B,EACjD,IAAIlxE,MAAMhF,gBAAgBgB,cAAcR,OAAOn3B,UAAW,CACtD,GAAqB8sG,gBAAiBnxE,MAAMswE,aAAatzF,IAAIwe,OAC7D,IAAI21E,eACAD,SAA8BlxE,MAAMqwE,cAAcrzF,IAAIm0F,oBAErD,CACD,GAAqBz1E,SAAUsE,MAAMjE,mCAAmC/e,IAAIwe,OACvEE,UAAYA,QAAQD,UAA4C,cAAhCC,QAAQD,SAASqB,aAClDo0E,SAAW11E,OAAOt9B,KAAO,IAAM2D,MAC/BovB,SAASztB,MAAOg4B,OAAQA,OAAQvK,SAAUigF,aAItD,OACIE,SAAUvvG,MACV3D,KAAMs9B,OAAOt9B,KACbmG,SAAU27B,MAAMhF,gBAAgBq2E,kBAAkB71E,OAAOn3B,SAAU27B,MAAMlF,aACzEo2E,SAAUA,cAIDjgF,SAAUA,WAOnCoK,iBAAiBr+B,UAAU4zG,aAK3B,SAAU7wG,MAAOqnB,OACb,MAAOtnB,YAAWC,MAAOtD,KAAM2qB,QAOnCiU,iBAAiBr+B,UAAUwD,WAK3B,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cAAc,CAC/B,GAAqBqtG,YAAa70G,KAAKw+B,eAAewC,gBAAgB19B,MAAMsE,SAAUtE,MAAM7B,KAE5F,QAASkzG,SADoB30G,KAAK80G,kBAAkBD,WAAYrxG,SACtC2zC,QAAS7zC,MAAM6zC,WAUjDvY,iBAAiBr+B,UAAUu0G,kBAO3B,SAAUD,WAAYlqF,OAClB,GAAqBvlB,OAAQpF,KAAK4zG,cAAcrzF,IAAIs0F,YAC/B51E,QAAU,IAC/B,IAAY,EAARtU,OACA3qB,KAAKu+B,gBAAgBgB,cAAcs1E,WAAWjtG,UAAW,CACzD,GAAI5H,KAAKs/B,mCAAmCvL,IAAI8gF,YAG5C,MAAwB,MAE5B51E,SAAUj/B,KAAK+0G,YAAYF,YACvB51E,SAAWA,QAAQD,mBAAoBx3B,gBAEvCpC,MAAQpF,KAAK80G,kBAAkB71E,QAAQD,SAAUrU,OAEjDsU,QAAU,UAGb,IAAa,MAAT75B,MAGL,MAAOA,MAWX,OARa,OAATA,QACAA,MAAQpF,KAAKy+B,QAAQ38B,OACrB9B,KAAKy+B,QAAQ13B,KAAK8tG,aAEtB70G,KAAK4zG,cAAcpzF,IAAIq0F,WAAYzvG,OAC/B65B,SACAj/B,KAAK8+B,WAAWG,SAEb75B,OAMXw5B,iBAAiBr+B,UAAUw0G,YAI3B,SAAUh2E,QACN,GAAqBE,SAAUj/B,KAAKu+B,gBAAgBkhD,eAAe1gD,OACnE,KAAKE,QAAS,CAIV,GAAqBJ,gBAAiB7+B,KAAKw+B,eAAesE,cAAc/D,OACpEF,kBACAI,SAAYF,OAAQF,eAAeE,OAAQC,SAAUH,eAAeG,WAG5E,MAAOC,UAEJL,kBACTmV,kBACE3U,iBAAoB,WACpB,QAASA,kBAAiBW,UAAWvB,eAAgBD,iBACjDv+B,KAAK+/B,UAAYA,UACjB//B,KAAKw+B,eAAiBA,eACtBx+B,KAAKu+B,gBAAkBA,gBACvBv+B,KAAKouC,QAwMT,MAjMAhP,kBAAiB7+B,UAAU8+B,cAK3B,SAAUJ,QAASD,UACfh/B,KAAKouC,KAAKrnC,MAAOk4B,QAASA,QAASD,SAAUA,SAAUg2E,WAAW,KAMtE51E,iBAAiB7+B,UAAUi/B,WAI3B,SAAUP,SACNj/B,KAAKouC,KAAKrnC,MAAOk4B,QAASA,QAASD,SAAU,KAAMg2E,WAAW,KAMlE51E,iBAAiB7+B,UAAU8e,UAI3B,SAAU41F,aAGN,IAAK,GAFD1xE,OAAQvjC,KACSk1G,iBAAmB,GAAIvsF,KACnC/mB,GAAK,EAAGuzG,cAAgBF,YAAarzG,GAAKuzG,cAAcrzG,OAAQF,KAAM,CAC3E,GAAIwX,IAAK+7F,cAAcvzG,IAAKm9B,OAAS3lB,GAAG2lB,OAAQvK,SAAWpb,GAAGob,QAC9D0gF,kBAAiB10F,IAAIue,OAAQvK,UAGjC,IAAK,GADgB4gF,iBAAkB,GAAIpxF,KAClCzK,GAAK,EAAGQ,GAAK/Z,KAAKouC,KAAM70B,GAAKQ,GAAGjY,OAAQyX,KAAM,CACnD,GAAIc,IAAKN,GAAGR,IAAK0lB,QAAU5kB,GAAG4kB,QAASD,SAAW3kB,GAAG2kB,SAAUg2E,UAAY36F,GAAG26F,SAC9E,IAAI/1E,QAAQia,cAAgBxB,mBAAmBt2C,SAAU,CAKrDg0G,gBAAgBj5E,IAAI8C,QAAQ74B,KAAKkB,UAEjC,KAAK,GADgBy7E,YAA8B,QAC1CzoE,GAAK,EAAG4rD,GAAK6c,WAAWxgD,QAASjoB,GAAK4rD,GAAGpkE,OAAQwY,KAAM,CAC5D,GAAI0oE,KAAM9c,GAAG5rD,GACb86F,iBAAgBj5E,IAAI6mD,IAAI17E,YAGhC,IAAK0tG,UAAW,CACkBhzF,kBAAkBid,QAAQ74B,KAAKkB,UAAU7F,KACvEu+B,6BAA4BhgC,KAAK+/B,UAAWd,QAAQ74B,KAAKkB,UAAWtH,KAAKq1G,yBAAyBp2E,QAA0B,YAGpIm2E,gBAAgBvuG,QAAQ,SAAUyuG,gBAC9B,GAAI/xE,MAAMhF,gBAAgBgB,cAAc+1E,eAAe1tG,UAAW,CAC9D,GAAqB4sB,UAAW0gF,iBAAiB30F,IAAI+0F,iBAAmBA,eAAe7zG,KAClE8zG,gBAAkBvzF,kBAAkBwS,SACzD+O,OAAMxD,UAAU9G,WAAWlyB,KAAKgf,SAASwvF,iBACpC/0F,IAAI+iB,MAAMiyE,oBAAoBF,iBAC9Bt9E,WAAW,MAAOC,aAAakI,gBAShDf,iBAAiB7+B,UAAU80G,yBAK3B,SAAUp2E,QAASD,UACf,GAAIuE,OAAQvjC,KACSwT,aAAexT,KAAKy1G,iBAAiBx2E,UACrC/W,YACrB,IAAI8W,mBAAoBoa,yBACpB5lC,YAAYzM,KAAK/E,MAAMwR,YAIvBwrB,SAAS8E,mBAAmBl7B,OAAOo2B,SAAS+E,eACvCn+B,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAClCsB,OAAOo2B,SAASzB,iBAAiBgF,QAAQ38B,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAC3E0b,OAAO,SAAUzb,KAAO,MAAOA,OAAQy3B,SAAS54B,KAAKkB,aACrD1B,IAAI,SAAU2B,KAAO,MAAOg8B,OAAMiyE,oBAAoBjuG,QAG3D2gB,UAAY8W,SAAS9W,cAEpB,IAAI+W,QAAQia,cAAgBxB,mBAAmB72C,UAAW,CAC3D,GAAqBmgF,YAA8B,OACnD94D,WAAY84D,WAAW94D,UAAUtf,OAAOo4E,WAAW93D,eAWvD,MALA1V,aAAYzM,KAAK/E,MAAMwR,YAAa0U,UAAUlF,OAAO,SAAUyE,UAAY,QAASA,SAASI,WAAajiB,IAAI,SAAU6hB,UACpH,MAAO8b,OAAMkyE,kBACTv8D,YAAaxB,mBAAmBC,WAAYvxC,KAAMqhB,SAASI,cAG5DrB,WAAWhT,cAMtB4rB,iBAAiB7+B,UAAUi1G,oBAI3B,SAAUE,YACN,GAAqBC,mBAAoB31G,KAAKw+B,eAAewC,gBAAgBnf,sBAAsB6zF,WAAW9tG,UAAWoa,kBAAkB0zF,WAAWj0G,MACtJ,OAAOzB,MAAK+/B,UAAU9Z,WAAW0vF,oBAMrCv2E,iBAAiB7+B,UAAUk1G,iBAI3B,SAAUrnE,MACN,GAAqBrO,WAAY//B,KAAK+/B,SA+DtC,OAAO18B,YAAW+qC,KAAM,IA9DL,WACf,QAASwnE,gBA2DT,MApDAA,aAAYr1G,UAAUoD,WAKtB,SAAUqL,IAAKxL,SACX,GAAI+/B,OAAQvjC,IACZ,OAAOwmB,YAAWxX,IAAIpJ,IAAI,SAAU8Z,OAAS,MAAOrc,YAAWqc,MAAO6jB,MAAO//B,aAOjFoyG,YAAYr1G,UAAUsD,eAKtB,SAAU+B,IAAKpC,SACX,GAAI+/B,OAAQvjC,IACZ,OAAO,IAAI2mB,gBAAenmB,OAAOw2B,KAAKpxB,KAAKA,IAAI,SAAUqO,KAAO,MAAO,IAAI2S,iBAAgB3S,IAAK5Q,WAAWuC,IAAIqO,KAAMsvB,MAAO//B,UAAU,OAO1IoyG,YAAYr1G,UAAUuD,eAKtB,SAAUR,MAAOE,SAAW,MAAO8jB,SAAQhkB,QAM3CsyG,YAAYr1G,UAAUwD,WAKtB,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cACjB,MAAOu4B,WAAU9Z,WAAW3iB,MAG5B,MAAM,IAAIkB,OAAM,oCAAsClB,QAGvDsyG,gBAEgC,OAExCx2E,oBAEPQ,qBAAwB,SAAUn1B,QAElC,QAASm1B,sBAAqBF,YAAanB,iBACvC,GAAIgF,OAAQ94B,OAAOmjC,KAAK5tC,OAASA,IAGjC,OAFAujC,OAAM7D,YAAcA,YACpB6D,MAAMhF,gBAAkBA,gBACjBgF,MAqDX,MA1DAtjC,WAAU2/B,qBAAsBn1B,QAYhCm1B,qBAAqBr/B,UAAUs/B,YAK/B,SAAUF,gBAAiBT,MACvB,GAAIqE,OAAQvjC,KACSouC,KAAOiJ,KAAK7jB,MAAM0L,MAClB22E,cACrB71G,MAAKy+B,QAAU2P,KAAK3P,QAAQ74B,IAAI,SAAUkwG,kBACtC,MAAOvyE,OAAM7D,YAAYnf,IAAIgjB,MAAMhF,gBAAgBw3E,oBAAoBD,iBAAiBluG,SAAU+3B,iBAAkBm2E,iBAAiBr0G,QAEzI2sC,KAAK3P,QAAQ53B,QAAQ,SAAUivG,iBAAkB1wG,OAC7C,GAAqB25B,QAASwE,MAAM9E,QAAQr5B,OACvBqvG,SAAWqB,iBAAiBrB,QACzB,iBAAbA,UACPoB,YAAY9uG,MAAOg4B,OAAQA,OAAQ01E,SAAUlxE,MAAM9E,QAAQg2E,YAElC,gBAAbA,WACZoB,YAAY9uG,MAAOg4B,OAAQA,OAAQ01E,SAAUlxE,MAAM7D,YAAYnf,IAAIS,kBAAkB2e,iBAAkB80E,aAG/G,IAAqBxpE,WAA8B5nC,WAAW+qC,KAAKnD,UAAWjrC,KAAM,KACpF,QAASm+B,WAAYiQ,KAAKjQ,WAAY8M,UAAWA,UAAWwpE,SAAUoB,cAO1Ej2E,qBAAqBr/B,UAAUsD,eAK/B,SAAU+B,IAAKpC,SACX,GAAI,YAAcoC,KAAK,CACnB,GAAqBivG,YAAa70G,KAAKy+B,QAAQ74B,IAAc,UACxCuxC,QAAUvxC,IAAa,OAC5C,OAAOuxC,SAAQr1C,OAAS9B,KAAK0/B,YAAYnf,IAAIs0F,WAAWjtG,SAAUitG,WAAWpzG,KAAM01C,SAC/E09D,WAGJ,MAAOpqG,QAAOlK,UAAUsD,eAAe+pC,KAAK5tC,KAAM4F,IAAKpC,UAGxDo8B,sBACTmU,kBAoCEiiE,eACAC,MAAO,EACPC,UAAW,EACXhjE,IAAK,EAET8iE,eAAcA,cAAcC,OAAS,QACrCD,cAAcA,cAAcE,WAAa,YACzCF,cAAcA,cAAc9iE,KAAO,KACnC,IAAIvL,aAAe,WACf,QAASA,aAAYikB,QAASuqD,SAAUC,MAAOnoD,WAAYooD,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,mBAAoBC,kBAAmBC,eAAgBh5B,iBAAkBi5B,iBACnM52G,KAAK4rD,QAAUA,QACf5rD,KAAKm2G,SAAWA,SAChBn2G,KAAKo2G,MAAQA,MACbp2G,KAAKiuD,WAAaA,WAClBjuD,KAAKq2G,kBAAoBA,kBACzBr2G,KAAKs2G,gBAAkBA,gBACvBt2G,KAAKu2G,eAAiBA,eACtBv2G,KAAKw2G,cAAgBA,cACrBx2G,KAAKy2G,mBAAqBA,mBAC1Bz2G,KAAK02G,kBAAoBA,kBACzB12G,KAAK22G,eAAiBA,eACtB32G,KAAK29E,iBAAmBA,iBACxB39E,KAAK42G,gBAAkBA,gBACvB52G,KAAK62G,kBAAoB,GAAIluF,KAC7B3oB,KAAK82G,eAAiB,GAAInuF,KAusB9B,MAlsBAgf,aAAYpnC,UAAUurD,WAGtB,WAAc9rD,KAAKq2G,kBAAkBvqD,cAKrCnkB,YAAYpnC,UAAUw2G,mBAItB,SAAUC,WACN,GAAIzzE,OAAQvjC,KACSi3G,cAAgBt1E,4BAA4Bq1E,UAAWh3G,KAAKo2G,MAAOp2G,KAAK42G,gBAAiB52G,KAAKq2G,kBAInH,OAHAY,eAAc50E,UAAUx7B,QAAQ,SAAUy7B,UACtC,MAAOiB,OAAM8yE,kBAAkBh1B,qCAAqC/+C,SAASl8B,KAAKkB,WAAW,KAE1F2vG,eAMXtvE,YAAYpnC,UAAU22G,oBAItB,SAAUF,WACN,GAAIzzE,OAAQvjC,KACSi3G,cAAgBt1E,4BAA4Bq1E,UAAWh3G,KAAKo2G,MAAOp2G,KAAK42G,gBAAiB52G,KAAKq2G,kBACnH,OAAOhiE,SACFF,IAAI8iE,cAAc50E,UAAUz8B,IAAI,SAAU08B,UAC3C,MAAOiB,OAAM8yE,kBAAkBh1B,qCAAqC/+C,SAASl8B,KAAKkB,WAAW,MAE5Ff,KAAK,WAAc,MAAO0wG,kBAMnCtvE,YAAYpnC,UAAU42G,aAItB,SAAUx1F,UACN,GAAqBwgB,cAAeniC,KAAK82G,eAAev2F,IAAIoB,SAM5D,OALKwgB,gBACDA,aACIC,YAAYpiC,KAAKo2G,MAAOp2G,KAAK42G,gBAAiB52G,KAAKq2G,kBAAmB10F,UAC1E3hB,KAAK82G,eAAet2F,IAAImB,SAAUwgB,eAE/BA,cAMXwF,YAAYpnC,UAAU62G,uBAItB,SAAUz1F,UACN,GAAI4hB,OAAQvjC,KACSq3G,gBACAr6E,KAAOh9B,KAAKm3G,aAAax1F,WAM1C3hB,KAAKm2G,SAASmB,wBAA0Bt6E,KAAKxU,WAAW1mB,QAAUk7B,KAAKyF,MAAM3gC,QAC7Ek7B,KAAK0F,YAAY5gC,QAAUk7B,KAAKqF,UAAUvgC,QAAUk7B,KAAK4F,yBACzDy0E,aAAatwG,KAAKia,kBAAkBgc,KAAKrb,UAAU,IAC/C3hB,KAAKm2G,SAASoB,uBACdF,aAAatwG,KAAK8a,sBAAsBmb,KAAKrb,UAAU,IAG/D,IAAqBkf,YAAa1f,sBAAsB6b,KAAKrb,UAAU,GAAM,EAoB7E,OAnBAqb,MAAKxU,WAAW3hB,QAAQ,SAAU2wG,WAC9B,GAAqBvuG,UAA8Bs6B,MAAM8yE,kBAAkBt2B,kCAAkCy3B,WAAax4E,QACrH/1B,UAAS6f,aAKd7f,SAAkB,SAAE6uC,UAAUjxC,QAAQ,SAAUymD,UAC5C,GAAqBmqD,eAAgBl0E,MAAM6yE,MAAMnxE,uBAAuBqoB,SAAUtwB,KAAKrb,SACvF,KAAK81F,cACD,KAAMrzG,aAAY,6BAA+BkpD,SAAW,gBAAkBtwB,KAAKrb,SAEvF,IAAqBif,YAAgC33B,SAAkB,SAAE+uC,eAAiBzU,MAAMqoB,QAAQzlB,wBAA0BC,kBAAkBC,QACpJgxE,cAAatwG,KAAKk6B,iBAAiBw2E,cAAe72E,UAAWC,aACzD0C,MAAM4yE,SAASmB,wBACfD,aAAatwG,KAAKk6B,iBAAiBw2E,eAAgB72E,UAAWC,iBAInEw2E,cAOX1vE,YAAYpnC,UAAUm3G,cAKtB,SAAUC,YAAaC,kBACnB,GAAqB73E,WAAY//B,KAAK63G,qBAAqBF,YAC3D,IAAIA,YAAYp2F,SAAS,iBAAkB,CACvC,IAAKq2F,iBACD,KAAM,IAAIpzG,OAAM,6EAA+EmzG,YAEnG,IAAqBG,cAAe93G,KAAKm3G,aAAaS,iBACtD53G,MAAK+3G,qBAAqBh4E,UAAW+3E,aAAc9B,cAAcC,WAEhE,IAAI0B,YAAYp2F,SAAS,kBAC1B,GAAIvhB,KAAKm2G,SAASoB,sBAAuB,CACrC,IAAKK,iBACD,KAAM,IAAIpzG,OAAM,6EAA+EmzG,YAEnG,IAAqBG,cAAe93G,KAAKm3G,aAAaS,iBACtDp3E,kBAAiBT,WACjB+3E,aAAaz1E,UAAUx7B,QAAQ,SAAUy7B,UAErCxC,iBAAiBC,UAAWuC,SAASl8B,KAAKkB,kBAI7CqwG,aAAYp2F,SAAS,gBAC1Bif,iBAAiBT,UAOrB,OAAO//B,MAAKg4G,qBAAqB,UAAWj4E,YAOhD4H,YAAYpnC,UAAU03G,kBAKtB,SAAUN,YAAaC,kBACnB,GAAqBE,cAAe93G,KAAKm3G,aAAaS,kBACjC73E,UAAY//B,KAAK63G,qBAAqBF,YAI3D,OAHIA,aAAYp2F,SAAS,kBACrBvhB,KAAK+3G,qBAAqBh4E,UAAW+3E,aAAc9B,cAAcE,WAE9Dn2E,UAAU9G,WAAWn3B,OAAS,EACjC9B,KAAKg4G,qBAAqBF,aAAan2F,SAAUoe,WACjD,MAMR4H,YAAYpnC,UAAU23G,eAItB,SAAU72E,WACN,GAAIkC,OAAQvjC,KACSgiC,MAAQX,UAAUz7B,IAAI,SAAU+b,UAAY,MAAO4hB,OAAM4zE,aAAax1F,YACtEw2F,kBAMrB,OALAn2E,OAAMn7B,QAAQ,SAAUm2B,MACpB,MAAOA,MAAKqF,UAAUx7B,QAAQ,SAAUy7B,UACpC,MAAO61E,iBAAgBpxG,KAAKw8B,MAAM8yE,kBAAkBh1B,qCAAqC/+C,SAASl8B,KAAKkB,WAAW,QAGnH+sC,QAAQF,IAAIgkE,iBAAiB5xG,KAAK,SAAUka,GAAK,MAAOujB,yBAAwBhC,UAM3F2F,YAAYpnC,UAAU63G,cAItB,SAAU/2E,WACN,GAAIkC,OAAQvjC,KACSgiC,MAAQX,UAAUz7B,IAAI,SAAU+b,UAAY,MAAO4hB,OAAM4zE,aAAax1F,WAM3F,OALAqgB,OAAMn7B,QAAQ,SAAUm2B,MACpB,MAAOA,MAAKqF,UAAUx7B,QAAQ,SAAUy7B,UACpC,MAAOiB,OAAM8yE,kBAAkBh1B,qCAAqC/+C,SAASl8B,KAAKkB,WAAW,OAG9F08B,wBAAwBhC,QAQnC2F,YAAYpnC,UAAUw3G,qBAMtB,SAAUh4E,UAAW/C,KAAMq7E,WACvB,GAAI90E,OAAQvjC,KACSwrG,YAAc,CACnCxuE,MAAKqF,UAAUx7B,QAAQ,SAAU+qF,aAAc0mB,eAO3C/0E,MAAMmzE,kBAAkBvkB,WAAWpyD,UAAW6xD,aAAaxrF,KAAKkB,UAKhE,IAAqBge,oBAAqBssE,aAAar0D,iBAAiB/U,WAAW5iB,IAAI,SAAU1F,GAAK,MAAOA,GAAEoH,YAAcsB,OAAOgpF,aAAar0D,iBAAiBkF,MAAM78B,IAAI,SAAU1F,GAAK,MAAOA,GAAEoH,YAAesqF,aAAap4C,gBAAgB5zC,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,YAAesqF,aAAan4C,gBAAgB7zC,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,aACzUmkG,sBAAwB,GAAI9iF,IACjDrD,oBAAmBze,QAAQ,SAAUU,IAAKgxG,WAClCh1E,MAAM6yE,MAAMl0E,aAAa36B,IAAIK,WAC7B6jG,sBAAsBjrF,IAAIjZ,IAAK,QAAU+wG,cAAgB,IAAMC,aAGvE9M,sBAAsB5kG,QAAQ,SAAUi/E,QAASx+E,WAC7Cy4B,UAAU9G,WAAWlyB,KAAKgf,SAAS+/D,SAC9BtlE,IAAI6L,UAAUyL,KAAKpM,eACnBsM,WAAW1R,eAAeyZ,UAAU9Z,WAAW3e,gBAEpD+wG,UAAYrC,cAAcE,WAE1BtkB,aAAa9tD,mBAAmBj9B,QAAQ,SAAU2xG,OAC9C,GAAqBvvG,UAAWs6B,MAAM8yE,kBAAkBv1B,qBAAqB03B,MAAMlxG,UAC9E2B,UAAS6f,cAGd0iF,cACAjoE,MAAMk1E,sBAAsB14E,UAAW92B,SAAS7C,KAAKkB,UAAU7F,KAAO,SAAW+pG,YAAa5Z,aAAcruD,MAAM8yE,kBAAkB32B,yBAAyBz2E,WAAYA,SAAS7C,MAAOqlG,uBACzLloE,MAAMk1E,sBAAsB14E,UAAW92B,SAAS7C,KAAKkB,UAAU7F,KAAO,IAAM+pG,YAAa5Z,aAAc3oF,SAAU2oF,aAAar0D,iBAAiB/U,WAAYijF,4BAInI,IAAhC1rE,UAAU9G,WAAWn3B,QACrB0+B,iBAAiBT,YAYzB4H,YAAYpnC,UAAUk4G,sBAStB,SAAUluF,IAAKihF,YAAa9hG,WAAYT,SAAUuf,WAAYijF,uBAC1D,GAAIryF,IAAKpZ,KAAK04G,eAAezvG,SAAUS,WAAY8e,YAAamwF,eAAiBv/F,GAAG6+B,SAAUmrD,UAAYhqF,GAAGqpB,OAC5GlpB,GAAKgR,IAAI0O,YAAYlyB,KAAK/E,MAAMuX,GAAIvZ,KAAKy2G,mBAAmB/X,iBAAiB8M,YAAaviG,SAAU0vG,eAAgBvV,UAAWqI,uBAChI,IAAIlyF,KAORouB,YAAYpnC,UAAUq4G,kBAKtB,SAAU3B,cAAenlC,QACrB,GAAIvuC,OAAQvjC,KACSgyB,UACA4T,WAAa,GAAIE,YAEjB+yE,cAAgB,GAAI/F,eAAcltE,iBAAoBksC,OAe3E,IAdAmlC,cAAcj1E,MAAMn7B,QAAQ,SAAUm2B,MAClC,GAAqB87E,aACrB97E,MAAKxU,WAAW3hB,QAAQ,SAAU4nD,eAC9B,GAAqB8vB,SAAUh7C,MAAM8yE,kBAAkBv1B,qBAAqBryB,cACxE8vB,UAAWA,QAAQz1D,aACnBgwF,UAAU/xG,KAAKw3E,WAGvBu6B,UAAUjyG,QAAQ,SAAUoC,UACxB,GAAqBuuE,MAA6CvuE,SAAkB,SAAW,SAC1EiN,oBAAsBqlC,oBAAoBC,UAA6BvyC,SAAkB,SAAEsvC,cAChHvmB,QAAOjrB,KAAK/E,MAAMgwB,OAA2B6mF,cAAc9F,mBAAmBv7B,KAAMx6C,KAAKrb,SAAUzL,0BAGvG8b,OAAOlwB,OACP,KAAM,IAAI0C,OAAMwtB,OAAOpsB,IAAI,SAAU0T,GAAK,MAAOA,GAAEtT,aAAeH,KAAK,MAE3E,OAAOgzG,gBAMXlxE,YAAYpnC,UAAUw4G,aAItB,SAAU9B,eACN,GAAI1zE,OAAQvjC,KACR2jC,0BAA4BszE,cAActzE,yBAI9C,OAAOr7B,SAJ0E2uG,cAAcj1E,MACpDp8B,IAAI,SAAUo3B,MACrD,MAAOuG,OAAMy1E,iBAAiBh8E,KAAKrb,SAAUgiB,0BAA2B3G,KAAKxU,WAAYwU,KAAKyF,MAAOzF,KAAKqF,UAAWrF,KAAK0F,iBAalIiF,YAAYpnC,UAAUy4G,iBAStB,SAAUtF,WAAY/vE,0BAA2Bnb,WAAYia,MAAOJ,UAAWK,aAC3E,GAAIa,OAAQvjC,KACS6gC,WAAa1f,sBAAsBuyF,YAAY,GAAM,GACrDuF,kBACAl5E,UAAY//B,KAAK63G,qBAAqB72F,kBAAkB0yF,YAAY,GA+BzF,IA9BAuF,eAAelyG,KAAK/E,MAAMi3G,eAAgBj5G,KAAKk5G,eAAexF,WAAYlrF,WAAYia,MAAOJ,UAAWK,YAAa3C,YAErHsC,UAAUx7B,QAAQ,SAAU+qF,cAAgB,MAAOruD,OAAM41E,eAAep5E,UAAW6xD,gBAEnFppE,WAAW3hB,QAAQ,SAAUi4E,SACzB,GAAqB71E,UAAWs6B,MAAM8yE,kBAAkBv1B,qBAAsC,QAC9F,IAAK73E,SAAS6f,YAAd,CAGA,GAAqBwZ,UAAWqB,0BAA0BpjB,IAAIu+D,QAC9D,KAAKx8C,SACD,KAAM,IAAI99B,OAAM,6DAA+D4C,eAAe6B,SAAS7C,MAAQ,IAGnH,IAAqBgzG,qBAAsB71E,MAAMgzE,eAAe7X,iBAAiB3+D,UAAW92B,SAG5FA,UAAkB,SAAEmvC,oBAAoBvxC,QAAQ,SAAUwyG,gBAGtD,GAAqBl4E,MAAOoC,MAAMgzE,eAAe3X,eAAe31F,SAChEgwG,gBAAelyG,KAAKw8B,MAAM+1E,eAAe5F,WAAYzqG,SAAUowG,eAAgBl4E,KAAMN,aACjF0C,MAAM4yE,SAASmB,wBACf2B,eAAelyG,KAAKw8B,MAAM+1E,eAAe5F,WAAYzqG,SAAUowG,gBAAiBl4E,KAAMN,cAI1D0C,OAAMg2E,kBAAkBx5E,UAAW92B,SAAUq5B,SAAUA,SAAS/E,iBAAiB/U,WAAY4wF,oBAAqBv4E,WACtJ0C,OAAMi2E,yBAAyBz5E,UAAW92B,SAAUq5B,SAAUzB,eAE9Dd,UAAU9G,WAAWn3B,OAAS,GAAK9B,KAAKm2G,SAASmB,uBAAwB,CACzE,GAAqBmC,WAAYz5G,KAAKg4G,qBAAqBtE,WAAY3zE,UACvEk5E,gBAAe//E,QAAQugF,WAE3B,MAAOR,iBAWXtxE,YAAYpnC,UAAU24G,eAStB,SAAU76E,YAAa7V,WAAYia,MAAOJ,UAAWK,YAAag3E,cAC9D,GAAIn2E,OAAQvjC,KACS25G,gBAAkB35G,KAAK42G,gBAAgB/zE,aAAaxE,aACpEz4B,IAAI,SAAUm5B,QAAU,MAAOwE,OAAMqzE,gBAAgB9zE,cAAc/D,UACnD66E,SAAWv3E,UAAUz8B,IAAI,SAAUyD,MACpD,OACI41B,QAA4BsE,MAAM8yE,kBAAkBn1B,mBAAmB73E,KAAKjD,KAAKkB,WACjF03B,SAA6BuE,MAAM8yE,kBAAkBjzE,oBAAoB/5B,KAAKjD,KAAKkB,cAExFsB,OAAO4f,WAAW5iB,IAAI,SAAU2B,KAC/B,OACI03B,QAA4BsE,MAAM8yE,kBAAkBt1B,oBAAoBx5E,KACxEy3B,SAA6BuE,MAAM8yE,kBAAkBv1B,qBAAqBv5E,QAE9Ek7B,MAAM78B,IAAI,SAAU2B,KACpB,OACI03B,QAA4BsE,MAAM8yE,kBAAkBvyB,eAAev8E,KACnEy3B,SAA6BuE,MAAM8yE,kBAAkB1yB,gBAAgBp8E,QAEzEm7B,YAAY98B,IAAI,SAAU2B,KAC1B,OACI03B,QAA4BsE,MAAM8yE,kBAAkB/yB,qBAAqB/7E,KACzEy3B,SAA6BuE,MAAM8yE,kBAAkB/yB,qBAAqB/7E,KAAOnB,SAGpEyzG,gBAAkB75G,KAAKm2G,SAASoB,sBACjDv3G,KAAK63G,qBAAqBh2F,sBAAsBwc,aAAa,IAC7D,KACAjlB,GAAKglB,mBAAmBC,YAAaw7E,gBAAiB75G,KAAK29E,iBAAkB39E,KAAK42G,gBAAiB+C,gBAAiBC,UAAW16E,KAAO9lB,GAAG8lB,IAAiB9lB,IAAGob,SACxJ3tB,QAAQ,SAAU6Y,OACvBg6F,aAAazgF,WAAWlyB,KAAKgf,SAASrG,MAAM8U,UAAUhU,IAAIk5F,aAAazzF,WAAWvG,MAAMqf,SAAS/G,WAAW,MACxGC,aAAakI,aAGrB,IAAqB25E,aAAc,GAAIrG,eAAcp1E,YAAa3c,gBAAgB2c,aAAca,MAC3Ex4B,QAAUozG,YAI/B,OAHID,kBACAnzG,OAAOK,KAAK/G,KAAKg4G,qBAAqB35E,YAAaw7E,kBAEhDnzG,QAOXihC,YAAYpnC,UAAU44G,eAKtB,SAAUp5E,UAAWuC,UACjB,GAAqBpa,aACrB,IAAIloB,KAAKm2G,SAASrkC,OAAQ,CACtB,GAAqBioC,kBAAmB/5G,KAAKm2G,SAASrkC,OAAOtvE,QAAQ,KAAM,IAC3E0lB,WAAUnhB,MACNpB,MAAO6c,gCAAgCxiB,KAAKiuD,WAAYjhC,YAAYgsD,WACpErxD,SAAUoyF,mBAGd/5G,KAAKm2G,SAASpwE,YACd7d,UAAUnhB,MACNpB,MAAO6c,gCAAgCxiB,KAAKiuD,WAAYjhC,YAAYisD,qBACpEtxD,SAAU3nB,KAAKm2G,SAASpwE,aAGhC/lC,KAAK02G,kBAAkB/kB,QAAQ5xD,UAAWuC,SAAUpa,YASxDyf,YAAYpnC,UAAUi5G,yBAOtB,SAAUz5E,UAAW92B,SAAUq5B,SAAUzB,YACrC,GAAqBm5E,UAAWh6G,KAAKq2G,kBAAkB32B,yBAAyBz2E,UAC3DgxG,mBAAqBj6G,KAAKu5G,kBAAkBx5E,UAAWi6E,SAAU13E,UAAWr5B,SAAS7C,MAAO,KAAMy6B,YAClHusE,aACgB8M,eAAiBhyG,qBAAqBe,SAAS7C,KAAKkB,WACpD6yG,cACrB,KAAK,GAAqB/mF,YAAYnqB,UAAS6sC,OAAQ,CACnD,GAAqBQ,cAAertC,SAAS6sC,OAAO1iB,SAEpD+mF,aAAYpzG,KAAK,GAAI6f,iBAAgBwM,SAAU9L,QAAQgvB,eAAe,IAE1E,GAAqB8jE,gBACrB,KAAK,GAAqBhnF,YAAYnqB,UAAS8sC,QAAS,CACpD,GAAqBO,cAAertC,SAAS8sC,QAAQ3iB,SAErDgnF,cAAarzG,KAAK,GAAI6f,iBAAgBwM,SAAU9L,QAAQgvB,eAAe,IAE3EvW,UAAU9G,WAAWlyB,KAAKgf,SAASm0F,gBAC9B15F,IAAIyF,WAAW+G,YAAYstD,wBAAwBruD,QACpD3E,QAAQre,SAASinB,UAAW6P,UAAU9Z,WAAWhd,SAAS7C,KAAKkB,WAC/Dye,SAASk0F,oBAAqB,GAAItzF,gBAAewzF,aACjD,GAAIxzF,gBAAeyzF,cACnB5zF,WAA8Bvd,SAAkB,SAAEqvC,mBAAmB1yC,IAAI,SAAUsqB,UAAY,MAAO5I,SAAQ4I,gBAE7G8H,WAAW5R,WAAW4G,YAAYyT,kBAAsCna,eAAeyZ,UAAU9Z,WAAWhd,SAAS7C,KAAKkB,cAAiB2+E,aAAaC,SAAUjuD,aAAaC,MAAOD,aAAakI,aAW5MwH,YAAYpnC,UAAUg5G,kBAStB,SAAUx5E,UAAW92B,SAAUq5B,SAAU+3E,qBAAsBC,gBAAiBz5E,YAC5E,GAAIznB,IAAKpZ,KAAK04G,eAAezvG,SAAUq5B,SAAU+3E,sBAAuB1B,eAAiBv/F,GAAG6+B,SAAUmrD,UAAYhqF,GAAGqpB,MAChG83E,WAAaD,gBAAkBv0F,SAASu0F,gBAAgB/b,WAAa/3E,eACrEg0F,WAAax6G,KAAKw2G,cAAc9X,iBAAiB3+D,UAAW92B,SAAU0vG,eAAgB4B,WAAYnX,UAIvH,OAHIkX,kBACA55E,wBAAwB1gC,KAAK42G,gBAAiB0D,gBAAiBt6G,KAAKu2G,eAAe3X,eAAe31F,UAAW43B,YAE1G25E,YAQX7yE,YAAYpnC,UAAUm4G,eAMtB,SAAUzvG,SAAUq5B,SAAU+3E,sBAC1B,GAAI92E,OAAQvjC,IACZ,IAAIA,KAAK62G,kBAAkB9iF,IAAI9qB,SAAS7C,KAAKkB,WACzC,MAA0BtH,MAAK62G,kBAAkBt2F,IAAItX,SAAS7C,KAAKkB,UAEvE,IAAqBi/B,qBAA0D,SAAsB,SAAEA,oBAClF/d,WAAa6xF,qBAAqBz0G,IAAI,SAAUojB,KAAO,MAAOua,OAAM8yE,kBAAkBt1B,oBAAoB/3D,IAAI1hB,aAC9Gm7B,MAAQH,SAAS/E,iBAAiBkF,MAAM78B,IAAI,SAAUu6F,MAAQ,MAAO58D,OAAM8yE,kBAAkBvyB,eAAeqc,KAAK74F,aACjHZ,OAAS1G,KAAKs2G,gBAAgB9iF,MAAMvqB,SAAgDA,SAAkB,SAAU,QAAGuf,WAAYia,MAAOH,SAASoX,QAAS3wC,kBAAkBu5B,SAASl8B,KAAM6C,SAA6BA,SAAkB,UAAIs9B,oBAEjQ,OADAvmC,MAAK62G,kBAAkBr2F,IAAIvX,SAAS7C,KAAKkB,UAAWZ,QAC7CA,QAMXihC,YAAYpnC,UAAUs3G,qBAItB,SAAU1sE,aACN,GAAI5H,OAAQvjC,IAyBZ,QAASi5B,cAAgBkS,YAAaA,YAAallB,WAxBd,SAAU8Y,OAAQ7Y,YAEnD,OADmB,KAAfA,aAAyBA,WAAa,QACpC6Y,iBAAkBv3B,eACpB,KAAM,IAAIhD,OAAM,sCAAwC6yC,KAAK3xC,UAAUq5B,QAE3E,IAAqB07E,OAAQl3E,MAAMqzE,gBAAgB8D,aAAa37E,SAAW,EACvE3lB,GAAKmqB,MAAMqzE,gBAAgB+D,YAAY57E,SAAWA,OAAQn3B,SAAWwR,GAAGxR,SAAUnG,KAAO2X,GAAG3X,KAAM01C,QAAU/9B,GAAG+9B,QAC9FyjE,aAAer3E,MAAMs3E,sBAAsBjzG,SAAUujC,aAKrD2vE,cAAgBv3E,MAAMs3E,sBAAsB1vE,YAAaA,aACzDhN,WAAay8E,eAAiBE,cAAgB,KAAOF,aAMrDG,mBAAqB70F,eACrB80F,uBAAyBP,MAAQM,mBAAmBj5G,OACpDm5G,cAAgBF,mBAAmBnyG,OAAO,GAAInF,OAAMu3G,wBAAwBE,KAAKxvF,cACtG,OAAOyrB,SAAQ3uC,OAAO,SAAUqd,KAAMs1F,YAAc,MAAOt1F,MAAKwJ,KAAK8rF,aAAkCl1F,WAAW,GAAIklE,mBAAkBhtD,WAAY18B,KAAM,MAAOw5G,mBASzKtzE,YAAYpnC,UAAUs6G,sBAKtB,SAAUO,iBAAkBC,oBACxB,MAAOr7G,MAAK29E,iBAAiBq2B,mBAAmBoH,mBAC5Cp7G,KAAK42G,gBAAgB5C,mBAAmBoH,mBACxCp7G,KAAKo2G,MAAMkF,qBAAqBF,iBAAkBC,qBAU1D1zE,YAAYpnC,UAAU+4G,eAQtB,SAAU5F,WAAYzqG,SAAUsyG,mBAAoB/c,UAAW39D,YAC3D,GAAqBd,WAAY//B,KAAK63G,qBAAqB52E,iBAAoCs6E,mBAA6B,UAAG/c,UAAW39D,aACrH26E,mBAAqBx7G,KAAKu2G,eAAe1X,cAAc9+D,UAAW92B,SAAUsyG,mBAAoB/c,UAErH,OADA99D,yBAAwB1gC,KAAK42G,gBAAiB4E,mBAAoBhd,UAAW39D,YACtE7gC,KAAKg4G,qBAAqBtE,WAAY3zE,YAOjD4H,YAAYpnC,UAAUy3G,qBAKtB,SAAUtE,WAAYnpF,KAClB,MAAO,IAAIkpF,eAAcC,WAAYnpF,IAAI4gB,YAAa5gB,IAAI0O,aAO9D0O,YAAYpnC,UAAU88B,eAKtB,SAAUo+E,WAAY55E,iBA2BlB,QAAS65E,gBAAe38E,OAAQ48E,WAAYr+E,eAKxC,OAJmB,KAAfq+E,aAAyBA,WAAa,GAAI33F,UACxB,KAAlBsZ,gBAA4BA,kBAG5Bq+E,WAAW5nF,IAAIgL,UAAYA,OAAOt9B,KAClC,MAAO67B,cAEXq+E,YAAWx/E,IAAI4C,OAEf,KAAK,GADgB68E,YAAav+E,eAAkCi1E,KAAK+D,kBAAkBjzE,oBAAoBrE,QAAQ,GAASuzE,KAAKrkD,YAC5HrsD,GAAK,EAAGi6G,aAAeD,WAAYh6G,GAAKi6G,aAAa/5G,OAAQF,KAAM,CACxE,GAAIk6G,WAAYD,aAAaj6G,GAC7B07B,eAAcv2B,KAAK+0G,WACnBJ,eAAeI,UAAU59E,iBAAkBy9E,WAAYr+E,eAE3D,MAAOA,eAzCX,GAAqBg1E,MAAOtyG,IAC5B,IAAIy7G,WAAY,CAEZ,MAAOC,gBADuB79E,eAAe49E,WAAYz7G,KAAKiuD,YAAY/vB,kBAGzE,GAAI2D,gBAAiB,CAEtB,IAAK,GADgBvE,kBACZ17B,GAAK,EAAGwX,GAAKyoB,gBAAgBQ,UAAWzgC,GAAKwX,GAAGtX,OAAQF,KAG7D,IAAK,GAFD0gC,UAAWlpB,GAAGxX,IACGg6G,WAAav+E,eAAeiF,SAAUtiC,KAAKiuD,YACvD10C,GAAK,EAAGwiG,aAAeH,WAAYriG,GAAKwiG,aAAaj6G,OAAQyX,KAAM,CACxE,GAAIuiG,WAAYC,aAAaxiG,GAC7B+jB,eAAcv2B,KAAK+0G,WAG3B,MAAOx+E,eAGP,KAAM,IAAI94B,OAAM,yDA0BjBmjC,eAuRPq0E,aAAe,gBAEfz3E,WAAa,WACb03E,QACA57E,WAAY,UAEZ67E,UAAY,WACZC,QAAU,UACVC,cAAgB,GAAIp4F,MAAKk4F,UAAW,aAAc,SAYlDv2E,gBAAmB,WACnB,QAASA,iBAAgBpH,gBAAiBC,eAAgB69E,qBAAsBC,uBAAwBC,mBACvE,KAAzBF,uBAAmCA,6BACR,KAA3BC,yBAAqCA,0BACzC,IAAI/4E,OAAQvjC,IACZA,MAAKu+B,gBAAkBA,gBACvBv+B,KAAKw+B,eAAiBA,eACtBx+B,KAAKu8G,cAAgBA,cACrBv8G,KAAKw8G,gBAAkB,GAAI7zF,KAC3B3oB,KAAKy8G,cAAgB,GAAI9zF,KACzB3oB,KAAK08G,eAAiB,GAAI/zF,KAC1B3oB,KAAK28G,YAAc,GAAIh0F,KACvB3oB,KAAK48G,cAAgB,GAAIj0F,KACzB3oB,KAAK68G,wCAA0C,GAAIl0F,KACnD3oB,KAAK88G,0BACLT,qBAAqBx1G,QAAQ,SAAUk2G,IACnC,MAAOx5E,OAAMy5E,gCAAgCz5E,MAAMvC,gBAAgB+7E,GAAGn1G,SAAUm1G,GAAGt7G,MAAOs7G,GAAG1zE,QAEjGizE,uBAAuBz1G,QAAQ,SAAUo2G,IAAM,MAAO15E,OAAM25E,kBAAkB35E,MAAMvC,gBAAgBi8E,GAAGr1G,SAAUq1G,GAAGx7G,MAAOw7G,GAAG/1F,MAC9HlnB,KAAK68G,wCAAwCr8F,IAAIk3B,mBAAmB72C,WAAYgO,gBAAiBC,kBACjG9O,KAAK68G,wCAAwCr8F,IAAIk3B,mBAAmB32C,MAAOkuC,aAC3EjvC,KAAK68G,wCAAwCr8F,IAAIk3B,mBAAmBt2C,UAAWsuC,iBAC/E1vC,KAAK68G,wCAAwCr8F,IAAIk3B,mBAAmBC,YAAa7H,iBAAkBb,WAAYpgC,gBAAiBC,gBAAiB4gC,iBAkvBrJ,MA5uBA/J,iBAAgBplC,UAAU6/E,mBAI1B,SAAU8D,YACN,GAAqBi5B,cAAen9G,KAAKo9G,sBAAsBl5B,WAC/D,OAAOlkF,MAAKw+B,eAAe6+E,gBAAgBF,eAO/Cx3E,gBAAgBplC,UAAUmiB,yBAK1B,SAAUnb,IAAK+1G,gBACX,GAAqBC,WAAYv9G,KAAKw+B,eAAeg/E,kBAAqCj2G,IAAe,WAAsBA,IAAS,KAAG+1G,gBACtHhJ,kBAAoBt0G,KAAKo9G,sBAAsBG,UAKpE,OAJKD,kBACDt9G,KAAKw+B,eAAei/E,4BAA4BF,UAAU31G,SAA6BL,IAAe,YACtGvH,KAAKw+B,eAAek/E,eAAepJ,kBAAmBiJ,YAEnDjJ,mBAQX3uE,gBAAgBplC,UAAUo9G,gBAM1B,SAAUnoG,UAAW/T,KAAM67G,gBACvB,MAAOt9G,MAAKo9G,sBAAsBp9G,KAAKw+B,eAAeg/E,kBAAkBhoG,UAAW/T,KAAM67G,kBAO7F33E,gBAAgBplC,UAAUq9G,mBAK1B,SAAUpoG,UAAW/T,MACjB,GAAI8hC,OAAQvjC,IACZ,OAAOA,MAAKw+B,eAAeq/E,gBAAgB,WAAc,MAAOt6E,OAAMo6E,gBAAgBnoG,UAAW/T,SAMrGkkC,gBAAgBplC,UAAU68G,sBAI1B,SAAUr+E,QACN,GAAqBF,gBAAiB7+B,KAAKw+B,eAAesE,cAAc/D,OACxE,OAAIF,iBAAkBA,eAAeG,mBAAoBx3B,cAC9CxH,KAAKo9G,sBAAsBv+E,eAAeG,UAG1CD,QAOf4G,gBAAgBplC,UAAU4tD,YAI1B,SAAU/nD,MACN,GAAqB+nD,aAAcnuD,KAAKw8G,gBAAgBj8F,IAAIna,KAC5D,KAAK+nD,YAAa,CACdA,cACA,IAAqB2vD,eAAgB99G,KAAK+9G,gBAAgB33G,MACrC43G,WAAah+G,KAAKi+G,eAAe73G,KAAM03G,cAC5D,IAAIE,WAAY,CACZ,GAAqBE,mBAAoBl+G,KAAKmuD,YAAY6vD,WAC1D7vD,aAAYpnD,KAAK/E,MAAMmsD,YAAa+vD,mBAExC,GAAqBC,oBAKrB,IAJIL,cAA0B,aAC1BK,iBAAmBn+G,KAAKo+G,SAASh4G,KAAM03G,cAA0B,YACjE3vD,YAAYpnD,KAAK/E,MAAMmsD,YAAagwD,mBAEpCH,aAAeh+G,KAAKu+B,gBAAgBgB,cAAcn5B,KAAKwB,WACvD5H,KAAKu+B,gBAAgBgB,cAAcy+E,WAAWp2G,UAAW,CACzD,GAAqBq3B,SAAUj/B,KAAKu+B,gBAAgBkhD,eAAeu+B,WACnE,IAAI/+E,SAAWA,QAAQ74B,KAAM,CACzB,GAAqBi4G,yBAA6Cr+G,KAAK68G,wCAAwCt8F,IAAuB0e,QAAQ74B,KAAiB,YAC9Gi4G,yBAAwB9sF,KAAK,SAAU+sF;qDAAgB,MAAOH,kBAAiB5sF,KAAK,SAAU8xD,KAAO,MAAOi7B,cAAan8G,SAASkhF,UAE/KrjF,KAAKu+G,YAAYn6G,YAAY,SAAWgC,KAAK3E,KAAO,OAAS2E,KAAKwB,SAAW,mBAAqB8vC,mBAAuCzY,QAAQ74B,KAAkB,aAAK,gFACjJi4G,wBAAwBz4G,IAAI,SAAUQ,MAAQ,MAAOA,MAAKlE,iBAAmB2D,KAAK,QAAU,4BAA8BO,OAI7JpG,KAAKw8G,gBAAgBh8F,IAAIpa,KAAM+nD,YAAYnrC,OAAO,SAAUqgE,KAAO,QAASA,OAEhF,MAAOl1B,cAMXxoB,gBAAgBplC,UAAU+tD,aAI1B,SAAUloD,MACN,GAAIm9B,OAAQvjC,KACSsuD,aAAetuD,KAAKy8G,cAAcl8F,IAAIna,KAC3D,KAAKkoD,aAAc,CACf,GAAqBwvD,eAAgB99G,KAAK+9G,gBAAgB33G,KAC1DkoD,gBACA,IAAqB0vD,YAAah+G,KAAKi+G,eAAe73G,KAAM03G,cAC5D,IAAIE,WAAY,CACZ,GAAqBQ,sBAAuBx+G,KAAKsuD,aAAa0vD,WAC9Dx9G,QAAOw2B,KAAKwnF,sBAAsB33G,QAAQ,SAAU43G,YAC/B,aAAiBA,YAAcD,qBAAqBC,cAG7E,GAAqBC,WAAYZ,cAAuB,WACxDt9G,QAAOw2B,KAAK0nF,WAAW73G,QAAQ,SAAUusB,UACrC,GAAqBurF,UAAWD,UAAUtrF,UACrB/D,KAAO,SACvB3Q,KAAK,SAAU/F,GAAK,MAA0B,YAAnBA,EAAc,YAAsC,UAAnBA,EAAc,aAC1DimG,aACA,cAAiBxrF,WAClCwrF,WAAW73G,KAAK/E,MAAM48G,WAA6B,aAAiBxrF,WAExE,aAAiBA,UAAYwrF,WACzBvvF,MAAQA,KAAiB,YACzBuvF,WAAW73G,KAAK/E,MAAM48G,WAAYr7E,MAAM66E,SAASh4G,KAAMipB,KAAiB,eAGhFrvB,KAAKy8G,cAAcj8F,IAAIpa,KAAMkoD,cAEjC,MAAOA,eAMX3oB,gBAAgBplC,UAAU6jF,WAI1B,SAAUh+E,MACN,GAAIm9B,OAAQvjC,IACZ,MAAMoG,eAAgBoB,eAElB,MADAxH,MAAKu+G,YAAY,GAAI/5G,OAAM,uBAAyB6yC,KAAK3xC,UAAUU,MAAQ,gCAAiCA,QAGhH,KACI,GAAqBy4G,cAAe7+G,KAAK08G,eAAen8F,IAAIna,KAC5D,KAAKy4G,aAAc,CACf,GAAqBf,eAAgB99G,KAAK+9G,gBAAgB33G,MACrC43G,WAAah+G,KAAKi+G,eAAe73G,KAAM03G,eACvC3mE,QAAU2mE,cAAgBA,cAAuB,QAAI,KACrDgB,SAAW3nE,QAAUA,QAAkB,SAAI,IAChE,IAAI2nE,SAAU,CACV,GAAqBz1E,MAAO,SAA8B3qB,KAAK,SAAU/F,GAAK,MAA0B,eAAnBA,EAAc,aAC9EomG,kBAAsC11E,KAAkB,eACxD21E,sBAA0Ch/G,KAAKo+G,SAASh4G,KAAMijC,KAA0B,wBAC7Gw1E,iBACAE,kBAAkBl4G,QAAQ,SAAUo4G,aAAc75G,OAC9C,GAAqB85G,iBACAC,UAAY57E,MAAM67E,YAAYh5G,KAAM64G,aACrDE,YACAD,aAAan4G,KAAKo4G,UACtB,IAAqBP,YAAaI,sBAAwBA,sBAAsB55G,OAAS,IACrFw5G,aACAM,aAAan4G,KAAK/E,MAAMk9G,aAAcN,YAE1C,aAAiB73G,KAAKm4G,oBAGrBlB,cACLa,aAAe7+G,KAAKokF,WAAW45B,YAE9Ba,gBACDA,iBAEJ7+G,KAAK08G,eAAel8F,IAAIpa,KAAMy4G,cAElC,MAAOA,cAEX,MAAwBvlG,GAEpB,KADA2sB,SAAQ1hC,MAAM,kBAAoB8yC,KAAK3xC,UAAUU,MAAQ,eAAiBkT,GACpEA,IAOdqsB,gBAAgBplC,UAAU8+G,aAI1B,SAAUj5G,MACN,GAAqBk5G,aAAct/G,KAAK28G,YAAYp8F,IAAIna,KACxD,KAAKk5G,YAAa,CACd,GAAqBxB,eAAgB99G,KAAK+9G,gBAAgB33G,KAC1Dk5G,eACA,IAAqBtB,YAAah+G,KAAKi+G,eAAe73G,KAAM03G,cAC5D,IAAIE,WAAY,CACZ,GAAqBuB,qBAAsBv/G,KAAKq/G,aAAarB,WAC7Dx9G,QAAOw2B,KAAKuoF,qBAAqB14G,QAAQ,SAAU43G,YAC9B,YAAgBA,YAAcc,oBAAoBd,cAG3E,GAAqBe,WAAY1B,cAAuB,WACxDt9G,QAAOw2B,KAAKwoF,WAAW34G,QAAQ,SAAUusB,UACrC,GAAqBurF,UAAWa,UAAUpsF,UACrBqsF,SAAW,SAA8BluF,KAAK,SAAU5Y,GAAK,MAA0B,UAAnBA,EAAc,YACvG,aAAgBya,UAA6B,YAAgBA,WAAaqsF,WAE9Ez/G,KAAK28G,YAAYn8F,IAAIpa,KAAMk5G,aAE/B,MAAOA,cAOX35E,gBAAgBplC,UAAU09G,eAK1B,SAAU73G,KAAM03G,eACZ,GAAqBE,YAAah+G,KAAKo/G,YAAYh5G,KAAM03G,cAAuB,QAChF,IAAIE,qBAAsBx2G,cACtB,MAAOw2G,aAQfr4E,gBAAgBplC,UAAUoiB,iBAK1B,SAAUvc,KAAMs5G,YACNt5G,eAAgBoB,eAClBxH,KAAKu+G,YAAY,GAAI/5G,OAAM,6BAA+B6yC,KAAK3xC,UAAUU,MAAQ,gCAAiCA,KAEtH,KACI,QAASpG,KAAKq/G,aAAaj5G,MAAMs5G,YAErC,MAAwBpmG,GAEpB,KADA2sB,SAAQ1hC,MAAM,kBAAoB8yC,KAAK3xC,UAAUU,MAAQ,eAAiBkT,GACpEA,IAQdqsB,gBAAgBplC,UAAUy8G,gCAK1B,SAAU52G,KAAMijC,MACZrpC,KAAK48G,cAAcp8F,IAAIpa,KAAM,SAAU5C,QAAS7B,MAAQ,MAAO,KAAK0nC,KAAKe,KAAKpoC,MAAMqnC,UAAO,IAAQzgC,OAAOjH,WAO9GgkC,gBAAgBplC,UAAU28G,kBAK1B,SAAU92G,KAAM8gB,IACZlnB,KAAK48G,cAAcp8F,IAAIpa,KAAM,SAAU5C,QAAS7B,MAAQ,MAAOulB,IAAGllB,UAAMkC,GAAWvC,SAKvFgkC,gBAAgBplC,UAAUu8G,wBAG1B,WACI98G,KAAK2/G,eAAiB3/G,KAAK29G,gBAAgB3B,aAAc,kBACzDh8G,KAAK4/G,YAAc5/G,KAAK29G,gBAAgB3B,aAAc,eACtDh8G,KAAKw9B,OAASx9B,KAAK49G,mBAlWN,kBAkWyC,UACtD59G,KAAKs4E,6BACDt4E,KAAK29G,gBAAgB3B,aAAc,gCACvCh8G,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,QAAS/rE,YACjFjwC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,cAAelsE,kBACvF9vC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,QAASjsE,YACjF/vC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,YAAahsE,gBACrFhwC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,UAAWnuE,cACnF7tC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,YAAansE,gBACrF7vC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,aAAc/tE,iBACtFjuC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,gBAAiBxtE,oBACzFxuC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,mBAAoB7tE,uBAC5FnuC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,aAActtE,iBACtF1uC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,gBAAiBvtE,oBACzFzuC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,SAAU7sE,aAClFnvC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,UAAW3sE,cACnFrvC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,QAAS/sE,YACjFjvC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,eAAgB1sE,mBACxFtvC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,gBAAiBxsE,oBACzFxvC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,aAAcntG,iBACtF7O,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,aAAcltG,iBACtF9O,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,YAAatsE,gBAErF1vC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,QAAS/rE,YACjFjwC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,QAASjsE,YACjF/vC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,YAAahsE,gBACrFhwC,KAAKg9G,gCAAgCh9G,KAAK29G,gBAAgB3B,aAAc,YAAansE,iBAkBzFlK,gBAAgBplC,UAAUygC,gBAS1B,SAAUuW,gBAAiB91C,KAAM01C,SAC7B,MAAOn3C,MAAKw+B,eAAewC,gBAAgBuW,gBAAiB91C,KAAM01C,UAQtExR,gBAAgBplC,UAAUg+G,YAM1B,SAAUh6G,MAAOf,QAASgH,MACtB,IAAIxK,KAAKu8G,cAIL,KAAMh4G,MAHNvE,MAAKu8G,cAAch4G,MAAQf,SAAWA,QAAQoE,UAAa4C,OAYnEm7B,gBAAgBplC,UAAU6+G,YAM1B,SAAU57G,QAASF,OACf,GAAqBu8G,kBAAmB7/G,KAAKu8G,aAC7Cv8G,MAAKu8G,cAAgB,SAAUh4G,MAAOod,WACtC,IAAqBjb,QAAS1G,KAAKo+G,SAAS56G,QAASF,MAErD,OADAtD,MAAKu8G,cAAgBsD,iBACdn5G,QAQXi/B,gBAAgBplC,UAAU69G,SAM1B,SAAU56G,QAASF,OAYf,QAASw8G,mBAAkBt8G,QAASF,MAAOy8G,MAAO/pE,YAK9C,QAASgqE,uBAAsB7C,cAC3B,GAAqBt+E,gBAAiByzE,KAAK9zE,eAAesE,cAAcq6E,aACxE,OAAOt+E,gBAAiBA,eAAeG,SAAW,KAQtD,QAASihF,cAAaC,eAAgBC,eAAgBx+G,MAClD,GAAIw+G,gBAAkD,YAAhCA,eAA2B,WAAiB,CAC9D,GAAIC,QAAQ7/F,IAAI2/F,gBACZ,KAAM,IAAI17G,OAAM,0BAEpB,KACI,GAAqB67G,SAAUF,eAAsB,KACrD,IAAIE,UAAqB,GAATN,OAAoC,SAAtBM,QAAQhgF,YAAwB,CAC1D,GAAqB+jD,YAAa+7B,eAA2B,WACxCG,SAAWH,eAAeG,QAC/C3+G,MAAOA,KAAKiE,IAAI,SAAU4zB,KAAO,MAAOsmF,mBAAkBt8G,QAASg2B,IAAKumF,MAAQ,EAAG/pE,cAC9EpwC,IAAI,SAAU4zB,KAAO,MAAOyK,cAAazK,SAAOt1B,GAAYs1B,MAC7D8mF,UAAYA,SAASx+G,OAASH,KAAKG,QACnCH,KAAKoF,KAAK/E,MAAML,KAAM2+G,SAASn9G,MAAMxB,KAAKG,QAAQ8D,IAAI,SAAUtC,OAAS,MAAO86G,UAAS96G,UAE7F88G,QAAQ5/F,IAAI0/F,gBAAgB,EAE5B,KAAK,GADgBK,eAAgBC,aAAal/C,QACxBv2D,EAAI,EAAGA,EAAIq5E,WAAWtiF,OAAQiJ,IACpDw1G,cAAc3gH,OAAOwkF,WAAWr5E,GAAIpJ,KAAKoJ,GAE7C,IACqB01G,UADAC,SAAWC,KAEhC,KACIA,MAAQJ,cAAcK,OACtBH,SAAWX,kBAAkBI,eAAgBG,QAASN,MAAQ,EAAG/pE,YAErE,QACI2qE,MAAQD,SAEZ,MAAOD,WAGf,QACIL,QAAQhkF,OAAO8jF,iBAGvB,MAAc,KAAVH,MAIO9D,OAEJmC,UAAW/9E,WAAY,QAASnvB,QAAS,8BAA+B1N,QAAS08G,iBAM5F,QAAS9B,UAASzpG,YACd,GAAI6vB,YAAY7vB,YACZ,MAAOA,WAEX,IAAIA,qBAAsBlR,OAAO,CAE7B,IAAK,GADgBo9G,aACZj/G,GAAK,EAAGwX,GAAK,WAAiCxX,GAAKwX,GAAGtX,OAAQF,KAAM,CACzE,GAAI8G,MAAO0Q,GAAGxX,GAEd,IAAI8G,MAA4B,WAApBA,KAAK23B,WAAyB,CAGtC,GAAqBygF,aAAchB,kBAAkBt8G,QAASkF,KAAKiM,WAAYorG,MAAO,EACtF,IAAIt8G,MAAMC,QAAQo9G,aAAc,CAC5B,IAAK,GAAIvnG,IAAK,EAAGwnG,cAAgBD,YAAavnG,GAAKwnG,cAAcj/G,OAAQyX,KAAM,CAC3E,GAAIynG,YAAaD,cAAcxnG,GAC/BsnG,UAAS95G,KAAKi6G,YAElB,UAGR,GAAqBC,SAAU7C,SAAS11G,KACpCu7B,cAAag9E,UAGjBJ,SAAS95G,KAAKk6G,SAElB,MAAOJ,UAEX,GAAIlsG,qBAAsBnN,cAAc,CAGpC,GAAImN,aAAe29F,KAAKqN,gBAAkBrN,KAAKsK,cAAc7oF,IAAIpf,aAC5DqhC,WAAa,IAAMrhC,WAAWwiC,QAAQr1C,OACvC,MAAO6S,WAGP,IAAqBwoG,cAAexoG,WACfusG,iBAAmBlB,sBAAsB7C,aAC9D,OAAwB,OAApB+D,iBACOpB,kBAAkB3C,aAAc+D,iBAAkBnB,MAAQ,EAAG/pE,YAG7DmnE,aAInB,GAAIxoG,WAAY,CACZ,GAAIA,WAAuB,WAAG,CAC1B,GAAqBwoG,kBAAe,EACpC,QAAQxoG,WAAuB,YAC3B,IAAK,QACD,GAAqBtB,MAAO+qG,SAASzpG,WAAiB,KACtD,IAAIsvB,aAAa5wB,MACb,MAAOA,KACX,IAAqBC,OAAQ8qG,SAASzpG,WAAkB,MACxD,IAAIsvB,aAAa3wB,OACb,MAAOA,MACX,QAAQqB,WAAqB,UACzB,IAAK,KACD,MAAOtB,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,MAEtB,MAAO,KACX,KAAK,KAED,MAAmB8qG,UADcA,SAASzpG,WAAsB,WACpCA,WAA2B,eAC1CA,WAA2B,eAC5C,KAAK,MACD,GAAqBwsG,SAAU/C,SAASzpG,WAAoB,QAC5D,IAAIsvB,aAAak9E,SACb,MAAOA,QACX,QAAQxsG,WAAqB,UACzB,IAAK,IACD,MAAOwsG,QACX,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,QAEhB,MAAO,KACX,KAAK,QACD,GAAqBC,aAActB,kBAAkBt8G,QAASmR,WAAuB,WAAGorG,MAAO,GAC1E36G,MAAQ06G,kBAAkBt8G,QAASmR,WAAkB,MAAGorG,MAAO,EACpF,OAAIqB,cAAe58E,YAAYp/B,OACpBg8G,YAAYh8G,OAChB,IACX,KAAK,SACD,GAAqBi8G,QAAS1sG,WAAmB,OAC5B2sG,cAAgB99G,QAChB+9G,aAAenD,SAASzpG,WAAuB,WACpE,IAAI4sG,uBAAwB/5G,cAAc,CACtC,GAAqB2vC,SAAUoqE,aAAapqE,QAAQvuC,OAAOy4G,OAC3DC,eACIhP,KAAKtxE,gBAAgBugF,aAAa35G,SAAU25G,aAAa9/G,KAAM01C,QACnE,IAAqB+pE,kBAAmBlB,sBAAsBsB,cAC9D,OAAwB,OAApBJ,iBACOpB,kBAAkBwB,cAAeJ,iBAAkBnB,MAAQ,EAAG/pE,YAG9DsrE,cAGf,MAAIC,eAAgB/8E,YAAY68E,QACrBvB,kBAAkBwB,cAAeC,aAAaF,QAAStB,MAAQ,EAAG/pE,YACtE,IACX,KAAK,YAID,GAAqBqZ,QAAS16C,WAAiB,KAC1B6sG,WAAab,MAAMz0G,QAAQmjD,OAChD,IAAImyD,YAAchB,aAAaiB,QAC3B,MAAOD,WAEX,MACJ,KAAK,QAEL,IAAK,WACD,MAAOh+G,QACX,KAAK,MACL,IAAK,OAGD,IADA25G,aAAe2C,kBAAkBt8G,QAASmR,WAAuB,WAAGorG,MAAQ,EAAoB,aACpEv4G,cAAc,CACtC,GAAI21G,eAAiB7K,KAAKqN,gBAAkBxC,eAAiB7K,KAAKsN,YAK9D,MAAOp8G,QAEX,IAAqBk+G,gBAAiB/sG,WAAsB,cACvC2Z,UAAYgkF,KAAKsK,cAAcr8F,IAAI48F,aACxD,IAAI7uF,UAAW,CACX,GAAqB3sB,MAAO+/G,eACvB97G,IAAI,SAAU4zB,KAAO,MAAOsmF,mBAAkBt8G,QAASg2B,IAAKumF,MAAQ,EAAG/pE,cACvEpwC,IAAI,SAAU4zB,KAAO,MAAOyK,cAAazK,SAAOt1B,GAAYs1B,KACjE,OAAOlL,WAAU9qB,QAAS7B,MAK1B,MAAOs+G,cAAa9C,aADkB6C,sBAAsB7C,cACVuE,gBAG1D,MAAOzF,OACX,KAAK,QACD,GAAqB/qG,SAAUkzB,oBAAoBzvB,WASnD,OARIA,YAAiB,MACjBzD,QACIA,QAAU,eAAiByD,WAAiB,KAAI,GAAK,KAAOA,WAAsB,UAAI,GAAK,6BAC/F29F,KAAKiM,YAAY75E,gBAAgBxzB,QAAS1N,QAAQoE,SAAU+M,WAAiB,KAAGA,WAAsB,WAAInR,UAG1G8uG,KAAKiM,YAAY,GAAI/5G,OAAM0M,SAAU1N,SAElCy4G,MACX,KAAK,SACD,MAAOtnG,YAEf,MAAO,MAEX,MAAO0vB,cAAa1vB,WAAY,SAAUrR,MAAO7B,MAC7C,GAAI26G,cAAcroF,IAAItyB,MAAO,CACzB,GAAIA,OAASy6G,WAAaC,UAAWxnG,YAAY,CAG7C,GAAqBiuE,SAAUw7B,SAASzpG,WAAWiuE,QACnD,IAAIA,UAAY0vB,KAAK90E,QAAUolD,SAAW0vB,KAAKh6B,6BAC3C,MAAO8lC,UAAS96G,OAGxB,MAAOw8G,mBAAkBt8G,QAASF,MAAOy8G,MAAO/pE,WAAa,GAEjE,MAAOooE,UAAS96G,SAGxB,MAAO24G,QAEX,IACI,MAAOmC,UAAS96G,OAEpB,MAAwBgW,GACpB,GAAqB69B,SAAU3zC,QAAQ2zC,QAAQr1C,OAAS,IAAM0B,QAAQ2zC,QAAQtxC,KAAK,KAAO,GACrEqL,QAAUoI,EAAEpI,QAAU,sBAAwB1N,QAAQ/B,KAAO01C,QAAU,OAAS3zC,QAAQoE,QAC7G,IAAI0R,EAAEqI,SACF,KAAM+iB,iBAAgBxzB,QAASoI,EAAEqI,SAAUrI,EAAEqrB,KAAMrrB,EAAEsrB,OAEzD,MAAMxgC,aAAY8M,UA9S1B,GAAIqyB,OAAQvjC,KACSsyG,KAAOtyG,KACP2gH,MAAQH,aAAa/gE,MACrB2gE,QAAU,GAAIz3F,KAsTdjiB,OAAS1G,KAAKu8G,cARc,SAAU/4G,QAASF,OAChE,IACI,MAAOw8G,mBAAkBt8G,QAASF,MAAO,EAAG,GAEhD,MAAwBgW,GACpBiqB,MAAMg7E,YAAYjlG,EAAG9V,WAGgDA,QAASF,OAClFw8G,kBAAkBt8G,QAASF,MAAO,EAAG,EACzC,KAAI2gC,aAAav9B,QAGjB,MAAOA,SAMXi/B,gBAAgBplC,UAAUw9G,gBAI1B,SAAU33G,MACN,GAAqBy4B,gBAAiB7+B,KAAKw+B,eAAesE,cAAc18B,KACxE,OAAOy4B,iBAAkBA,eAAeG,SAAWH,eAAeG,UAC5DqB,WAAY,UAEfsF,mBAyEP66E,aAAgB,WAChB,QAASA,iBAsBT,MAjBAA,cAAal/C,MAGb,WACI,GAAqBqZ,SAAU,GAAIhyD,IACnC,QACI/oB,OAAQ,SAAU6B,KAAM6B,OAEpB,MADAq3E,SAAQn6D,IAAI/e,KAAM6B,OACXtD,MAEX4gH,KAAM,WACF,MAAOjmC,SAAQkd,KAAO,EAAI,GAAI8pB,gBAAehnC,SAAW6lC,aAAa/gE,SAIjF+gE,aAAaiB,WACbjB,aAAa/gE,OAAUvzC,QAAS,SAAUzK,MAAQ,MAAO++G,cAAaiB,UAC/DjB,gBAEPmB,eAAkB,SAAUl3G,QAE5B,QAASk3G,gBAAe1yD,UACpB,GAAI1rB,OAAQ94B,OAAOmjC,KAAK5tC,OAASA,IAEjC,OADAujC,OAAM0rB,SAAWA,SACV1rB,MAaX,MAjBAtjC,WAAU0hH,eAAgBl3G,QAU1Bk3G,eAAephH,UAAU2L,QAIzB,SAAUzK,MACN,MAAOzB,MAAKivD,SAASl7B,IAAItyB,MAAQzB,KAAKivD,SAAS1uC,IAAI9e,MAAQ++G,aAAaiB,SAErEE,gBACTnB,cAoBEoB,qBAAwB,WACxB,QAASA,sBAAqB7iF,OAAQC,UAClCh/B,KAAK++B,OAASA,OACd/+B,KAAKg/B,SAAWA,SAEpB,MAAO4iF,yBAkBPn8E,qBAAwB,WACxB,QAASA,sBAAqBnE,KAAMugF,kBAAmBtjF,gBAAiBg+E,eACpEv8G,KAAKshC,KAAOA,KACZthC,KAAK6hH,kBAAoBA,kBACzB7hH,KAAKu+B,gBAAkBA,gBACvBv+B,KAAKu8G,cAAgBA,cACrBv8G,KAAK8hH,cAAgB,GAAIn5F,KACzB3oB,KAAK+hH,gBAAkB,GAAIp5F,KAC3B3oB,KAAKgiH,kBAAoB,GAAIh+F,KAC7BhkB,KAAKy0G,SAAW,GAAI9rF,KACpB3oB,KAAKiiH,oBAAsB,GAAIt5F,KAC/B3oB,KAAKkiH,eAAiB,GAAIv5F,KAC1B3oB,KAAKmiH,2BAA6B,GAAIx5F,KAmpB1C,MA7oBA8c,sBAAqBllC,UAAUuiC,cAI/B,SAAUq6E,cACN,GAAIA,aAAahmE,QAAQr1C,OAAS,EAC9B,MAA0B9B,MAAKoiH,sBAAsBjF,aAKzD,IAAqBkF,mBAAuCriH,KAAKsiH,0BAA0BnF,aAC3F,IAAIkF,kBACA,MAAOA,kBAEX,IAAqBE,iBAAkBviH,KAAK+hH,gBAAgBxhG,IAAI48F,aAChE,OAAIoF,mBAMJviH,KAAKwiH,iBAAiBrF,aAAav1G,UACT5H,KAAK+hH,gBAAgBxhG,IAAI48F,gBAqBvD13E,qBAAqBllC,UAAUo6G,YAU/B,SAAUwC,cACN,GAAIA,aAAahmE,QAAQr1C,OAAQ,CAC7B,GAAqB+yG,YAAa70G,KAAKghC,gBAAgBm8E,aAAav1G,SAAUu1G,aAAa17G,MACtEghH,aAAeziH,KAAK26G,YAAY9F,WACrD,OAAO4N,cACHziH,KAAKghC,gBAAgByhF,aAAa76G,SAAU66G,aAAahhH,KAAM07G,aAAahmE,SAC5E,KAER,GAAqBurE,oBAAqB5gG,6BAA6Bq7F,aAAav1G,SACpF,IAAI86G,qBAAuBvF,aAAav1G,SAAU,CAC9C,GAAqB+6G,gBAAiBzgG,6BAA6Bi7F,aAAa17G,MAC3DozG,WAAa70G,KAAKghC,gBAAgB0hF,mBAAoBC,eAAgBxF,aAAahmE,SACnFsrE,aAAeziH,KAAK26G,YAAY9F,WACrD,OAAO4N,cACHziH,KAAKghC,gBAAgBnf,sBAAsB4gG,aAAa76G,UAAWoa,kBAAkBygG,aAAahhH,MAAOozG,WAAW19D,SACpH,KAER,GAAqBzwC,QAAS1G,KAAKu+B,gBAAgBo8E,YAAYwC,aAI/D,OAHKz2G,UACDA,OAA4B1G,KAAKy0G,SAASl0F,IAAI48F,eAE3Cz2G,QAcX++B,qBAAqBllC,UAAU88G,gBAO/B,SAAUF,cACN,MAAOn9G,MAAKiiH,oBAAoB1hG,IAAI48F,eAAiBA,aAAav1G,UAYtE69B,qBAAqBllC,UAAUm6G,aAM/B,SAAUyC,cAKN,GAAI77F,gBAAgB67F,aAAav1G,UAC7B,MAAO,KAGX,KADA,GAAqBi3B,gBAAiB7+B,KAAK8iC,cAAcq6E,cAClDt+E,gBAAkBA,eAAeG,mBAAoBx3B,eACxDq3B,eAAiB7+B,KAAK8iC,cAAcjE,eAAeG,SAEvD,OAAQH,iBAAkBA,eAAeG,UAAYH,eAAeG,SAASy7E,OAAU,MAM3Fh1E,qBAAqBllC,UAAUyzG,mBAI/B,SAAUpsG,UACN,MAAO5H,MAAKmiH,2BAA2B5hG,IAAI3Y,WAAa,MAO5D69B,qBAAqBllC,UAAUm9G,eAK/B,SAAUkF,aAAcC,cACpBD,aAAaxrE,kBACbyrE,aAAazrE,kBACbp3C,KAAKy0G,SAASj0F,IAAIoiG,aAAcC,eAOpCp9E,qBAAqBllC,UAAUk9G,4BAK/B,SAAU97F,SAAUwc,YAChBn+B,KAAKmiH,2BAA2B3hG,IAAImB,SAAUwc,aAalDsH,qBAAqBllC,UAAUuiH,eAM/B,SAAUnhG,UACN3hB,KAAK8hH,cAAc1lF,OAAOza,UAC1B3hB,KAAKgiH,kBAAkB5lF,OAAOza,SAC9B,IAAqB8c,SAAUz+B,KAAKkiH,eAAe3hG,IAAIoB,SACvD,IAAI8c,QAAS,CACTz+B,KAAKkiH,eAAe9lF,OAAOza,SAC3B,KAAK,GAAI/f,IAAK,EAAGmhH,UAAYtkF,QAAS78B,GAAKmhH,UAAUjhH,OAAQF,KAAM,CAC/D,GAAIm9B,QAASgkF,UAAUnhH,GACvB5B,MAAK+hH,gBAAgB3lF,OAAO2C,QAC5B/+B,KAAKy0G,SAASr4E,OAAO2C,QACrB/+B,KAAKiiH,oBAAoB7lF,OAAO2C,WAU5C0G,qBAAqBllC,UAAUs9G,gBAK/B,SAAU3pE,IACN,GAAqB8uE,UAAWhjH,KAAKu8G,aACrCv8G,MAAKu8G,cAAgB,YACrB,KACI,MAAOroE,MAEX,QACIl0C,KAAKu8G,cAAgByG,WAO7Bv9E,qBAAqBllC,UAAU6hH,sBAI/B,SAAUjF,cACN,GAAqBhmE,SAAUgmE,aAAahmE,QACvB8rE,mBAAqBjjH,KAAK8iC,cAAc9iC,KAAKghC,gBAAgBm8E,aAAav1G,SAAUu1G,aAAa17G,MACtH,KAAKwhH,mBACD,MAAO,KAEX,IAAqBC,cAAeD,mBAAmBjkF,QACvD,IAAIkkF,uBAAwB17G,cACxB,MAAO,IAAIo6G,sBAAqBzE,aAAcn9G,KAAKghC,gBAAgBkiF,aAAat7G,SAAUs7G,aAAazhH,KAAM01C,SAE5G,KAAI+rE,cAA4C,UAA5BA,aAAa7iF,WAKjC,CAED,IAAK,GADgB/8B,OAAQ4/G,aACHn4G,EAAI,EAAGA,EAAIosC,QAAQr1C,QAAUwB,MAAOyH,IAC1DzH,MAAQA,MAAM6zC,QAAQpsC,GAE1B,OAAO,IAAI62G,sBAAqBzE,aAAc75G,OAT9C,MAAI4/G,cAAaC,SAA8B,IAAnBhsE,QAAQr1C,OACzB,GAAI8/G,sBAAqBzE,aAAc+F,aAAaC,QAAQhsE,QAAQ,KAU5E,MAMX1R,qBAAqBllC,UAAU+hH,0BAI/B,SAAUnF,cACN,GAAqBl+E,SAAUj/B,KAAKu+B,gBAAgBkhD,eAAe09B,aACnE,OAAOl+E,SAAU,GAAI2iF,sBAAqBzE,aAAcl+E,QAAQD,UAAY,MAmBhFyG,qBAAqBllC,UAAUygC,gBAS/B,SAAUuW,gBAAiB91C,KAAM01C,SAC7B,MAAOn3C,MAAK6hH,kBAAkBthG,IAAIg3B,gBAAiB91C,KAAM01C,UAgB7D1R,qBAAqBllC,UAAUoiC,cAO/B,SAAU/6B,UACN,GAAqBo3B,UAAWh/B,KAAKojH,kBAAkBx7G,SACvD,SAAIo3B,SAAmB,UACZx+B,OAAOw2B,KAAKgI,SAAmB,UAAGzN,KAAK,SAAU8xF,aACpD,GAAqB3jG,OAAQsf,SAAmB,SAAEqkF,YAClD,OAAO3jG,QAA8B,UAArBA,MAAM2gB,YAA0B3gB,MAAMk/F,cASlEn5E,qBAAqBllC,UAAUsiC,aAI/B,SAAUj7B,UACN,GAAqB07G,gBAAiBtjH,KAAKu+B,gBAAgBsE,aAAaj7B,SACxE,IAAI07G,eACA,MAAOA,eAIXtjH,MAAKwiH,iBAAiB56G,SACtB,IAAqB27G,mBAMrB,OALAvjH,MAAK+hH,gBAAgBl7G,QAAQ,SAAUg4B,gBAC/BA,eAAeE,OAAOn3B,WAAaA,UACnC27G,gBAAgBx8G,KAAK83B,eAAeE,UAGrCwkF,iBAMX99E,qBAAqBllC,UAAUiiH,iBAI/B,SAAU56G,UACN,GAAI27B,OAAQvjC,IACZ,KAAIA,KAAKgiH,kBAAkBjuF,IAAInsB,UAA/B,CAGA5H,KAAKgiH,kBAAkB7lF,IAAIv0B,SAC3B,IAAqBm6G,oBACA/iF,SAAWh/B,KAAKojH,kBAAkBx7G,SAOvD,IANIo3B,SAAmB,UAGnBh/B,KAAKmiH,2BAA2B3hG,IAAI5Y,SAAUo3B,SAAmB,UAGjEA,SAAkB,QAsClB,IAAK,GADDwkF,QAASxjH,KACJ4B,GAAK,EAAGwX,GAAK4lB,SAAkB,QAAGp9B,GAAKwX,GAAGtX,OAAQF,KAAM,CAC7D,GAAI6hH,cAAerqG,GAAGxX,KAtCZ,SAAU6hH,cAEpB,GAAIA,aAAaC,OACbD,aAAaC,OAAO78G,QAAQ,SAAU88G,cAClC,GAAqB1hG,WAEjBA,YADwB,gBAAjB0hG,cACMA,aAGAA,aAAa7sB,GAE9B70E,WAAa4iB,mBAAmB5iB,WAChC,IAAqB2hG,SAAU3hG,UACH,iBAAjB0hG,gBACPC,QAAU/+E,mBAAmB8+E,aAAaliH,MAE9C,IAAqBoiH,gBAAiBtgF,MAAMugF,cAAcL,aAAa1/F,KAAMnc,SAC7E,IAAIi8G,eAAgB,CAChB,GAAqBhB,cAAet/E,MAAMvC,gBAAgB6iF,eAAgBD,SACrDhB,aAAer/E,MAAMvC,gBAAgBp5B,SAAUqa,WACpE8/F,iBAAgBh7G,KAAKw8B,MAAMwgF,aAAanB,aAAcC,sBAI7D,CAED,GAAqBgB,gBAAiBL,OAAOM,cAAcL,aAAa1/F,KAAMnc,SAC9E,IAAIi8G,eAAgB,CACqBL,OAAO3gF,aAAaghF,gBAC3Ch9G,QAAQ,SAAUg8G,cAC5B,GAAqBD,cAAer/E,MAAMvC,gBAAgBp5B,SAAUi7G,aAAaphH,KACjFsgH,iBAAgBh7G,KAAKw8B,MAAMwgF,aAAanB,aAAcC,oBAQ1DY,cAMhB,GAAIzkF,SAAmB,SAAG,CAEtB,GAAqBglF,uBAAwB,GAAIhgG,KAAIxjB,OAAOw2B,KAAKgI,SAAmB,UAAGp5B,IAAIi/B,qBACtEo/E,UAAYjlF,SAAkB,WACnDx+B,QAAOw2B,KAAKgI,SAAmB,UAAGn4B,QAAQ,SAAUw8G,aAChD,GAAqBtgF,YAAa/D,SAAmB,SAAEqkF,aAClC5hH,KAAOojC,mBAAmBw+E,aAC1BtkF,OAASwE,MAAMvC,gBAAgBp5B,SAAUnG,MACzCyiH,OAASD,UAAU59G,eAAeg9G,cAAgBY,UAAUZ,YACjF,IAAIa,OAAQ,CAIR,GAAqBC,gBAAiB5gF,MAAMugF,cAAcI,OAAQt8G,SAC7Du8G,gBAID5gF,MAAM0+E,oBAAoBzhG,IAAIue,OAAQolF,gBAHtC5gF,MAAMg7E,YAAY,GAAI/5G,OAAM,wCAA0C0/G,OAAS,SAAWt8G,WAMlGm6G,gBAAgBh7G,KAAKw8B,MAAM6gF,qBAAqBrlF,OAAQn3B,SAAUo8G,sBAAuBjhF,eAGjGg/E,gBAAgBl7G,QAAQ,SAAUg4B,gBAAkB,MAAO0E,OAAMw+E,gBAAgBvhG,IAAIqe,eAAeE,OAAQF,kBAC5G7+B,KAAKkiH,eAAe1hG,IAAI5Y,SAAUm6G,gBAAgBn8G,IAAI,SAAUi5B,gBAAkB,MAAOA,gBAAeE,YAS5G0G,qBAAqBllC,UAAU6jH,qBAO/B,SAAUxB,aAAcyB,aAAcC,oBAAqBtlF,UAMvD,GAAIh/B,KAAKu+B,gBAAgBgB,cAAcqjF,aAAah7G,WAAao3B,UAClC,UAA3BA,SAAqB,WAAe,CACpC,GAAqBulF,oBAAsBlkF,WAAY,QAASo6E,MAAOz7E,SAASy7E,MAChF,OAAO,IAAImH,sBAAqBgB,aAAc2B,mBAElD,GAAqBjS,MAAOtyG,KACxBwkH,qBAAwB,SAAU/5G,QAElC,QAAS+5G,wBACL,MAAkB,QAAX/5G,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,KAsD/D,MAxDAC,WAAUukH,qBAAsB/5G,QAShC+5G,qBAAqBjkH,UAAUsD,eAK/B,SAAU+B,IAAK6+G,gBACX,GAAqBC,UAAW9+G,IAAgB,UAChD,IAAiB,aAAb8+G,SAAyB,CACzB,GAAqBC,QAASF,eAAe3iH,MAC7C2iH,gBAAe19G,KAAK/E,MAAMyiH,eAAiB7+G,IAAgB,eAC3D,IAAqBc,QAAS+D,OAAOlK,UAAUsD,eAAe+pC,KAAK5tC,KAAM4F,IAAK6+G,eAE9E,OADAA,gBAAe3iH,OAAS6iH,OACjBj+G,OAEN,GAAiB,cAAbg+G,SA8BL,MAAOj6G,QAAOlK,UAAUsD,eAAe+pC,KAAK5tC,KAAM4F,IAAK6+G,eA7BvD,IAAqB9kH,QAASiG,IAAY,OACrBypD,OAASzpD,IAAU,KAAIi/B,mBAAmBj/B,IAAU,MAAKA,IAAU,IACxF,KAAKypD,OACD,MAAO,KAEX,IAAqBznD,cAAW,EAChC,OAAIjI,SACAiI,SAA8B0qG,KAAKwR,cAAcnkH,OAAQijH,aAAah7G,UACjEA,SAME0qG,KAAKtxE,gBAAgBp5B,SAAUynD,SAJ9BhvB,WAAY,QACZnvB,QAAS,qBAAuBvR,OAAS,gBAAkBijH,aAAah7G,SAAW,MAKtF68G,eAAevhH,QAAQmsD,SAAW,GAE9BhvB,WAAY,YAAa5+B,KAAM4tD,QAGpCi1D,oBAAoBvwF,IAAIs7B,QACjBijD,KAAKtxE,gBAAgBqjF,aAAch1D,YAD9C,IAWLm1D,sBACTzwE,kBACmB6wE,gBAAkBvhH,WAAW27B,SAAU,GAAIwlF,yBAChE,OAAII,2BAA2Bp9G,cACpBxH,KAAK+jH,aAAanB,aAAcgC,iBAEpC,GAAIhD,sBAAqBgB,aAAcgC,kBAOlDn/E,qBAAqBllC,UAAUwjH,aAK/B,SAAUnB,aAAcC,cAWpB,MAVAD,cAAaxrE,kBACbyrE,aAAazrE,kBACTp3C,KAAKu+B,gBAAgBgB,cAAcqjF,aAAah7G,WAChD5H,KAAKu+B,gBAAgBgB,cAAcsjF,aAAaj7G,WAKhD5H,KAAKy0G,SAASj0F,IAAIqiG,aAAc7iH,KAAK26G,YAAYiI,eAAiBA,cAE/D,GAAIhB,sBAAqBgB,aAAcC,eAQlDp9E,qBAAqBllC,UAAUg+G,YAM/B,SAAUh6G,MAAOf,QAASgH,MACtB,IAAIxK,KAAKu8G,cAIL,KAAMh4G,MAHNvE,MAAKu8G,cAAch4G,MAAQf,SAAWA,QAAQoE,UAAa4C,OAUnEi7B,qBAAqBllC,UAAU6iH,kBAI/B,SAAUzjH,QACN,GAAqBklH,gBAAiB7kH,KAAK8hH,cAAcvhG,IAAI5gB,OAC7D,KAAKklH,eAAgB,CACjB,GAAqBC,iBAAkB9kH,KAAKshC,KAAKyjF,eAAeplH,OAChE,IAAImlH,gBAAiB,CACjB,GAAqBE,eAAgB,CACrCF,iBAAgBj+G,QAAQ,SAAUo+G,IAC1BA,GAAY,QAAID,eAChBA,aAAeC,GAAY,QAC3BJ,eAAiBI,MAQ7B,GAJKJ,iBACDA,gBACMxkF,WAAY,SAAUsyC,QAnnBb,EAmnBgDhzE,OAAQA,OAAQq/B,cAnnBhE,GAqnBf6lF,eAAwB,QAA+B,CACvD,GAAqBK,cAA4C,GAA7BL,eAAwB,QACxD,gCAAkCA,eAAwB,QAAI,eAAiBllH,OAAS,+DACxF,wCAA0CA,OAAS,mBAAqBklH,eAAwB,QAAI,cACxG7kH,MAAKu+G,YAAY,GAAI/5G,OAAM0gH,eAE/BllH,KAAK8hH,cAActhG,IAAI7gB,OAAQklH,gBAEnC,MAAOA,iBAQXp/E,qBAAqBllC,UAAUi9G,kBAM/B,SAAU79G,OAAQsiB,WAAYq7F,gBAC1B,GAAqB11G,UAAW5H,KAAK8jH,cAAcnkH,OAAQ29G,eAC3D,OAAK11G,UAKE5H,KAAKghC,gBAAgBp5B,SAAUqa,aAJlCjiB,KAAKu+G,YAAY,GAAI/5G,OAAM,4BAA8B7E,QAAU29G,eAAiB,gBAChFA,eAAiB,MACdt9G,KAAKghC,gBAAgB,SAAWrhC,OAAQsiB,cASvDwjB,qBAAqBllC,UAAUujH,cAK/B,SAAUnkH,OAAQ29G,gBACd,IACI,MAAOt9G,MAAKshC,KAAK6jF,qBAAqBxlH,OAAQ29G,gBAElD,MAAwBhkG,GACpB2sB,QAAQ1hC,MAAM,6BAA+B5E,OAAS,sBAAwB29G,gBAC9Et9G,KAAKu+G,YAAYjlG,MAAGpV,GAAWo5G,gBAEnC,MAAO,OAEJ73E,wBAkBPD,mBAAsB,WACtB,QAASA,oBAAmBlE,KAAMugF,mBAC9B7hH,KAAKshC,KAAOA,KACZthC,KAAK6hH,kBAAoBA,kBACzB7hH,KAAKolH,aAAe,GAAIz8F,KACxB3oB,KAAKqlH,gBAAkB,GAAI18F,KAC3B3oB,KAAKy0G,SAAW,GAAI9rF,KACpB3oB,KAAKmiH,2BAA6B,GAAIx5F,KAmJ1C,MA7IA6c,oBAAmBjlC,UAAUg/B,cAI7B,SAAU33B,UAIN,OAAQ5H,KAAKshC,KAAKY,aAAa9gB,yBAAyBxZ,YAO5D49B,mBAAmBjlC,UAAUq0G,kBAK7B,SAAUhtG,SAAU09G,sBAChB,MAAOtlH,MAAKshC,KAAKszE,kBAAkBhtG,SAAU09G,uBAOjD9/E,mBAAmBjlC,UAAUw1G,oBAK7B,SAAUp0F,SAAU4jG,sBAChB,MAAOvlH,MAAKshC,KAAKy0E,oBAAoBp0F,SAAU4jG,uBAMnD//E,mBAAmBjlC,UAAUk/E,eAI7B,SAAU09B,cACNA,aAAa/lE,iBACb,IAAqBnY,SAAUj/B,KAAKolH,aAAa7kG,IAAI48F,aAKrD,OAJKl+E,WACDj/B,KAAKwlH,iBAAiBrI,aAAav1G,UACnCq3B,QAA6Bj/B,KAAKolH,aAAa7kG,IAAI48F,eAEhDl+E,SAAW,MAMtBuG,mBAAmBjlC,UAAUsiC,aAI7B,SAAUj7B,UACN,MAAI5H,MAAKwlH,iBAAiB59G,UACfnE,MAAMsgB,KAAK/jB,KAAKolH,aAAapuF,QAAQhU,OAAO,SAAU+b,QAAU,MAAOA,QAAOn3B,WAAaA,WAE/F,MAMX49B,mBAAmBjlC,UAAUo6G,YAI7B,SAAUwC,cAEN,MADAA,cAAa/lE,kBACap3C,KAAKy0G,SAASl0F,IAAI48F,eAUhD33E,mBAAmBjlC,UAAUyzG,mBAK7B,SAAUoH,kBACN,MAAOp7G,MAAKmiH,2BAA2B5hG,IAAI66F,mBAAqB,MAMpE51E,mBAAmBjlC,UAAUu+B,WAI7B,SAAUG,SAAWj/B,KAAKolH,aAAa5kG,IAAIye,QAAQF,OAAQE,UAK3DuG,mBAAmBjlC,UAAUilH,iBAI7B,SAAU59G,UACN,GAAI27B,OAAQvjC,KACSylH,WAAazlH,KAAKqlH,gBAAgB9kG,IAAI3Y,SAC3D,IAAkB,MAAd69G,WACA,MAAOA,WAEX,IAAqBvmF,MAAO,IAC5B,IAAIl/B,KAAKu/B,cAAc33B,UAAW,CAC9B,GAAqB89G,iBAAkBhkG,gBAAgB9Z,SACvD,KACIs3B,KAAOl/B,KAAKshC,KAAKyzE,YAAY2Q,iBAEjC,MAAwBpsG,GAEpB,KADA2sB,SAAQ1hC,MAAM,8BAAgCmhH,iBACxCpsG,GAKd,GAFAmsG,WAAqB,MAARvmF,KACbl/B,KAAKqlH,gBAAgB7kG,IAAI5Y,SAAU69G,YAC/BvmF,KAAM,CACN,GAAI9lB,IAAKqmB,qBAAqBz/B,KAAK6hH,kBAAmB7hH,KAAM4H,SAAUs3B,MAAOf,WAAa/kB,GAAG+kB,WAAY8M,UAAY7xB,GAAG6xB,UAAWwpE,SAAWr7F,GAAGq7F,QACjJxpE,WAAUpkC,QAAQ,SAAUo4B,SAAW,MAAOsE,OAAM6hF,aAAa5kG,IAAIye,QAAQF,OAAQE,WACjFd,YACAn+B,KAAKmiH,2BAA2B3hG,IAAI5Y,SAAUu2B,YAElDs2E,SAAS5tG,QAAQ,SAAU4tG,UAAYlxE,MAAMkxE,SAASj0F,IAAIi0F,SAAS11E,OAAQ01E,SAASA,YAExF,MAAOgR,aAEJjgF,sBA2EPmgF,gBAAmB,WACnB,QAASA,oBAET,MAAOA,oBAEPC,mBAAsB,WACtB,QAASA,sBACL5lH,KAAK6lH,WAAa,GAAIl9F,KAwE1B,MAnEAi9F,oBAAmBrlH,UAAUg/B,cAG7B,WAAc,OAAO,GAKrBqmF,mBAAmBrlH,UAAUq0G,kBAI7B,SAAUjzF,UAAY,MAAOA,WAK7BikG,mBAAmBrlH,UAAUw1G,oBAI7B,SAAUp0F,UAAY,MAAOA,WAK7BikG,mBAAmBrlH,UAAUk/E,eAI7B,SAAUn4E,WACN,MAAOtH,MAAK6lH,WAAWtlG,IAAIjZ,YAAc,MAK7Cs+G,mBAAmBrlH,UAAUsiC,aAG7B,WAAc,UAKd+iF,mBAAmBrlH,UAAUo6G,YAI7B,SAAUrzG,WAAa,MAAOA,YAK9Bs+G,mBAAmBrlH,UAAUyzG,mBAI7B,SAAUryF,UAAY,MAAO,OAK7BikG,mBAAmBrlH,UAAUu+B,WAI7B,SAAUG,SAAWj/B,KAAK6lH,WAAWrlG,IAAIye,QAAQF,OAAQE,UAClD2mF,sBAoCP79E,kBAAqB,WACrB,QAASA,mBAAkB0B,OAAQq8E,SAAUzwF,UAAW6S,MACpDloC,KAAKypC,OAASA,OACdzpC,KAAK8lH,SAAWA,SAChB9lH,KAAKq1B,UAAYA,UACjBr1B,KAAKkoC,KAAOA,KACZloC,KAAKN,WAWT,MANAqoC,mBAAkBxnC,UAAU+nC,yBAG5B,WACI,MAAO,IAAIP,mBAAkB/nC,KAAMA,KAAK8lH,SAAU9lH,KAAKq1B,UAAW,GAAI1M,OAEnEof,qBAEPg+E,YAAe,WACf,QAASA,aAAYziH,OACjBtD,KAAKsD,MAAQA,MAEjB,MAAOyiH,gBAoDP/9E,qBAAwB,WACxB,QAASA,sBAAqBvlB,WAC1BziB,KAAKyiB,UAAYA,UA2jBrB,MArjBAulB,sBAAqBznC,UAAUylH,SAI/B,SAAUp/G,KAAO,MAAOynB,4BAA2BznB,MAMnDohC,qBAAqBznC,UAAU6rF,oBAK/B,SAAU5mE,KAAM+E,KAKZ,MAJAA,KAAI2d,KAAK1nB,IAAIgF,KAAK/jB,KAAM+jB,KAAKliB,MAAMwiB,gBAAgB9lB,KAAMuqB,MACrD/E,KAAK4gE,YAAYnuD,aAAakI,WAC9B5V,IAAI7qB,QAAQqH,KAAKye,KAAK/jB,MAEnB,MAOXumC,qBAAqBznC,UAAU6pF,kBAK/B,SAAUvkE,KAAM0E,KAGZ,IAFA,GAAqBjnB,OAAQuiB,KAAKviB,MAAMwiB,gBAAgB9lB,KAAMuqB,KACzC07F,QAAU17F,IACb,MAAX07F,SAAiB,CACpB,GAAIA,QAAQ/9E,KAAKnU,IAAIlO,KAAKpkB,MAEtB,MADAwkH,SAAQ/9E,KAAK1nB,IAAIqF,KAAKpkB,KAAM6B,OACrBA,KAEX2iH,SAA6BA,QAAe,OAEhD,KAAM,IAAIzhH,OAAM,yBAA2BqhB,KAAKpkB,OAOpDumC,qBAAqBznC,UAAU2pF,iBAK/B,SAAUtjF,IAAK2jB,KACX,GAAqBu7D,SAA6Bl/E,IAAS,IAC3D,IAAmB,MAAfA,IAAIqjF,QACJ,OAAQrjF,IAAIqjF,SACR,IAAKL,YAAWE,MACZ,MAAOv/D,KAAIu7F,SAASr4E,SACxB,KAAKm8C,YAAWC,KACZ,MAAOt/D,KAAIu7F,QACf,KAAKl8B,YAAWG,WACZjE,QAAUogC,iBACV,MACJ,KAAKt8B,YAAWI,WACZlE,QAAUqgC,iBACV,MACJ,SACI,KAAM,IAAI3hH,OAAM,4BAA8BoC,IAAIqjF,SAI9D,IADA,GAAqBg8B,SAAU17F,IACb,MAAX07F,SAAiB,CACpB,GAAIA,QAAQ/9E,KAAKnU,IAAI+xD,SACjB,MAAOmgC,SAAQ/9E,KAAK3nB,IAAIulE,QAE5BmgC,SAA6BA,QAAe,OAEhD,KAAM,IAAIzhH,OAAM,yBAA2BshF,UAO/C99C,qBAAqBznC,UAAU+pF,kBAK/B,SAAUzkE,KAAM0E,KACZ,GAAqBhW,UAAWsR,KAAKtR,SAASuR,gBAAgB9lB,KAAMuqB,KAC/CnlB,MAAQygB,KAAKzgB,MAAM0gB,gBAAgB9lB,KAAMuqB,KACzCjnB,MAAQuiB,KAAKviB,MAAMwiB,gBAAgB9lB,KAAMuqB,IAE9D,OADAhW,UAASnP,OAAS9B,MACXA,OAOX0kC,qBAAqBznC,UAAUiqF,mBAK/B,SAAU3kE,KAAM0E,KACZ,GAAqBhW,UAAWsR,KAAKtR,SAASuR,gBAAgB9lB,KAAMuqB,KAC/CjnB,MAAQuiB,KAAKviB,MAAMwiB,gBAAgB9lB,KAAMuqB,IAE9D,OADAhW,UAASsR,KAAKpkB,MAAQ6B,MACfA,OAOX0kC,qBAAqBznC,UAAUsqF,sBAK/B,SAAUhlE,KAAM0E,KACZ,GAEqB7jB,QAFA6N,SAAWsR,KAAKtR,SAASuR,gBAAgB9lB,KAAMuqB,KAC/C5oB,KAAO3B,KAAK2tF,oBAAoB9nE,KAAKlkB,KAAM4oB,IAEhE,IAAoB,MAAhB1E,KAAKokE,QACL,OAAQpkE,KAAKokE;4CACT,IAAKQ,eAAcC,YACfhkF,OAAS6N,SAAS3L,OAAO5G,MAAMuS,SAAU5S,KACzC,MACJ,KAAK8oF,eAAcE,oBACfjkF,OAAS6N,SAAS6xG,WAAY3vD,KAAM90D,KAAK,IACzC,MACJ,KAAK8oF,eAAcG,KACflkF,OAAS6N,SAAS61B,KAAKpoC,MAAMuS,SAAU5S,KACvC,MACJ,SACI,KAAM,IAAI6C,OAAM,0BAA4BqhB,KAAKokE,aAIzDvjF,QAAS6N,SAA4BsR,KAAU,MAAG7jB,MAAMuS,SAAU5S,KAEtE,OAAO+E,SAOXshC,qBAAqBznC,UAAUuqF,wBAK/B,SAAUtlE,KAAM+E,KACZ,GAAqB5oB,MAAO3B,KAAK2tF,oBAAoBnoE,KAAK7jB,KAAM4oB,KAC3C87F,OAAS7gG,KAAK0B,EACnC,OAAIm/F,kBAAkBrgG,cAAeqgG,OAAOp8B,UAAYL,WAAWE,OAC/Dv/D,IAAIu7F,SAASzlH,YAAYE,UAAUF,YAAY2B,MAAMuoB,IAAIu7F,SAAUnkH,MAC5D,MAGsB6jB,KAAK0B,GAAGpB,gBAAgB9lB,KAAMuqB,KAC9CvoB,MAAM,KAAML,OAQjCqmC,qBAAqBznC,UAAUgsF,gBAK/B,SAAU/mE,KAAM+E,KACZ,MAAO,IAAIw7F,aAAYvgG,KAAKliB,MAAMwiB,gBAAgB9lB,KAAMuqB,OAO5Dyd,qBAAqBznC,UAAUssF,sBAK/B,SAAUrnE,KAAM+E,KACZ,GAAqBwqE,OAAQxsD,mBAAmB/iB,KAAM+E,IAAKvqB,KAK3D,OAJAuqB,KAAI2d,KAAK1nB,IAAIgF,KAAK/jB,KAAMszF,OACpBvvE,KAAK4gE,YAAYnuD,aAAakI,WAC9B5V,IAAI7qB,QAAQqH,KAAKye,KAAK/jB,MAEnB,MAOXumC,qBAAqBznC,UAAU+rF,oBAK/B,SAAU9mE,KAAM+E,KACZ,MAAO/E,MAAKK,KAAKC,gBAAgB9lB,KAAMuqB,MAO3Cyd,qBAAqBznC,UAAUwsF,YAK/B,SAAUvnE,KAAM+E,KAEZ,MADiC/E,MAAKvW,UAAU6W,gBAAgB9lB,KAAMuqB,KAE3DvqB,KAAKklB,mBAAmBM,KAAKkjE,SAAUn+D,KAEvB,MAAlB/E,KAAKmjE,UACH3oF,KAAKklB,mBAAmBM,KAAKmjE,UAAWp+D,KAE5C,MAOXyd,qBAAqBznC,UAAU8sF,kBAK/B,SAAU7nE,KAAM+E,KACZ,IACI,MAAOvqB,MAAKklB,mBAAmBM,KAAK2nE,UAAW5iE,KAEnD,MAAwBjR,GACpB,GAAqB+uB,UAAW9d,IAAI+d,0BAGpC,OAFAD,UAASH,KAAK1nB,IAAI0lG,kBAAmB5sG,GACrC+uB,SAASH,KAAK1nB,IAAI2lG,kBAAmB7sG,EAAEpB,OAChClY,KAAKklB,mBAAmBM,KAAK4nE,WAAY/kD,YAQxDL,qBAAqBznC,UAAUgtF,eAK/B,SAAU/nE,KAAM+E,KACZ,KAAM/E,MAAKjhB,MAAMuhB,gBAAgB9lB,KAAMuqB,MAO3Cyd,qBAAqBznC,UAAU0sF,iBAK/B,SAAUznE,KAAMhiB,SAAW,MAAO,OAMlCwkC,qBAAqBznC,UAAUyqF,qBAK/B,SAAUpkF,IAAK2jB,KACX,GAAqB5oB,MAAO3B,KAAK2tF,oBAAoB/mF,IAAIjF,KAAM4oB,KAC1CwqE,MAAQnuF,IAAImkF,UAAUjlE,gBAAgB9lB,KAAMuqB,IACjE,OAAO,KAAKwqE,MAAM3qD,KAAKpoC,MAAM+yF,WAAQ,IAAQnsF,OAAOjH,SAOxDqmC,qBAAqBznC,UAAU0qF,iBAK/B,SAAUrkF,IAAK2jB,KAAO,MAAO3jB,KAAItD,OAMjC0kC,qBAAqBznC,UAAU2qF,kBAK/B,SAAUtkF,IAAK2jB,KACX,MAAOvqB,MAAKyiB,UAAUC,yBAAyB9b,IAAItD,QAOvD0kC,qBAAqBznC,UAAU6qF,qBAK/B,SAAUxkF,IAAK2jB,KACX,MAAI3jB,KAAIqI,UAAU6W,gBAAgB9lB,KAAMuqB,KAC7B3jB,IAAI8hF,SAAS5iE,gBAAgB9lB,KAAMuqB,KAEpB,MAAjB3jB,IAAI+hF,UACF/hF,IAAI+hF,UAAU7iE,gBAAgB9lB,KAAMuqB,KAExC,MAOXyd,qBAAqBznC,UAAU8qF,aAK/B,SAAUzkF,IAAK2jB,KACX,OAAQ3jB,IAAIqI,UAAU6W,gBAAgB9lB,KAAMuqB,MAOhDyd,qBAAqBznC,UAAU+qF,uBAK/B,SAAU1kF,IAAK2jB,KACX,MAAO3jB,KAAIqI,UAAU6W,gBAAgB9lB,KAAMuqB,MAO/Cyd,qBAAqBznC,UAAUgrF,cAK/B,SAAU3kF,IAAK2jB,KACX,MAAO3jB,KAAItD,MAAMwiB,gBAAgB9lB,KAAMuqB,MAO3Cyd,qBAAqBznC,UAAUirF,kBAK/B,SAAU5kF,IAAK2jB,KAEX,MAAOmf,YAD2B9iC,IAAIugB,OAAOvhB,IAAI,SAAUqjC,OAAS,MAAOA,OAAMxnC,OACnDmF,IAAIqyB,WAAY1O,IAAKvqB,OAOvDgoC,qBAAqBznC,UAAU8rF,yBAK/B,SAAU7mE,KAAM+E,KACZ,GAAqBye,YAAaxjB,KAAK2B,OAAOvhB,IAAI,SAAUqjC,OAAS,MAAOA,OAAMxnC,MAKlF,OAJA8oB,KAAI2d,KAAK1nB,IAAIgF,KAAK/jB,KAAMioC,WAAWV,WAAYxjB,KAAKyT,WAAY1O,IAAKvqB,OACjEwlB,KAAK4gE,YAAYnuD,aAAakI,WAC9B5V,IAAI7qB,QAAQqH,KAAKye,KAAK/jB,MAEnB,MAOXumC,qBAAqBznC,UAAUorF,wBAK/B,SAAU/kF,IAAK2jB,KACX,GAAIgZ,OAAQvjC,KACS0rF,IAAM,WAAc,MAAO9kF,KAAI8kF,IAAI5lE,gBAAgByd,MAAOhZ,MAC1Du+D,IAAM,WAAc,MAAOliF,KAAIkiF,IAAIhjE,gBAAgByd,MAAOhZ,KAC/E,QAAQ3jB,IAAIswD,UACR,IAAKiwB,gBAAeC,OAChB,MAAOsE,QAAS5C,KACpB,KAAK3B,gBAAeG,UAChB,MAAOoE,SAAU5C,KACrB,KAAK3B,gBAAeE,UAChB,MAAOqE,QAAS5C,KACpB,KAAK3B,gBAAeI,aAChB,MAAOmE,SAAU5C,KACrB,KAAK3B,gBAAeU,IAChB,MAAO6D,QAAS5C,KACpB,KAAK3B,gBAAeW,GAChB,MAAO4D,QAAS5C,KACpB,KAAK3B,gBAAeM,KAChB,MAAOiE,OAAQ5C,KACnB,KAAK3B,gBAAeK,MAChB,MAAOkE,OAAQ5C,KACnB,KAAK3B,gBAAeO,OAChB,MAAOgE,OAAQ5C,KACnB,KAAK3B,gBAAeQ,SAChB,MAAO+D,OAAQ5C,KACnB,KAAK3B,gBAAeS,OAChB,MAAO8D,OAAQ5C,KACnB,KAAK3B,gBAAeY,MAChB,MAAO2D,OAAQ5C,KACnB,KAAK3B,gBAAea,YAChB,MAAO0D,QAAS5C,KACpB,KAAK3B,gBAAec,OAChB,MAAOyD,OAAQ5C,KACnB,KAAK3B,gBAAee,aAChB,MAAOwD,QAAS5C,KACpB,SACI,KAAM,IAAItkF,OAAM,oBAAsBoC,IAAIswD,YAQtDlvB,qBAAqBznC,UAAUqrF,kBAK/B,SAAUhlF,IAAK2jB,KAIX,MAFgC3jB,KAAI2N,SAASuR,gBAAgB9lB,KAAMuqB,KACjD3jB,IAAInF,OAQ1BumC,qBAAqBznC,UAAUsrF,iBAK/B,SAAUjlF,IAAK2jB,KAGX,MAFgC3jB,KAAI2N,SAASuR,gBAAgB9lB,KAAMuqB,KACvC3jB,IAAIxB,MAAM0gB,gBAAgB9lB,KAAMuqB,OAQhEyd,qBAAqBznC,UAAUwrF,sBAK/B,SAAUnlF,IAAK2jB,KACX,MAAOvqB,MAAK2tF,oBAAoB/mF,IAAIklF,QAASvhE,MAOjDyd,qBAAqBznC,UAAUyrF,oBAK/B,SAAUplF,IAAK2jB,KACX,GAAIgZ,OAAQvjC,KACS0G,SAErB,OADAE,KAAIklF,QAAQjlF,QAAQ,SAAU6Y,OAAS,MAAOhZ,QAAOgZ,MAAMzL,KAAOyL,MAAMpc,MAAMwiB,gBAAgByd,MAAOhZ,OAC9F7jB,QAOXshC,qBAAqBznC,UAAU2rF,eAK/B,SAAUtlF,IAAKpD,SACX,GAAqBzB,QAAS/B,KAAK2tF,oBAAoB/mF,IAAIoR,MAAOxU,QAClE,OAAOzB,QAAOA,OAAOD,OAAS,IAOlCkmC,qBAAqBznC,UAAUotF,oBAK/B,SAAUn6E,YAAa+W,KACnB,GAAIgZ,OAAQvjC,IACZ,OAAOwT,aAAY5N,IAAI,SAAUigB,MAAQ,MAAOA,MAAKC,gBAAgByd,MAAOhZ,QAOhFyd,qBAAqBznC,UAAU2kB,mBAK/B,SAAU+T,WAAY1O,KAClB,IAAK,GAAqBxf,GAAI,EAAGA,EAAIkuB,WAAWn3B,OAAQiJ,IAAK,CACzD,GAAqBya,MAAOyT,WAAWluB,GAClB9G,IAAMuhB,KAAKG,eAAe3lB,KAAMuqB,IACrD,IAAItmB,cAAe8hH,aACf,MAAO9hH,KAGf,MAAO,OAEJ+jC,wBAkBPk+E,kBAAoB,QACpBC,kBAAoB,QAgBpBG,yBAA4B,SAAU77G,QAEtC,QAAS67G,4BACL,MAAO77G,QAAOmjC,KAAK5tC,MAAM,IAAUA,KAuRvC,MAzRAC,WAAUqmH,yBAA0B77G,QASpC67G,yBAAyB/lH,UAAUssF,sBAKnC,SAAUrnE,KAAM+E,KACZ,GAAIgZ,OAAQvjC,IAWZ,OAVAuqB,KAAIuqE,UAAUtvE,MACdxlB,KAAKw3F,uBAAuBhyE,KAAM+E,KACf,MAAf/E,KAAKikB,SACLlf,IAAI+pE,MAAM9uE,KAAMA,KAAK/jB,KAAO,+BAC5B+jB,KAAKikB,OAAO3jB,gBAAgB9lB,KAAMuqB,KAClCA,IAAI6pE,QAAQ5uE,KAAM,iBAEtBA,KAAKmjB,QAAQ9hC,QAAQ,SAAU+hC,QAAU,MAAOrF,OAAMk0D,kBAAkBjyE,KAAMojB,OAAQre,OACtF/E,KAAKsjB,QAAQjiC,QAAQ,SAAUkiC,QAAU,MAAOxF,OAAMm0D,kBAAkBlyE,KAAMujB,OAAQxe,OACtFA,IAAIyqE,WACG,MAOXsxB,yBAAyB/lH,UAAUi3F,uBAKnC,SAAUhyE,KAAM+E,KACZA,IAAI+pE,MAAM9uE,KAAM,YAAcA,KAAK/jB,KAAO,KACZ,MAA1B+jB,KAAK4jB,mBACLppC,KAAK23F,aAAanyE,KAAK4jB,kBAAkBjiB,OAAQoD,KAErDA,IAAI6pE,QAAQ5uE,KAAM,OAClB+E,IAAIqqE,YAC0B,MAA1BpvE,KAAK4jB,mBACD5jB,KAAK4jB,kBAAkBhiB,KAAKtlB,OAAS,IACrCyoB,IAAI6pE,QAAQ5uE,KAAM,oBAClBxlB,KAAKklB,mBAAmBM,KAAK4jB,kBAAkBhiB,KAAMmD,MAG7DA,IAAIsqE,YACJtqE,IAAI6pE,QAAQ5uE,KAAM,MAQtB8gG,yBAAyB/lH,UAAUk3F,kBAMnC,SAAUjyE,KAAMojB,OAAQre,KACpBA,IAAI6pE,QAAQ5uE,KAAM,yBAA2BA,KAAK/jB,KAAO,gBAAkBmnC,OAAOnnC,KAAO,0BACzF8oB,IAAIqqE,YACAhsD,OAAOxhB,KAAKtlB,OAAS,IACrByoB,IAAI6pE,QAAQ5uE,KAAM,oBAClBxlB,KAAKklB,mBAAmB0jB,OAAOxhB,KAAMmD,MAEzCA,IAAIsqE,YACJtqE,IAAI6pE,QAAQ5uE,KAAM,SAQtB8gG,yBAAyB/lH,UAAUm3F,kBAMnC,SAAUlyE,KAAMujB,OAAQxe,KACpBA,IAAI+pE,MAAM9uE,KAAMA,KAAK/jB,KAAO,cAAgBsnC,OAAOtnC,KAAO,gBAC1DzB,KAAK23F,aAAa5uD,OAAO5hB,OAAQoD,KACjCA,IAAI6pE,QAAQ5uE,KAAM,OAClB+E,IAAIqqE,YACA7rD,OAAO3hB,KAAKtlB,OAAS,IACrByoB,IAAI6pE,QAAQ5uE,KAAM,oBAClBxlB,KAAKklB,mBAAmB6jB,OAAO3hB,KAAMmD,MAEzCA,IAAIsqE,YACJtqE,IAAI6pE,QAAQ5uE,KAAM,OAOtB8gG,yBAAyB/lH,UAAU2pF,iBAKnC,SAAUtjF,IAAK2jB,KACX,GAAI3jB,IAAIqjF,UAAYL,WAAWC,KAC3Bt/D,IAAI+pE,MAAM1tF,IAAK,YAEd,CAAA,GAAIA,IAAIqjF,UAAYL,WAAWE,MAChC,KAAM,IAAItlF,OAAM,+EAGhBiG,QAAOlK,UAAU2pF,iBAAiBt8C,KAAK5tC,KAAM4G,IAAK2jB,KAEtD,MAAO,OAOX+7F,yBAAyB/lH,UAAU6rF,oBAKnC,SAAU5mE,KAAM+E,KAIZ,MAHAA,KAAI+pE,MAAM9uE,KAAM,OAASA,KAAK/jB,KAAO,OACrC+jB,KAAKliB,MAAMwiB,gBAAgB9lB,KAAMuqB,KACjCA,IAAI6pE,QAAQ5uE,KAAM,KACX,MAOX8gG,yBAAyB/lH,UAAUgrF,cAKnC,SAAU3kF,IAAK2jB,KAEX,MADA3jB,KAAItD,MAAMwiB,gBAAgB9lB,KAAMuqB,KACzB,MAOX+7F,yBAAyB/lH,UAAUuqF,wBAKnC,SAAUjlE,KAAM0E,KACZ,GAAqB87F,QAASxgG,KAAKqB,EAanC,OAZIm/F,kBAAkBrgG,cAAeqgG,OAAOp8B,UAAYL,WAAWE,OACzBv/D,IAAiB,aAAS,OAAEzE,gBAAgB9lB,KAAMuqB,KACxFA,IAAI+pE,MAAMzuE,KAAM,cACZA,KAAKlkB,KAAKG,OAAS,IACnByoB,IAAI+pE,MAAMzuE,KAAM,MAChB7lB,KAAK2tF,oBAAoB9nE,KAAKlkB,KAAM4oB,IAAK,MAE7CA,IAAI+pE,MAAMzuE,KAAM,MAGhBpb,OAAOlK,UAAUuqF,wBAAwBl9C,KAAK5tC,KAAM6lB,KAAM0E,KAEvD,MAOX+7F,yBAAyB/lH,UAAUirF,kBAKnC,SAAU5kF,IAAK2jB,KAQX,MAPAA,KAAI+pE,MAAM1tF,IAAK,aACf5G,KAAK23F,aAAa/wF,IAAIugB,OAAQoD,KAC9BA,IAAI6pE,QAAQxtF,IAAK,OACjB2jB,IAAIqqE,YACJ50F,KAAKklB,mBAAmBte,IAAIqyB,WAAY1O,KACxCA,IAAIsqE,YACJtqE,IAAI+pE,MAAM1tF,IAAK,KACR,MAOX0/G,yBAAyB/lH,UAAU8rF,yBAKnC,SAAU7mE,KAAM+E,KAQZ,MAPAA,KAAI+pE,MAAM9uE,KAAM,YAAcA,KAAK/jB,KAAO,KAC1CzB,KAAK23F,aAAanyE,KAAK2B,OAAQoD,KAC/BA,IAAI6pE,QAAQ5uE,KAAM,OAClB+E,IAAIqqE,YACJ50F,KAAKklB,mBAAmBM,KAAKyT,WAAY1O,KACzCA,IAAIsqE,YACJtqE,IAAI6pE,QAAQ5uE,KAAM,KACX,MAOX8gG,yBAAyB/lH,UAAU8sF,kBAKnC,SAAU7nE,KAAM+E,KACZA,IAAI6pE,QAAQ5uE,KAAM,SAClB+E,IAAIqqE,YACJ50F,KAAKklB,mBAAmBM,KAAK2nE,UAAW5iE,KACxCA,IAAIsqE,YACJtqE,IAAI6pE,QAAQ5uE,KAAM,YAAckuE,kBAAkBjyF,KAAO,OACzD8oB,IAAIqqE,WACJ,IAAqBxH,aAAgCuG,kBAAkBnzE,IAAIkzE,kBAAkBrkE,KAAK,UAAU2I,WAAW,MAC/GC,aAAaC,SACZtvB,OAAO4c,KAAK4nE,WAIrB,OAHAptF,MAAKklB,mBAAmBkoE,WAAY7iE,KACpCA,IAAIsqE,YACJtqE,IAAI6pE,QAAQ5uE,KAAM,KACX,MAOX8gG,yBAAyB/lH,UAAUo3F,aAKnC,SAAUxwE,OAAQoD,KACdvqB,KAAKm2F,gBAAgB,SAAUltD,OAAS,MAAO1e,KAAI+pE,MAAM,KAAMrrD,MAAMxnC,OAAU0lB,OAAQoD,IAAK,MAMhG+7F,yBAAyB/lH,UAAU01F,qBAInC,SAAUltD,QACN,GAAqBtnC,KACrB,QAAQsnC,QACJ,IAAK0hD,eAAcC,YACfjpF,KAAO,QACP,MACJ,KAAKgpF,eAAcE,oBACflpF,KAAO,WACP,MACJ,KAAKgpF,eAAcG,KACfnpF,KAAO,MACP,MACJ,SACI,KAAM,IAAI+C,OAAM,2BAA6BukC,QAErD,MAAOtnC,OAEJ6kH,0BACTzwB,wBAsDEnrD,kBAAqB,SAAUjgC,QAE/B,QAASigC,mBAAkBjoB,WACvB,GAAI8gB,OAAQ94B,OAAOmjC,KAAK5tC,OAASA,IAKjC,OAJAujC,OAAM9gB,UAAYA,UAClB8gB,MAAMgjF,iBACNhjF,MAAMijF,kBACNjjF,MAAMkjF,qBACCljF,MAiGX,MAxGAtjC,WAAUyqC,kBAAmBjgC,QAa7BigC,kBAAkBnqC,UAAUoqC,iBAI5B,SAAUpgB,KACsB,GAAI2B,iBAAgB,GAAIvF,gBAAe3mB,KAAKymH,kBAAkB7gH,IAAI,SAAU8gH,WAAa,MAAO,IAAI9/F,iBAAgB8/F,UAAW3gG,SAAS2gG,YAAY,OAC3K/gG,eAAe3lB,KAAMuqB,MAK9BmgB,kBAAkBnqC,UAAUqqC,QAG5B,WAEI,IAAK,GADgBlkC,WACKqE,EAAI,EAAGA,EAAI/K,KAAKumH,cAAczkH,OAAQiJ,IAC5DrE,OAAO1G,KAAKumH,cAAcx7G,IAAM/K,KAAKwmH,eAAez7G,EAExD,OAAOrE,SAOXgkC,kBAAkBnqC,UAAU2qF,kBAK5B,SAAUtkF,IAAK2jB,KACX,GAAqBjnB,OAAQtD,KAAKyiB,UAAUC,yBAAyB9b,IAAItD,OACpDgG,GAAKtJ,KAAKwmH,eAAetjH,QAAQI,MACtD,KAAY,IAARgG,GAAW,CACXA,GAAKtJ,KAAKwmH,eAAe1kH,OACzB9B,KAAKwmH,eAAez/G,KAAKzD,MACzB,IAAqB+rD,QAASjoD,gBAAiBE,UAAWhE,SAAY,KACtEtD,MAAKumH,cAAcx/G,KAAK,OAASsoD,OAAS,IAAM/lD,IAGpD,MADAihB,KAAI+pE,MAAM1tF,IAAK5G,KAAKumH,cAAcj9G,KAC3B,MAOXohC,kBAAkBnqC,UAAU6rF,oBAK5B,SAAU5mE,KAAM+E,KAIZ,MAHI/E,MAAK4gE,YAAYnuD,aAAakI,WAC9BngC,KAAKymH,kBAAkB1/G,KAAKye,KAAK/jB,MAE9BgJ,OAAOlK,UAAU6rF,oBAAoBx+C,KAAK5tC,KAAMwlB,KAAM+E,MAOjEmgB,kBAAkBnqC,UAAU8rF,yBAK5B,SAAU7mE,KAAM+E,KAIZ,MAHI/E,MAAK4gE,YAAYnuD,aAAakI,WAC9BngC,KAAKymH,kBAAkB1/G,KAAKye,KAAK/jB,MAE9BgJ,OAAOlK,UAAU8rF,yBAAyBz+C,KAAK5tC,KAAMwlB,KAAM+E,MAOtEmgB,kBAAkBnqC,UAAUssF,sBAK5B,SAAUrnE,KAAM+E,KAIZ,MAHI/E,MAAK4gE,YAAYnuD,aAAakI,WAC9BngC,KAAKymH,kBAAkB1/G,KAAKye,KAAK/jB,MAE9BgJ,OAAOlK,UAAUssF,sBAAsBj/C,KAAK5tC,KAAMwlB,KAAM+E,MAE5DmgB,mBACT47E,0BA0BEK,YAAe,WACf,QAASA,aAAYtQ,kBAAmBC,gBAAiBC,eAAgBC,cAAeE,kBAAmB/4B,iBAAkB1vB,WAAY24D,gBAAiBhvC,SAAUivC,2BAChK7mH,KAAKq2G,kBAAoBA,kBACzBr2G,KAAKs2G,gBAAkBA,gBACvBt2G,KAAKu2G,eAAiBA,eACtBv2G,KAAKw2G,cAAgBA,cACrBx2G,KAAK02G,kBAAoBA,kBACzB12G,KAAK29E,iBAAmBA,iBACxB39E,KAAKiuD,WAAaA,WAClBjuD,KAAK4mH,gBAAkBA,gBACvB5mH,KAAK43E,SAAWA,SAChB53E,KAAK6mH,0BAA4BA,0BACjC7mH,KAAK8mH,uBAAyB,GAAIn+F,KAClC3oB,KAAK+mH,2BAA6B,GAAIp+F,KACtC3oB,KAAKgnH,+BAAiC,GAAIr+F,KAC1C3oB,KAAKinH,uBAAyB,GAAIt+F,KAClC3oB,KAAKknH,uBAAyB,EA4ZlC,MAtZAP,aAAYpmH,UAAU4mH,kBAItB,SAAUhmC,YACN,MAAOntC,WAAUC,WAAWj0C,KAAKonH,4BAA4BjmC,YAAY,KAM7EwlC,YAAYpmH,UAAU8mH,mBAItB,SAAUlmC,YACN,MAAO9sC,SAAQnoC,QAAQlM,KAAKonH,4BAA4BjmC,YAAY,KAMxEwlC,YAAYpmH,UAAU+mH,kCAItB,SAAUnmC,YACN,MAAOntC,WAAUC,WAAWj0C,KAAKunH,+BAA+BpmC,YAAY,KAMhFwlC,YAAYpmH,UAAUinH,mCAItB,SAAUrmC,YACN,MAAO9sC,SAAQnoC,QAAQlM,KAAKunH,+BAA+BpmC,YAAY,KAM3EwlC,YAAYpmH,UAAU6+E,oBAItB,SAAU31D,WAEN,MAD+BzpB,MAAKq2G,kBAAkBt1B,oBAAoBt3D,WACzB,kBAMrDk9F,YAAYpmH,UAAUknH,iBAItB,SAAUx8E,WACN,GAAI1H,OAAQvjC,IACZA,MAAK8rD,aACLhhB,iBAAiBG,WAAWpkC,QAAQ,SAAUo4B,SAC1CsE,MAAMo6C,iBAAiB7+C,YAAaC,OAAQE,QAAQ74B,KAAKkB,UAAW03B,SAAU,KAAM54B,KAAM64B,aAOlG0nF,YAAYpmH,UAAUmnH,cAItB,SAAUngH,KAAO,QAASvH,KAAK29E,iBAAiB8B,eAAel4E,MAK/Do/G,YAAYpmH,UAAUonH,sBAItB,SAAUC,KACN,GAAIrkF,OAAQvjC,IACZ,OAAO4nH,KAAIhiH,IAAI,SAAUo9E,KAAO,MAAOA,KAAI17E,YAAc0b,OAAO,SAAUzb,KAAO,OAAQg8B,MAAMmkF,cAAcngH,QAOjHo/G,YAAYpmH,UAAU6mH,4BAKtB,SAAUjmC,WAAYrB,QAClB,GAAIv8C,OAAQvjC,IACZ,OAAOg0C,WAAUztC,KAAKvG,KAAK6nH,aAAa1mC,WAAYrB,QAAS,WAEzD,MADAv8C,OAAMukF,mBAAmB3mC,WAAY,MAC9B59C,MAAM41E,eAAeh4B,eAQpCwlC,YAAYpmH,UAAUgnH,+BAKtB,SAAUpmC,WAAYrB,QAClB,GAAIv8C,OAAQvjC,IACZ,OAAOg0C,WAAUztC,KAAKvG,KAAK6nH,aAAa1mC,WAAYrB,QAAS,WACzD,GAAqBioC,sBAErB,OADAxkF,OAAMukF,mBAAmB3mC,WAAY4mC,qBAEjCC,gBAAiBzkF,MAAM41E,eAAeh4B,YACtC4mC,mBAAoBA,uBAShCpB,YAAYpmH,UAAUsnH,aAKtB,SAAUI,WAAYnoC,QAClB,GAAIv8C,OAAQvjC,KACSshF,WACA4mC,aAAkCloH,KAAKq2G,kBAAkBjzE,oBAAoB6kF,WAelG,OAZAjoH,MAAK2nH,sBAAsBO,aAAa3qF,iBAAiBgF,SAAS17B,QAAQ,SAAUshH,gBAEhF,GAAqBz+G,YAAgC65B,MAAM8yE,kBAAkBjzE,oBAAoB+kF,eACjG5kF,OAAMokF,sBAAsBj+G,WAAWo6B,oBAAoBj9B,QAAQ,SAAUU,KACzE,GAAqBg6E,SAAUh+C,MAAM8yE,kBAAkBx2B,sBAAsBn2E,WAAWtD,KAAKkB,UAAWC,IAAKu4E,OACzGyB,UACAD,QAAQv6E,KAAKw6E,WAGrBh+C,MAAMokF,sBAAsBj+G,WAAWq6B,eAClCl9B,QAAQ,SAAUU,KAAO,MAAOg8B,OAAM8yE,kBAAkBryB,sBAAsBz8E,SAEhFysC,UAAUG,IAAImtC,UAMzBqlC,YAAYpmH,UAAU44G,eAItB,SAAUh4B,YACN,GAAqB6mC,iBAAqChoH,KAAKinH,uBAAuB1mG,IAAI4gE,WAC1F,KAAK6mC,gBAAiB,CAClB,GAAqBt+G,YAAgC1J,KAAKq2G,kBAAkBjzE,oBAAoB+9C,YAE3EgQ,eAAiBnxF,KAAK6mH,0BAA0Bn9G,WAAWtD,KAAKkB,WAChEy4B,UAAYmL,sBACZvK,cAAgB3gC,KAAK02G,kBAAkB/kB,QAAQ5xD,UAAWr2B,WAAYynF,eAC3F62B,iBAAkBhoH,KAAKooH,gBAAgB3+G,eAAeC,YAAaq2B,UAAU9G,YAAY0H,cAAc8wD,oBACvGzxF,KAAKinH,uBAAuBzmG,IAAI9W,WAAWtD,KAAKkB,UAAW0gH,iBAE/D,MAAOA,kBAWXrB,YAAYpmH,UAAUunH,mBAMtB,SAAUG,WAAYI,uBAClB,GAAI9kF,OAAQvjC,KACSsiC,SAA8BtiC,KAAKq2G,kBAAkBjzE,oBAAoB6kF,YACzEK,qBAAuB,GAAI3/F,KAC3B4/F,UAAY,GAAIvkG,KAChBwkG,gBAAkBxoH,KAAK2nH,sBAAsBrlF,SAAS/E,iBAAiBgF,QAC5FimF,iBAAgB3hH,QAAQ,SAAU4hH,UAC9B,GAAqBC,iBAAqCnlF,MAAM8yE,kBAAkBjzE,oBAAoBqlF,SACtGllF,OAAMokF,sBAAsBe,gBAAgB5kF,oBAAoBj9B,QAAQ,SAAU8hH,QAC9EL,qBAAqB9nG,IAAImoG,OAAQD,gBACjC,IAAqBnqC,SAAUh7C,MAAM8yE,kBAAkBv1B,qBAAqB6nC,OAC5E,IAAIpqC,QAAQz1D,cACRy/F,UAAUpsF,IAAIoH,MAAMqlF,wBAAwBrqC,QAASmqC,kBACjDL,uBAAuB,CACvB,GAAqBpwE,UAAW1U,MAAMslF,4BAA4BtqC,QAAQn4E,KAAKkB,UAAWohH,gBAC1FH,WAAUpsF,IAAI8b,UACdowE,sBAAsBthH,KAAuBw3E,QAAwB,uBAKrFiqC,gBAAgB3hH,QAAQ,SAAU4hH,UAC9B,GAAqBC,iBAAqCnlF,MAAM8yE,kBAAkBjzE,oBAAoBqlF,SACtGllF,OAAMokF,sBAAsBe,gBAAgB5kF,oBAAoBj9B,QAAQ,SAAU8hH,QAC9E,GAAqBpqC,SAAUh7C,MAAM8yE,kBAAkBv1B,qBAAqB6nC,OACxEpqC,SAAQz1D,aACRy1D,QAAQ3xD,gBAAgB/lB,QAAQ,SAAUiiH,oBACtC,GAAqBp/G,YAAgC4+G,qBAAqB/nG,IAAIuoG,mBAAmBpuE,cACjG6tE,WAAUpsF,IAAIoH,MAAMslF,4BAA4BC,mBAAmBpuE,cAAehxC,iBAI9Fg/G,gBAAgB97F,gBAAgB/lB,QAAQ,SAAUiiH,oBAC9C,IAAKvlF,MAAMmkF,cAAcoB,mBAAmBpuE,cAAcpzC,WAAY,CAClE,GAAqBoC,YAAgC4+G,qBAAqB/nG,IAAIuoG,mBAAmBpuE,cACjG6tE,WAAUpsF,IAAIoH,MAAMslF,4BAA4BC,mBAAmBpuE,cAAehxC,kBAI9F6+G,UAAU1hH,QAAQ,SAAUoxC,UAAY,MAAO1U,OAAMwlF,iBAAiB9wE,aAM1E0uE,YAAYpmH,UAAUyrD,cAItB,SAAU5lD,MACNpG,KAAKinH,uBAAuB7qF,OAAOh2B,MACnCpG,KAAKq2G,kBAAkBrqD,cAAc5lD,MACrCpG,KAAK+mH,2BAA2B3qF,OAAOh2B,MACCpG,KAAK8mH,uBAAuBvmG,IAAIna,OAEpEpG,KAAK8mH,uBAAuB1qF,OAAOh2B,OAM3CugH,YAAYpmH,UAAUurD,WAGtB,WACI9rD,KAAKq2G,kBAAkBvqD,aACvB9rD,KAAK8mH,uBAAuB/6D,QAC5B/rD,KAAK+mH,2BAA2Bh7D,QAChC/rD,KAAKinH,uBAAuBl7D,SAOhC46D,YAAYpmH,UAAUsoH,4BAKtB,SAAU/gH,SAAUw6B,UAChB,IAAKA,SACD,KAAM,IAAI99B,OAAM,aAAekB,UAAUoC,UAAY,qFAEzD,IAAqBkhH,kBAAmBhpH,KAAK+mH,2BAA2BxmG,IAAIzY,SAC5E,KAAKkhH,iBAAkB,CACnB,GAAqB//G,UAAWjJ,KAAKq2G,kBAAkBv1B,qBAAqBh5E,SAC5E+iC,iBAAgB5hC,SAChB,IAAqB+wG,UAAWh6G,KAAKq2G,kBAAkB32B,yBAAyBz2E,SAA6BA,SAA0B,iBAAEggH,eACzID,kBACI,GAAIE,mBAAiB,EAAMjgH,SAAS7C,KAAM4zG,SAAU13E,UAAWr5B,SAAS7C,OAC5EpG,KAAK+mH,2BAA2BvmG,IAAI1Y,SAAUkhH,kBAElD,MAAOA,mBAOXrC,YAAYpmH,UAAUqoH,wBAKtB,SAAU3/G,SAAUq5B,UAChB,GAAqB0mF,kBAAmBhpH,KAAK8mH,uBAAuBvmG,IAAItX,SAAS7C,KAAKkB,UAMtF,OALK0hH,oBACDn+E,gBAAgB5hC,UAChB+/G,iBAAmB,GAAIE,mBAAiB,EAAOjgH,SAAS7C,KAAM6C,SAAUq5B,SAAUA,SAAS/E,iBAAiB/U,YAC5GxoB,KAAK8mH,uBAAuBtmG,IAAIvX,SAAS7C,KAAKkB,UAAW0hH,mBAEtDA,kBAMXrC,YAAYpmH,UAAUwoH,iBAItB,SAAU9wE,UACN,GAAI1U,OAAQvjC,IACZ,KAAIi4C,SAASkxE,WAAb,CAGA,GAAqBlgH,UAAWgvC,SAAShvC,SACpBmgH,+BAAiC,GAAIzgG,KACrC0gG,cAAgBn+E,sBAChBkuE,oBAAsBp5G,KAAKu2G,eAAe7X,iBAAiB2qB,cAAepgH,SAC7FA,UAAkB,SAAEmvC,oBAAoBvxC,QAAQ,SAAUwyG,gBACxD,GAAqBmC,oBAAqBj4E,MAAMgzE,eAAe1X,cAAc3zD,sBAAuBjiC,SAAUowG,eAC9G+P,gCAA+B5oG,IAAuB64F,eAAyB,UAAGmC,sBAEtFx7G,KAAKspH,4BAA4BlQ,oBAAqBgQ,+BACtD,IACIhwG,KADyB6+B,SAAS3V,SAAS/E,iBAAiBkF,MAAM78B,IAAI,SAAUu6F,MAAQ,MAAO58D,OAAM8yE,kBAAkBvyB,eAAeqc,KAAK74F,aACtItH,KAAK04G,eAAezvG,SAAUgvC,SAAS3V,SAAU2V,SAASzvB,aAAamwF,eAAiBv/F,GAAG6+B,SAAUmrD,UAAYhqF,GAAGqpB,MACxG9B,cAAgB3gC,KAAKw2G,cAAc9X,iBAAiB2qB,cAAepgH,SAAU0vG,eAAgB5yF,SAASqzF,oBAAoB7a,WAAY6E,WACtImmB,WAAavpH,KAAKooH,gBAAgBz+G,eAAesuC,SAAS3V,SAASl8B,KAAM6xC,SAAShvC,UAAWogH,cAAcpwF,YAC3GuwF,UAAYD,WAAW5oF,cAAcysE,cACrCv0D,aAAe0wE,WAAW5oF,cAAc0sE,gBAC7Dp1D,UAASwxE,SAASD,UAAW3wE,gBAQjC8tE,YAAYpmH,UAAUm4G,eAMtB,SAAUzvG,SAAUq5B,SAAU+3E,sBAC1B,GAAI92E,OAAQvjC,KAESumC,oBAAyCt9B,SAAkB,SAAEs9B,oBAC7D/d,WAAa6xF,qBAAqBz0G,IAAI,SAAUojB,KAAO,MAAOua,OAAM8yE,kBAAkBt1B,oBAAoB/3D,IAAI1hB,aAC9Gm7B,MAAQH,SAAS/E,iBAAiBkF,MAAM78B,IAAI,SAAUu6F,MAAQ,MAAO58D,OAAM8yE,kBAAkBvyB,eAAeqc,KAAK74F,YACtI,OAAOtH,MAAKs2G,gBAAgB9iF,MAAMvqB,SAAgDA,SAAkB,SAAU,QAAGuf,WAAYia,MAAOH,SAASoX,QAAS3wC,kBAAkBu5B,SAASl8B,KAAM6C,SAA6BA,SAAkB,UAAIs9B,sBAO9OogF,YAAYpmH,UAAU+oH,4BAKtB,SAAU5iH,OAAQ0iH,gCACd,GAAI7lF,OAAQvjC,IACZ0G,QAAOo6B,aAAaj6B,QAAQ,SAAUwkB,IAAKtgB,GACvC,GAAqB2+G,qBAAyCN,+BAA+B7oG,IAAI8K,IAAI7V,WAChFm0G,gBAAkBpmF,MAAMqmF,mCAAmCF,oBAAqBN,+BACrG/9F,KAAI0V,SAAS4oF,oBAQrBhD,YAAYpmH,UAAUqpH,mCAKtB,SAAUljH,OAAQ0iH,gCAEd,MADAppH,MAAKspH,4BAA4B5iH,OAAQ0iH,gCAClCppH,KAAKooH,gBAAgBh/G,uBAAuB1C,OAAO2C,KAAMrJ,KAAKknH,0BAA2BxgH,OAAOq5B,UAAU9G,YAAYvyB,OAAO63F,YAOxIooB,YAAYpmH,UAAU6nH,gBAKtB,SAAUx+E,UAAW3Q,YACjB,MAAKj5B,MAAK4mH,gBAAgBtgF,OAIfkE,cAAcZ,UAAW3Q,WAAYj5B,KAAKiuD,WAAYjuD,KAAK4mH,gBAAgB1vE,YAH3EpP,oBAAoB7O,WAAYj5B,KAAKiuD,aAM7C04D,eAEPuC,iBAAoB,WACpB,QAASA,kBAAiBxwE,OAAQ5wC,SAAUmB,SAAUq5B,SAAU9Z,YAC5DxoB,KAAK04C,OAASA,OACd14C,KAAK8H,SAAWA,SAChB9H,KAAKiJ,SAAWA,SAChBjJ,KAAKsiC,SAAWA,SAChBtiC,KAAKwoB,WAAaA,WAClBxoB,KAAK6pH,WAA8B,KACnC7pH,KAAKmpH,YAAa,EAoBtB,MAbAD,kBAAiB3oH,UAAUkpH,SAK3B,SAAUD,UAAW3wE,cACjB74C,KAAK6pH,WAAaL,UACCxpH,KAAKiJ,SAA2B,kBAAE21E,YAAY4qC,UACjE,KAAK,GAAqBn6F,QAAQwpB,cACX74C,KAAKiJ,SAAsB,aAAEomB,MAAQwpB,aAAaxpB,KAEzErvB,MAAKmpH,YAAa,GAEfD,oBAsDPY,iBAAoB,WACpB,QAASA,qBAET,MAAOA,qBAwBPx+E,YAAe,WACf,QAASy+E,iBAAgBC,oBACE,KAAnBA,iBAA6BA,eAAiB,MAClDhqH,KAAKgqH,eAAiBA,eAgD1B,MA3BAD,iBAAgBxpH,UAAU2L,QAW1B,SAAUN,QAAS9C,KACf,GAAqBmhH,aAAcnhH,GACpB,OAAX8C,SAAmBA,QAAQ9J,OAAS,IACpCmoH,YAAc58E,YAAYzhC,QAASq+G,aAEvC,IAAqBC,eAAgBz+E,OAAOw+E,aACvBn9G,OAAS9M,KAAKgqH,cACnC,IAAc,MAAVl9G,QAAmC,MAAjBo9G,eACuB,WAAzCA,cAAcx+E,gBAAgBC,QAAsB,CACpD,GAAqBnhC,MAAO0/G,cAAcx+E,gBAAgBqB,KAG1D,OAFAjgC,QAASA,OAAOtK,QAAQ,OAAQ,IAChCgI,KAAOA,KAAKhI,QAAQ,OAAQ,IACrBsK,OAAS,IAAMtC,KAE1B,MAAOy/G,cAEJF,mBAmHP19E,SAAW,GAAIh3B,QAAO,4HActBq2B,iBACAC,OAAQ,EACRqB,SAAU,EACVC,OAAQ,EACRC,KAAM,EACNH,KAAM,EACNI,UAAW,EACXC,SAAU,EAEd1B,iBAAgBA,gBAAgBC,QAAU,SAC1CD,gBAAgBA,gBAAgBsB,UAAY,WAC5CtB,gBAAgBA,gBAAgBuB,QAAU,SAC1CvB,gBAAgBA,gBAAgBwB,MAAQ,OACxCxB,gBAAgBA,gBAAgBqB,MAAQ,OACxCrB,gBAAgBA,gBAAgByB,WAAa,YAC7CzB,gBAAgBA,gBAAgB0B,UAAY,UAiH5C,IAAI+8E,gBAAkB,WAClB,QAASA,mBAWT,MALAA,gBAAe5pH,UAAUggB,IAIzB,SAAUzX,KAAO,MAAO,IACjBqhH,kBAuBPC,UAAa,WACb,QAASA,WAAU9oF,KAAMC,qBAAsBs3E,cAAer3E,kBAC1DxhC,KAAKshC,KAAOA,KACZthC,KAAKuhC,qBAAuBA,qBAC5BvhC,KAAK64G,cAAgBA,cACrB74G,KAAKwhC,iBAAmBA,iBAiE5B,MA3DA4oF,WAAU7pH,UAAUyd,QAIpB,SAAUg5F,WACN,GAAIzzE,OAAQvjC,KACRoZ,GAAKuoB,4BAA4Bq1E,UAAWh3G,KAAKshC,KAAMthC,KAAKuhC,qBAAsBvhC,KAAKwhC,kBAAmBQ,MAAQ5oB,GAAG4oB,MAAOK,UAAYjpB,GAAGipB,SAC/I,OAAOgS,SACFF,IAAI9R,UAAUz8B,IAAI,SAAU08B,UAC7B,MAAOiB,OAAM/B,iBAAiB6/C,qCAAqC/+C,SAASl8B,KAAKkB,WAAW,MAE3Ff,KAAK,WACN,GAAqByrB,UAerB,IAdAgQ,MAAMn7B,QAAQ,SAAUm2B,MACpB,GAAqB87E,aACrB97E,MAAKxU,WAAW3hB,QAAQ,SAAU4nD,eAC9B,GAAqB8vB,SAAUh7C,MAAM/B,iBAAiBs/C,qBAAqBryB,cACvE8vB,UAAWA,QAAQz1D,aACnBgwF,UAAU/xG,KAAKw3E,WAGvBu6B,UAAUjyG,QAAQ,SAAUoC,UACxB,GAAqBuuE,MAA6CvuE,SAAkB,SAAW,SAC1EiN,oBAAsBqlC,oBAAoBC,UAA6BvyC,SAAkB,SAAEsvC,cAChHvmB,QAAOjrB,KAAK/E,MAAMgwB,OAA2BuR,MAAMs1E,cAAc9F,mBAAmBv7B,KAAMx6C,KAAKrb,SAAUzL,0BAG7G8b,OAAOlwB,OACP,KAAM,IAAI0C,OAAMwtB,OAAOpsB,IAAI,SAAU0T,GAAK,MAAOA,GAAEtT,aAAeH,KAAK,MAE3E,OAAO09B,OAAMs1E,iBAQrBuR,UAAU3pH,OAKV,SAAU6gC,KAAMwwC,QACZ,GAAqBlsC,YAAa,GAAIE,YACjBR,YAAcP,qBAAqBzD,MACnC5B,YAAc,GAAI6F,mBAClBhH,gBAAkB,GAAIiH,oBAAmBlE,KAAM5B,aAC/C6B,qBAAuB,GAAIkE,sBAAqBnE,KAAM5B,YAAanB,iBACnEmH,gBAAkB,GAAIC,iBAAgBpH,gBAAiBgD,sBACvDpsB,OAAS,GAAI+wB,iBAAiBC,qBAAsBC,kBAAkBC,SAAUC,QAAQ,IACxFG,WAAa,GAAIC,sBAAsBnmB,IAAK,SAAUzX,KAAO,MAAOw4B,MAAKqF,aAAa79B,OAAWw8B,YAAaM,WAAYzwB,QAC1H4xB,sBAAwB,GAAIC,0BAC5Br7B,SAAW,GAAIw7B,yBAAwBhyB,OAAQywB,WAAY,GAAIwB,kBAAiB1B,iBAAkB,GAAI2B,mBAAkB3B,iBAAkB,GAAI4B,cAAa5B,iBAAkBnH,gBAAiBwI,sBAAuBN,WAAYR,QAASvG,YAAagG,iBAEvPmzE,cAAgB,GAAI/F,eAAcltE,iBAAoBksC,OAE3E,QAASu4C,UADwB,GAAID,WAAU9oF,KAAMC,qBAAsBs3E,cAAeltG,UAC3D+5B,gBAAiBA,kBAE7C0kF,YAGX1qH,SAAQm0C,KAAOA,KACfn0C,QAAQwmC,eAAiBA,eACzBxmC,QAAQsH,2BAA6BA,2BACrCtH,QAAQ0iB,gBAAkBA,gBAC1B1iB,QAAQ4iB,oBAAsBA,oBAC9B5iB,QAAQstB,YAAcA,YACtBttB,QAAQinH,YAAcA,YACtBjnH,QAAQ2nC,kBAAoBA,kBAC5B3nC,QAAQ4nC,aAAeA,aACvB5nC,QAAQ0nC,iBAAmBA,iBAC3B1nC,QAAQyW,6BAA+BA,6BACvCzW,QAAQ67C,oBAAsBA,oBAC9B77C,QAAQmoC,iBAAmBA,iBAC3BnoC,QAAQunB,cAAgBA,cACxBvnB,QAAQynF,eAAiBA,eACzBznF,QAAQqpF,mBAAqBA,mBAC7BrpF,QAAQ+qF,cAAgBA,cACxB/qF,QAAQkqF,WAAaA,WACrBlqF,QAAQiqF,SAAWA,SACnBjqF,QAAQktF,UAAYA,UACpBltF,QAAQusF,UAAYA,UACpBvsF,QAAQstF,YAAcA,YACtBttF,QAAQkpF,gBAAkBA,gBAC1BlpF,QAAQ+rF,oBAAsBA,oBAC9B/rF,QAAQs5B,eAAiBA,eACzBt5B,QAAQg6B,oBAAsBA,oBAC9Bh6B,QAAQymB,aAAeA,aACvBzmB,QAAQyrF,kBAAoBA,kBAC5BzrF,QAAQ2nB,aAAeA,aACvB3nB,QAAQotF,OAASA,OACjBptF,QAAQ8oF,gBAAkBA,gBAC1B9oF,QAAQ6oF,mBAAqBA,mBAC7B7oF,QAAQ4oF,iBAAmBA,iBAC3B5oF,QAAQ+mB,iBAAmBA,iBAC3B/mB,QAAQ6nB,YAAcA,YACtB7nB,QAAQinB,eAAiBA,eACzBjnB,QAAQqnB,QAAUA,QAClBrnB,QAAQ0oF,YAAcA,YACtB1oF,QAAQyoF,aAAeA,aACvBzoF,QAAQsmB,YAAcA,YACtBtmB,QAAQwsB,gBAAkBA,gBAC1BxsB,QAAQ4tF,UAAYA,UACpB5tF,QAAQwtF,aAAeA,aACvBxtF,QAAQ2qF,aAAeA,aACvB3qF,QAAQ6qF,cAAgBA,cACxB7qF,QAAQyqF,aAAeA,aACvBzqF,QAAQu4B,aAAeA,aACvBv4B,QAAQgvB,UAAYA,UACpBhvB,QAAQ0lB,0BAA4BA,0BACpC1lB,QAAQ8uB,sBAAwBA,sBAChC9uB,QAAQ8nC,aAAeA,aACvB9nC,QAAQkF,eAAiBA,eACzBlF,QAAQiF,cAAgBA,cACxBjF,QAAQ0E,YAAcA,YACtB1E,QAAQ40C,QAAUA,QAClB50C,QAAQk1C,QAAUA,QAClBl1C,QAAQm1C,QAAUA,QAClBn1C,QAAQs1C,aAAeA,aACvBt1C,QAAQw1C,QAAUA,QAClBx1C,QAAQ01C,wBAA0BA,wBAClC11C,QAAQ41C,cAAgBA,cACxB51C,QAAQg2C,aAAeA,aACvBh2C,QAAQk2C,YAAcA,YACtBl2C,QAAQs6B,WAAaA,WACrBt6B,QAAQo6B,oBAAsBA,oBAC9Bp6B,QAAQ02C,0BAA4BA,0BACpC12C,QAAQ82C,aAAeA,aACvB92C,QAAQyoB,YAAcA,YACtBzoB,QAAQqpB,gBAAkBA,gBAC1BrpB,QAAQu6B,aAAeA,aACvBv6B,QAAQ26B,oBAAsBA,oBAC9B36B,QAAQo3C,oBAAsBA,oBAC9Bp3C,QAAQq3C,4BAA8BA,4BACtCr3C,QAAQ8G,iBAAmBA,iBAC3B9G,QAAQ0H,eAAiBA,eACzB1H,QAAQiI,oBAAsBA,oBAC9BjI,QAAQmI,cAAgBA,cACxBnI,QAAQsI,iBAAmBA,iBAC3BtI,QAAQuI,kBAAoBA,kBAC5BvI,QAAQwI,qBAAuBA,qBAC/BxI,QAAQg4C,mBAAqBA,mBAC7Bh4C,QAAQyI,UAAYA,UACpBzI,QAAQ0I,eAAiBA,eACzB1I,QAAQk4C,0BAA4BA,0BACpCl4C,QAAQq4C,wBAA0BA,wBAClCr4C,QAAQ+4C,yBAA2BA,yBACnC/4C,QAAQy5C,oBAAsBA,oBAC9Bz5C,QAAQ05C,wBAA0BA,wBAClC15C,QAAQi6C,kCAAoCA,kCAC5Cj6C,QAAQi7C,aAAeA,aACvBj7C,QAAQ4I,QAAUA,QAClB5I,QAAQqJ,kBAAoBA,kBAC5BrJ,QAAQ0J,uBAAyBA,uBACjC1J,QAAQ+J,eAAiBA,eACzB/J,QAAQiK,eAAiBA,eACzBjK,QAAQqlC,qBAAuBA,qBAC/BrlC,QAAQwlC,kBAAoBA,kBAC5BxlC,QAAQioC,YAAcA,YACtBjoC,QAAQ0hC,iBAAmBA,iBAC3B1hC,QAAQiiC,4BAA8BA,4BACtCjiC,QAAQ0iC,YAAcA,YACtB1iC,QAAQ+hC,mBAAqBA,mBAC7B/hC,QAAQ+zG,cAAgBA,cACxB/zG,QAAQq9B,aAAeA,aACvBr9B,QAAQimC,gBAAkBA,gBAC1BjmC,QAAQ8H,aAAeA,aACvB9H,QAAQ6lC,kBAAoBA,kBAC5B7lC,QAAQkiH,qBAAuBA,qBAC/BliH,QAAQ+lC,qBAAuBA,qBAC/B/lC,QAAQmlC,mBAAqBA,mBAC7BnlC,QAAQ8lC,mBAAqBA,mBAC7B9lC,QAAQmL,QAAUA,QAClBnL,QAAQimH,gBAAkBA,gBAC1BjmH,QAAQkmH,mBAAqBA,mBAC7BlmH,QAAQoqH,iBAAmBA,iBAC3BpqH,QAAQ2rC,sCAAwCA,sCAChD3rC,QAAQ6rC,gCAAkCA,gCAC1C7rC,QAAQ4rC,YAAcA,YACtB5rC,QAAQ8rC,aAAeA,aACvB9rC,QAAQyqH,eAAiBA,eACzBzqH,QAAQq4F,sBAAwBA,sBAChCr4F,QAAQ0qH,UAAYA,UACpB1qH,QAAQmmC,eAAiBA,eACzBnmC,QAAQozG,cAAgBA,cACxBpzG,QAAQqwE,WAAaA,WACrBrwE,QAAQqhB,MAAQA,MAChBrhB,QAAQohB,OAASA,OACjBphB,QAAQkhB,IAAMA,IACdlhB,QAAQmhB,IAAMA,IACdnhB,QAAQgnC,oBAAsBA,oBAC9BhnC,QAAQyyD,YAAcA,YACtBzyD,QAAQ4yD,UAAYA,UACpB5yD,QAAQ6yD,IAAMA,IACd7yD,QAAQ8yD,MAAQA,MAChB9yD,QAAQm2B,UAAYA,UACpBn2B,QAAQizD,iBAAmBA,iBAC3BjzD,QAAQkzD,MAAQA,MAChBlzD,QAAQmzD,YAAcA,YACtBnzD,QAAQozD,aAAeA,aACvBpzD,QAAQqzD,cAAgBA,cACxBrzD,QAAQszD,iBAAmBA,iBAC3BtzD,QAAQuzD,UAAYA,UACpBvzD,QAAQwzD,WAAaA,WACrBxzD,QAAQyzD,YAAcA,YACtBzzD,QAAQ0zD,iBAAmBA,iBAC3B1zD,QAAQ2zD,aAAeA,aACvB3zD,QAAQ4zD,WAAaA,WACrB5zD,QAAQ6zD,cAAgBA,cACxB7zD,QAAQ+zD,OAASA,OACjB/zD,QAAQi0D,UAAYA,UACpBj0D,QAAQk0D,cAAgBA,cACxBl0D,QAAQm0D,WAAaA;8BACrBn0D,QAAQo0D,eAAiBA,eACzBp0D,QAAQq0D,aAAeA,aACvBr0D,QAAQk2B,cAAgBA,cACxBl2B,QAAQs0D,gBAAkBA,gBAC1Bt0D,QAAQw0D,eAAiBA,eACzBx0D,QAAQy0D,oBAAsBA,oBAC9Bz0D,QAAQ00D,eAAiBA,eACzB10D,QAAQyT,iBAAmBA,iBAC3BzT,QAAQ0Q,UAAYA,UACpB1Q,QAAQonC,MAAQA,MAChBpnC,QAAQyQ,MAAQA,MAChBzQ,QAAQsxD,IAAMA,IACdtxD,QAAQ4R,aAAeA,aACvB5R,QAAQyS,QAAUA,QAClBzS,QAAQ20D,mBAAqBA,mBAC7B30D,QAAQ60D,2BAA6BA,2BACrC70D,QAAQmnC,OAASA,OACjBnnC,QAAQo1D,UAAYA,UACpBp1D,QAAQ+kB,qBAAuBA,qBAC/B/kB,QAAQynC,wBAA0BA,wBAClCznC,QAAQ81B,KAAOA,KACf91B,QAAQo7C,UAAYA,UACpBp7C,QAAQs7C,cAAgBA,cACxBt7C,QAAQiB,UAAYiyB,YACpBlzB,QAAQyK,QAAUA,QAClBzK,QAAQ2e,QAAUA,QAClB3e,QAAQkK,SAAWA,SACnBlK,QAAQkL,iBAAmBA,iBAC3BlL,QAAQ4K,SAAWA,SACnB5K,QAAQmyB,gBAAkBA,gBAC1BnyB,QAAQshE,UAAYA,UACpBthE,QAAQomC,WAAaA,WACrBpmC,QAAQomE,kBAAoBA,kBAC5BpmE,QAAQwd,qBAAuBA,qBAC/Bxd,QAAQi8C,eAAiBA,eACzBj8C,QAAQ0M,YAAcA,YACtB1M,QAAQ6M,cAAgBA,cACxB7M,QAAQ+M,YAAcA,YACtB/M,QAAQgN,aAAeA,aACvBhN,QAAQiN,YAAcA,YACtBjN,QAAQmN,eAAiBA,eACzBnN,QAAQq8C,eAAiBA,eACzBr8C,QAAQgyB,aAAeA,aACvBhyB,QAAQ2uB,2BAA6BA,2BACrC3uB,QAAQy9B,kBAAoBA,kBAC5Bz9B,QAAQmW,cAAgBA,cACxBnW,QAAQiW,gBAAkBA,gBAC1BjW,QAAQkW,gBAAkBA,eAC1BlW,SAAQw6D,gBAAkBA,gBAC1Bx6D,QAAQ26D,WAAaA,WACrB36D,QAAQ4V,eAAiBA,eACzB5V,QAAQsnC,yBAA2BA,yBACnCtnC,QAAQ6zB,YAAcA,YACtB7zB,QAAQy7E,gBAAkBA,gBAC1Bz7E,QAAQu8E,oBAAsBA,oBAC9Bv8E,QAAQ08E,gBAAkBA,gBAC1B18E,QAAQ2+F,wBAA0BA,wBAClC3+F,QAAQ4+F,mBAAqBA,mBAC7B5+F,QAAQkoC,cAAgBA,cACxBloC,QAAQujG,mBAAqBA,mBAC7BvjG,QAAQwjG,oBAAsBA,oBAC9BxjG,QAAQwnC,eAAiBA,eACzBxnC,QAAQ+0B,aAAeA,aACvB/0B,QAAQi1B,yBAA2BA,yBACnCj1B,QAAQ+1B,wBAA0BA,wBAElCj1B,OAAO4f,eAAe1gB,QAAS,cAAgB4D,OAAO","file":"/Users/matsko/code/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && metadata.expression instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        metadata.expression.expression instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = syntaxError(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}